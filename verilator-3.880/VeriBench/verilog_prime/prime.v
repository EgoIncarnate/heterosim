// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="prime,hls_ip_2015_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.711000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=4,HLS_SYN_FF=4112,HLS_SYN_LUT=4289}" *)

module prime (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 77'b1;
parameter    ap_ST_st2_fsm_1 = 77'b10;
parameter    ap_ST_st3_fsm_2 = 77'b100;
parameter    ap_ST_st4_fsm_3 = 77'b1000;
parameter    ap_ST_st5_fsm_4 = 77'b10000;
parameter    ap_ST_st6_fsm_5 = 77'b100000;
parameter    ap_ST_st7_fsm_6 = 77'b1000000;
parameter    ap_ST_st8_fsm_7 = 77'b10000000;
parameter    ap_ST_st9_fsm_8 = 77'b100000000;
parameter    ap_ST_st10_fsm_9 = 77'b1000000000;
parameter    ap_ST_st11_fsm_10 = 77'b10000000000;
parameter    ap_ST_st12_fsm_11 = 77'b100000000000;
parameter    ap_ST_st13_fsm_12 = 77'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 77'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 77'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 77'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 77'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 77'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 77'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 77'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 77'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 77'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 77'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 77'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 77'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 77'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 77'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 77'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 77'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 77'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 77'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 77'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 77'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 77'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 77'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 77'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 77'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 77'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 77'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 77'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 77'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 77'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 77'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 77'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 77'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 77'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 77'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 77'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 77'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 77'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 77'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 77'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 77'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 77'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 77'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 77'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 77'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 77'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 77'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 77'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 77'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 77'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 77'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 77'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 77'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 77'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 77'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 77'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 77'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 77'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 77'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 77'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 77'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 77'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 77'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 77'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 77'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] n;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
(* fsm_encoding = "none" *) reg   [76:0] ap_CS_fsm = 77'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_93;
wire   [0:0] grp_prime_even_fu_74_ap_return;
reg   [0:0] tmp_reg_137;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_114;
wire   [0:0] tmp_2_fu_87_p2;
wire   [0:0] tmp_5_fu_98_p2;
reg   [0:0] tmp_5_reg_146;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_129;
wire   [0:0] icmp_fu_112_p2;
wire   [31:0] i_1_fu_118_p2;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_143;
wire   [0:0] grp_prime_divides_fu_80_ap_return;
wire   [31:0] grp_prime_even_fu_74_n;
wire   [31:0] grp_prime_divides_fu_80_n;
wire   [31:0] grp_prime_divides_fu_80_m;
reg  signed [31:0] i_reg_50;
reg   [0:0] p_0_phi_fu_65_p6;
reg   [0:0] p_0_reg_62;
wire   [31:0] grp_fu_92_p2;
wire   [30:0] tmp_1_fu_103_p4;
wire    grp_fu_92_ce;
reg   [76:0] ap_NS_fsm;


prime_even grp_prime_even_fu_74(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .n( grp_prime_even_fu_74_n ),
    .ap_return( grp_prime_even_fu_74_ap_return )
);

prime_divides grp_prime_divides_fu_80(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .n( grp_prime_divides_fu_80_n ),
    .m( grp_prime_divides_fu_80_m ),
    .ap_return( grp_prime_divides_fu_80_ap_return )
);

prime_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
prime_mul_32s_32s_32_6_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( i_reg_50 ),
    .din1( i_reg_50 ),
    .ce( grp_fu_92_ce ),
    .dout( grp_fu_92_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35) & (grp_prime_even_fu_74_ap_return == ap_const_lv1_0))) begin
        i_reg_50 <= ap_const_lv32_3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) & (tmp_reg_137 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_5_reg_146) & (ap_const_lv1_0 == grp_prime_divides_fu_80_ap_return))) begin
        i_reg_50 <= i_1_fu_118_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) & (tmp_reg_137 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_5_reg_146) & ~(ap_const_lv1_0 == grp_prime_divides_fu_80_ap_return))) begin
        p_0_reg_62 <= ap_const_lv1_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~(ap_const_lv1_0 == tmp_5_fu_98_p2))) begin
        p_0_reg_62 <= icmp_fu_112_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35) & ~(grp_prime_even_fu_74_ap_return == ap_const_lv1_0))) begin
        p_0_reg_62 <= tmp_2_fu_87_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        tmp_5_reg_146 <= tmp_5_fu_98_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        tmp_reg_137 <= grp_prime_even_fu_74_ap_return;
    end
end

always @ (tmp_reg_137 or tmp_5_reg_146 or ap_sig_cseq_ST_st77_fsm_76 or grp_prime_divides_fu_80_ap_return) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) & (~(ap_const_lv1_0 == grp_prime_divides_fu_80_ap_return) | ~(tmp_reg_137 == ap_const_lv1_0) | ~(ap_const_lv1_0 == tmp_5_reg_146)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (tmp_reg_137 or tmp_5_reg_146 or ap_sig_cseq_ST_st77_fsm_76 or grp_prime_divides_fu_80_ap_return) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) & (~(ap_const_lv1_0 == grp_prime_divides_fu_80_ap_return) | ~(tmp_reg_137 == ap_const_lv1_0) | ~(ap_const_lv1_0 == tmp_5_reg_146)))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_93) begin
    if (ap_sig_bdd_93) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_114) begin
    if (ap_sig_bdd_114) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_129) begin
    if (ap_sig_bdd_129) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_143) begin
    if (ap_sig_bdd_143) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

always @ (tmp_reg_137 or tmp_5_reg_146 or ap_sig_cseq_ST_st77_fsm_76 or grp_prime_divides_fu_80_ap_return or p_0_reg_62) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) & (tmp_reg_137 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_5_reg_146) & ~(ap_const_lv1_0 == grp_prime_divides_fu_80_ap_return))) begin
        p_0_phi_fu_65_p6 = ap_const_lv1_0;
    end else begin
        p_0_phi_fu_65_p6 = p_0_reg_62;
    end
end
always @ (ap_start or ap_CS_fsm or grp_prime_even_fu_74_ap_return or tmp_reg_137 or tmp_5_fu_98_p2 or tmp_5_reg_146 or grp_prime_divides_fu_80_ap_return) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            if (~(grp_prime_even_fu_74_ap_return == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st77_fsm_76;
            end else begin
                ap_NS_fsm = ap_ST_st37_fsm_36;
            end
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            if (~(ap_const_lv1_0 == tmp_5_fu_98_p2)) begin
                ap_NS_fsm = ap_ST_st77_fsm_76;
            end else begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            if ((~(ap_const_lv1_0 == grp_prime_divides_fu_80_ap_return) | ~(tmp_reg_137 == ap_const_lv1_0) | ~(ap_const_lv1_0 == tmp_5_reg_146))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st37_fsm_36;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_return = p_0_phi_fu_65_p6;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_114 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_129 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_143 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_93 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

assign grp_fu_92_ce = ap_const_logic_1;

assign grp_prime_divides_fu_80_m = n;

assign grp_prime_divides_fu_80_n = i_reg_50;

assign grp_prime_even_fu_74_n = n;

assign i_1_fu_118_p2 = ($signed(i_reg_50) + $signed(ap_const_lv32_2));

assign icmp_fu_112_p2 = (tmp_1_fu_103_p4 != ap_const_lv31_0? 1'b1: 1'b0);

assign tmp_1_fu_103_p4 = {{n[ap_const_lv32_1F : ap_const_lv32_1]}};

assign tmp_2_fu_87_p2 = (n == ap_const_lv32_2? 1'b1: 1'b0);

assign tmp_5_fu_98_p2 = (grp_fu_92_p2 > n? 1'b1: 1'b0);


endmodule //prime

