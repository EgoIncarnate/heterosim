// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="qurt,hls_ip_2013_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx980tffg1930-2l,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.832000,HLS_SYN_LAT=187,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module qurt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_q0,
        a_address1,
        a_ce1,
        a_q1,
        x1_1,
        x1_1_ap_vld,
        x1_2,
        x1_2_ap_vld,
        x2_1,
        x2_1_ap_vld,
        x2_2,
        x2_2_ap_vld,
        ap_return
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] a_address0;
output   a_ce0;
input  [63:0] a_q0;
output  [1:0] a_address1;
output   a_ce1;
input  [63:0] a_q1;
output  [63:0] x1_1;
output   x1_1_ap_vld;
output  [63:0] x1_2;
output   x1_2_ap_vld;
output  [63:0] x2_1;
output   x2_1_ap_vld;
output  [63:0] x2_2;
output   x2_2_ap_vld;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] a_address0;
reg a_ce0;
reg a_ce1;
reg x1_1_ap_vld;
reg[63:0] x1_2;
reg x1_2_ap_vld;
reg[63:0] x2_1;
reg x2_1_ap_vld;
reg[63:0] x2_2;
reg x2_2_ap_vld;
reg   [6:0] ap_CS_fsm = 7'b0000000;
wire   [63:0] grp_fu_163_p2;
reg   [63:0] reg_194;
wire   [63:0] grp_fu_155_p2;
reg   [63:0] reg_202;
wire   [63:0] grp_fu_190_p1;
reg   [63:0] reg_208;
reg   [63:0] a_load_reg_452;
wire   [0:0] grp_fu_184_p2;
reg   [0:0] tmp_reg_458;
reg   [63:0] a_load_1_reg_472;
reg   [63:0] a_load_2_reg_482;
wire   [63:0] grp_fu_168_p2;
reg   [63:0] tmp_3_reg_487;
reg   [0:0] tmp_16_reg_492;
wire   [31:0] p_Val2_19_fu_369_p3;
reg   [31:0] p_Val2_19_reg_497;
wire   [63:0] e5_fu_377_p1;
wire   [31:0] grp_qurt_sqrt_fu_150_ap_return;
reg   [31:0] tmp_5_reg_507;
wire    grp_qurt_sqrt_fu_150_ap_done;
wire   [63:0] w_fu_381_p1;
reg   [0:0] tmp_7_reg_517;
wire   [63:0] tmp_14_neg_fu_388_p2;
reg   [63:0] tmp_14_neg_reg_524;
wire   [63:0] tmp_12_neg_fu_397_p2;
reg   [63:0] tmp_12_neg_reg_529;
wire   [63:0] tmp_13_fu_403_p1;
wire   [63:0] grp_fu_173_p2;
reg   [63:0] w2_1_reg_539;
wire   [63:0] tmp_11_fu_421_p1;
wire   [63:0] grp_fu_159_p2;
reg   [63:0] tmp_6_reg_555;
wire    grp_qurt_sqrt_fu_150_ap_start;
wire    grp_qurt_sqrt_fu_150_ap_idle;
wire    grp_qurt_sqrt_fu_150_ap_ready;
wire   [63:0] grp_qurt_sqrt_fu_150_val_r;
reg   [5:0] p_0_phi_fu_135_p8;
reg   [5:0] p_0_reg_130;
reg    grp_qurt_sqrt_fu_150_ap_start_ap_start_reg = 1'b0;
wire   [63:0] grp_fu_179_p2;
wire   [63:0] tmp_15_fu_416_p1;
reg   [63:0] grp_fu_155_p0;
reg   [63:0] grp_fu_155_p1;
wire   [63:0] grp_fu_159_p0;
wire   [63:0] grp_fu_159_p1;
reg   [63:0] grp_fu_163_p0;
reg   [63:0] grp_fu_163_p1;
wire   [63:0] grp_fu_168_p0;
wire   [63:0] grp_fu_168_p1;
reg   [63:0] grp_fu_173_p0;
wire   [63:0] grp_fu_173_p1;
wire   [63:0] grp_fu_179_p0;
wire   [63:0] grp_fu_179_p1;
reg   [63:0] grp_fu_184_p0;
wire   [63:0] grp_fu_184_p1;
reg   [63:0] grp_fu_190_p0;
wire   [63:0] f_to_int_i_fu_221_p1;
wire   [63:0] f_neg_i_fu_225_p2;
wire   [0:0] tmp_17_fu_216_p2;
wire   [63:0] f_fu_231_p1;
wire   [63:0] x_assign_fu_235_p3;
wire   [63:0] p_Val2_s_fu_243_p1;
wire   [51:0] p_Result_9_fu_265_p1;
wire   [52:0] p_Result_10_fu_269_p3;
wire   [10:0] p_Result_8_fu_255_p4;
wire   [11:0] tmp_i_i_i_i_cast1_fu_281_p1;
wire   [11:0] sh_assign_fu_285_p2;
wire   [10:0] tmp_i_i_i_11_fu_299_p2;
wire   [0:0] isNeg_fu_291_p3;
wire   [11:0] sh_assign_4_fu_309_p1;
wire   [11:0] sh_assign_4_fu_309_p3;
wire   [31:0] tmp_8_i_i_i_fu_321_p0;
wire   [31:0] sh_assign_4_cast_fu_317_p1;
wire   [31:0] tmp_8_i_i_i_cast_fu_325_p0;
wire   [52:0] tmp_8_i_i_i_cast_fu_325_p1;
wire   [52:0] tmp_9_i_i_i_fu_329_p2;
wire   [135:0] tmp_i_i_i_fu_277_p1;
wire   [135:0] tmp_8_i_i_i_fu_321_p1;
wire   [135:0] tmp_9_i_i_i_cast_fu_335_p1;
wire   [135:0] tmp_11_i_i_i_fu_339_p2;
wire   [135:0] p_Val2_16_fu_345_p3;
wire   [31:0] p_Val2_17_fu_353_p4;
wire   [0:0] p_Result_s_fu_247_p3;
wire   [31:0] p_Val2_7_i_i_i_fu_363_p2;
wire   [63:0] tmp_14_to_int_fu_385_p1;
wire   [63:0] tmp_12_to_int_fu_394_p1;
wire   [63:0] tmp_16_to_int_fu_407_p1;
wire   [63:0] tmp_16_neg_fu_410_p2;
wire   [63:0] tmp_to_int_fu_425_p1;
wire   [63:0] tmp_neg_fu_428_p2;
wire   [9:0] p_0_cast_fu_443_p0;
wire    grp_fu_155_ce;
wire    grp_fu_159_ce;
reg    grp_fu_163_ce;
wire    grp_fu_168_ce;
wire    grp_fu_173_ce;
wire    grp_fu_179_ce;
wire    grp_fu_184_ce;
reg   [4:0] grp_fu_184_opcode;
wire    grp_fu_190_ce;
reg   [6:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 7'b0000000;
parameter    ap_ST_st2_fsm_1 = 7'b1;
parameter    ap_ST_st3_fsm_2 = 7'b10;
parameter    ap_ST_st4_fsm_3 = 7'b11;
parameter    ap_ST_st5_fsm_4 = 7'b100;
parameter    ap_ST_st6_fsm_5 = 7'b101;
parameter    ap_ST_st7_fsm_6 = 7'b110;
parameter    ap_ST_st8_fsm_7 = 7'b111;
parameter    ap_ST_st9_fsm_8 = 7'b1000;
parameter    ap_ST_st10_fsm_9 = 7'b1001;
parameter    ap_ST_st11_fsm_10 = 7'b1010;
parameter    ap_ST_st12_fsm_11 = 7'b1011;
parameter    ap_ST_st13_fsm_12 = 7'b1100;
parameter    ap_ST_st14_fsm_13 = 7'b1101;
parameter    ap_ST_st15_fsm_14 = 7'b1110;
parameter    ap_ST_st16_fsm_15 = 7'b1111;
parameter    ap_ST_st17_fsm_16 = 7'b10000;
parameter    ap_ST_st18_fsm_17 = 7'b10001;
parameter    ap_ST_st19_fsm_18 = 7'b10010;
parameter    ap_ST_st20_fsm_19 = 7'b10011;
parameter    ap_ST_st21_fsm_20 = 7'b10100;
parameter    ap_ST_st22_fsm_21 = 7'b10101;
parameter    ap_ST_st23_fsm_22 = 7'b10110;
parameter    ap_ST_st24_fsm_23 = 7'b10111;
parameter    ap_ST_st25_fsm_24 = 7'b11000;
parameter    ap_ST_st26_fsm_25 = 7'b11001;
parameter    ap_ST_st27_fsm_26 = 7'b11010;
parameter    ap_ST_st28_fsm_27 = 7'b11011;
parameter    ap_ST_st29_fsm_28 = 7'b11100;
parameter    ap_ST_st30_fsm_29 = 7'b11101;
parameter    ap_ST_st31_fsm_30 = 7'b11110;
parameter    ap_ST_st32_fsm_31 = 7'b11111;
parameter    ap_ST_st33_fsm_32 = 7'b100000;
parameter    ap_ST_st34_fsm_33 = 7'b100001;
parameter    ap_ST_st35_fsm_34 = 7'b100010;
parameter    ap_ST_st36_fsm_35 = 7'b100011;
parameter    ap_ST_st37_fsm_36 = 7'b100100;
parameter    ap_ST_st38_fsm_37 = 7'b100101;
parameter    ap_ST_st39_fsm_38 = 7'b100110;
parameter    ap_ST_st40_fsm_39 = 7'b100111;
parameter    ap_ST_st41_fsm_40 = 7'b101000;
parameter    ap_ST_st42_fsm_41 = 7'b101001;
parameter    ap_ST_st43_fsm_42 = 7'b101010;
parameter    ap_ST_st44_fsm_43 = 7'b101011;
parameter    ap_ST_st45_fsm_44 = 7'b101100;
parameter    ap_ST_st46_fsm_45 = 7'b101101;
parameter    ap_ST_st47_fsm_46 = 7'b101110;
parameter    ap_ST_st48_fsm_47 = 7'b101111;
parameter    ap_ST_st49_fsm_48 = 7'b110000;
parameter    ap_ST_st50_fsm_49 = 7'b110001;
parameter    ap_ST_st51_fsm_50 = 7'b110010;
parameter    ap_ST_st52_fsm_51 = 7'b110011;
parameter    ap_ST_st53_fsm_52 = 7'b110100;
parameter    ap_ST_st54_fsm_53 = 7'b110101;
parameter    ap_ST_st55_fsm_54 = 7'b110110;
parameter    ap_ST_st56_fsm_55 = 7'b110111;
parameter    ap_ST_st57_fsm_56 = 7'b111000;
parameter    ap_ST_st58_fsm_57 = 7'b111001;
parameter    ap_ST_st59_fsm_58 = 7'b111010;
parameter    ap_ST_st60_fsm_59 = 7'b111011;
parameter    ap_ST_st61_fsm_60 = 7'b111100;
parameter    ap_ST_st62_fsm_61 = 7'b111101;
parameter    ap_ST_st63_fsm_62 = 7'b111110;
parameter    ap_ST_st64_fsm_63 = 7'b111111;
parameter    ap_ST_st65_fsm_64 = 7'b1000000;
parameter    ap_ST_st66_fsm_65 = 7'b1000001;
parameter    ap_ST_st67_fsm_66 = 7'b1000010;
parameter    ap_ST_st68_fsm_67 = 7'b1000011;
parameter    ap_ST_st69_fsm_68 = 7'b1000100;
parameter    ap_ST_st70_fsm_69 = 7'b1000101;
parameter    ap_ST_st71_fsm_70 = 7'b1000110;
parameter    ap_ST_st72_fsm_71 = 7'b1000111;
parameter    ap_ST_st73_fsm_72 = 7'b1001000;
parameter    ap_ST_st74_fsm_73 = 7'b1001001;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv6_27 = 6'b100111;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_4010000000000000 = 64'b100000000010000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_4000000000000000 = 64'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv64_8000000000000000 = 64'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv12_C01 = 12'b110000000001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv11_3FF = 11'b1111111111;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_true = 1'b1;


qurt_sqrt grp_qurt_sqrt_fu_150(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_qurt_sqrt_fu_150_ap_start ),
    .ap_done( grp_qurt_sqrt_fu_150_ap_done ),
    .ap_idle( grp_qurt_sqrt_fu_150_ap_idle ),
    .ap_ready( grp_qurt_sqrt_fu_150_ap_ready ),
    .val_r( grp_qurt_sqrt_fu_150_val_r ),
    .ap_return( grp_qurt_sqrt_fu_150_ap_return )
);

qurt_dsub_64ns_64ns_64_4_full_dsp #(
    .ID( 5 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
qurt_dsub_64ns_64ns_64_4_full_dsp_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_155_p0 ),
    .din1( grp_fu_155_p1 ),
    .ce( grp_fu_155_ce ),
    .dout( grp_fu_155_p2 )
);

qurt_dsub_64ns_64ns_64_4_full_dsp #(
    .ID( 6 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
qurt_dsub_64ns_64ns_64_4_full_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_159_p0 ),
    .din1( grp_fu_159_p1 ),
    .ce( grp_fu_159_ce ),
    .dout( grp_fu_159_p2 )
);

qurt_dmul_64ns_64ns_64_4_max_dsp #(
    .ID( 7 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
qurt_dmul_64ns_64ns_64_4_max_dsp_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_163_p0 ),
    .din1( grp_fu_163_p1 ),
    .ce( grp_fu_163_ce ),
    .dout( grp_fu_163_p2 )
);

qurt_dmul_64ns_64ns_64_4_max_dsp #(
    .ID( 8 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
qurt_dmul_64ns_64ns_64_4_max_dsp_U8(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_168_p0 ),
    .din1( grp_fu_168_p1 ),
    .ce( grp_fu_168_ce ),
    .dout( grp_fu_168_p2 )
);

qurt_ddiv_64ns_64ns_64_14 #(
    .ID( 9 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
qurt_ddiv_64ns_64ns_64_14_U9(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_173_p0 ),
    .din1( grp_fu_173_p1 ),
    .ce( grp_fu_173_ce ),
    .dout( grp_fu_173_p2 )
);

qurt_ddiv_64ns_64ns_64_14 #(
    .ID( 10 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
qurt_ddiv_64ns_64ns_64_14_U10(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_179_p0 ),
    .din1( grp_fu_179_p1 ),
    .ce( grp_fu_179_ce ),
    .dout( grp_fu_179_p2 )
);

qurt_dcmp_64ns_64ns_1_3 #(
    .ID( 11 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
qurt_dcmp_64ns_64ns_1_3_U11(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_184_p0 ),
    .din1( grp_fu_184_p1 ),
    .ce( grp_fu_184_ce ),
    .opcode( grp_fu_184_opcode ),
    .dout( grp_fu_184_p2 )
);

qurt_sitodp_64s_64_3 #(
    .ID( 12 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
qurt_sitodp_64s_64_3_U12(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_190_p0 ),
    .ce( grp_fu_190_ce ),
    .dout( grp_fu_190_p1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_qurt_sqrt_fu_150_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_qurt_sqrt_fu_150_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_qurt_sqrt_fu_150_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
            grp_qurt_sqrt_fu_150_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_qurt_sqrt_fu_150_ap_ready)) begin
            grp_qurt_sqrt_fu_150_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~(grp_fu_184_p2 == ap_const_lv1_0))) begin
        p_0_reg_130[0] <= 1'b1;
        p_0_reg_130[1] <= 1'b1;
        p_0_reg_130[2] <= 1'b1;
        p_0_reg_130[5] <= 1'b1;
    end else if ((((ap_ST_st74_fsm_73 == ap_CS_fsm) & (tmp_reg_458 == ap_const_lv1_0) & ~(tmp_7_reg_517 == ap_const_lv1_0)) | (ap_ST_st56_fsm_55 == ap_CS_fsm) | (ap_ST_st42_fsm_41 == ap_CS_fsm))) begin
        p_0_reg_130[0] <= 1'b0;
        p_0_reg_130[1] <= 1'b0;
        p_0_reg_130[2] <= 1'b0;
        p_0_reg_130[5] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        a_load_1_reg_472 <= a_q0;
        a_load_2_reg_482 <= a_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        a_load_reg_452 <= a_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        p_Val2_19_reg_497 <= p_Val2_19_fu_369_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st26_fsm_25 == ap_CS_fsm))) begin
        reg_194 <= grp_fu_163_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st60_fsm_59 == ap_CS_fsm))) begin
        reg_202 <= grp_fu_155_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st26_fsm_25 == ap_CS_fsm) | (ap_ST_st22_fsm_21 == ap_CS_fsm))) begin
        reg_208 <= grp_fu_190_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st28_fsm_27 == ap_CS_fsm) & ~(grp_fu_184_p2 == ap_const_lv1_0))) begin
        tmp_12_neg_reg_529 <= tmp_12_neg_fu_397_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st28_fsm_27 == ap_CS_fsm) & (grp_fu_184_p2 == ap_const_lv1_0))) begin
        tmp_14_neg_reg_524 <= tmp_14_neg_fu_388_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        tmp_16_reg_492 <= grp_fu_184_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        tmp_3_reg_487 <= grp_fu_168_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st23_fsm_22 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_qurt_sqrt_fu_150_ap_done))) begin
        tmp_5_reg_507 <= grp_qurt_sqrt_fu_150_ap_return;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st60_fsm_59 == ap_CS_fsm)) begin
        tmp_6_reg_555 <= grp_fu_159_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st26_fsm_25 == ap_CS_fsm)) begin
        tmp_7_reg_517 <= grp_fu_184_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        tmp_reg_458 <= grp_fu_184_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st41_fsm_40 == ap_CS_fsm)) begin
        w2_1_reg_539 <= grp_fu_173_p2;
    end
end

/// a_address0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        a_address0 = ap_const_lv64_1;
    end else if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        a_address0 = ap_const_lv64_0;
    end else begin
        a_address0 = 'bx;
    end
end

/// a_ce0 assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        a_ce0 = ap_const_logic_1;
    end else begin
        a_ce0 = ap_const_logic_0;
    end
end

/// a_ce1 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        a_ce1 = ap_const_logic_1;
    end else begin
        a_ce1 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st74_fsm_73 == ap_CS_fsm)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st74_fsm_73 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// grp_fu_155_p0 assign process. ///
always @ (ap_CS_fsm or reg_194 or reg_208)
begin
    if ((ap_ST_st57_fsm_56 == ap_CS_fsm)) begin
        grp_fu_155_p0 = reg_208;
    end else if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        grp_fu_155_p0 = reg_194;
    end else begin
        grp_fu_155_p0 = 'bx;
    end
end

/// grp_fu_155_p1 assign process. ///
always @ (ap_CS_fsm or a_load_1_reg_472 or tmp_3_reg_487)
begin
    if ((ap_ST_st57_fsm_56 == ap_CS_fsm)) begin
        grp_fu_155_p1 = a_load_1_reg_472;
    end else if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        grp_fu_155_p1 = tmp_3_reg_487;
    end else begin
        grp_fu_155_p1 = 'bx;
    end
end

/// grp_fu_163_ce assign process. ///
always @ (ap_CS_fsm or grp_fu_184_p2 or grp_qurt_sqrt_fu_150_ap_done)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st11_fsm_10 == ap_CS_fsm) | (ap_ST_st26_fsm_25 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | ((ap_ST_st23_fsm_22 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_qurt_sqrt_fu_150_ap_done)) | (ap_ST_st24_fsm_23 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (grp_fu_184_p2 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm) | (ap_ST_st25_fsm_24 == ap_CS_fsm))) begin
        grp_fu_163_ce = ap_const_logic_1;
    end else begin
        grp_fu_163_ce = ap_const_logic_0;
    end
end

/// grp_fu_163_p0 assign process. ///
always @ (ap_CS_fsm or a_load_reg_452 or a_load_1_reg_472)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        grp_fu_163_p0 = a_load_1_reg_472;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st23_fsm_22 == ap_CS_fsm))) begin
        grp_fu_163_p0 = a_load_reg_452;
    end else begin
        grp_fu_163_p0 = 'bx;
    end
end

/// grp_fu_163_p1 assign process. ///
always @ (ap_CS_fsm or a_load_1_reg_472)
begin
    if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        grp_fu_163_p1 = ap_const_lv64_4000000000000000;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        grp_fu_163_p1 = a_load_1_reg_472;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        grp_fu_163_p1 = ap_const_lv64_4010000000000000;
    end else begin
        grp_fu_163_p1 = 'bx;
    end
end

/// grp_fu_173_p0 assign process. ///
always @ (ap_CS_fsm or reg_202 or reg_208 or tmp_13_fu_403_p1 or tmp_11_fu_421_p1)
begin
    if ((ap_ST_st61_fsm_60 == ap_CS_fsm)) begin
        grp_fu_173_p0 = reg_202;
    end else if ((ap_ST_st43_fsm_42 == ap_CS_fsm)) begin
        grp_fu_173_p0 = tmp_11_fu_421_p1;
    end else if ((ap_ST_st29_fsm_28 == ap_CS_fsm)) begin
        grp_fu_173_p0 = tmp_13_fu_403_p1;
    end else if ((ap_ST_st28_fsm_27 == ap_CS_fsm)) begin
        grp_fu_173_p0 = reg_208;
    end else begin
        grp_fu_173_p0 = 'bx;
    end
end

/// grp_fu_184_opcode assign process. ///
always @ (ap_CS_fsm or grp_fu_184_p2)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        grp_fu_184_opcode = ap_const_lv5_2;
    end else if ((ap_ST_st16_fsm_15 == ap_CS_fsm)) begin
        grp_fu_184_opcode = ap_const_lv5_3;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) | ((ap_ST_st26_fsm_25 == ap_CS_fsm) & (grp_fu_184_p2 == ap_const_lv1_0)))) begin
        grp_fu_184_opcode = ap_const_lv5_1;
    end else begin
        grp_fu_184_opcode = 'bx;
    end
end

/// grp_fu_184_p0 assign process. ///
always @ (ap_CS_fsm or a_q0 or reg_202)
begin
    if (((ap_ST_st26_fsm_25 == ap_CS_fsm) | (ap_ST_st24_fsm_23 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm))) begin
        grp_fu_184_p0 = reg_202;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        grp_fu_184_p0 = a_q0;
    end else begin
        grp_fu_184_p0 = 'bx;
    end
end

/// grp_fu_190_p0 assign process. ///
always @ (ap_CS_fsm or e5_fu_377_p1 or w_fu_381_p1)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        grp_fu_190_p0 = w_fu_381_p1;
    end else if ((ap_ST_st20_fsm_19 == ap_CS_fsm)) begin
        grp_fu_190_p0 = e5_fu_377_p1;
    end else begin
        grp_fu_190_p0 = 'bx;
    end
end

/// p_0_phi_fu_135_p8 assign process. ///
always @ (ap_CS_fsm or tmp_reg_458 or tmp_7_reg_517 or p_0_reg_130)
begin
    if (((ap_ST_st74_fsm_73 == ap_CS_fsm) & (tmp_reg_458 == ap_const_lv1_0) & ~(tmp_7_reg_517 == ap_const_lv1_0))) begin
        p_0_phi_fu_135_p8 = ap_const_lv6_0;
    end else begin
        p_0_phi_fu_135_p8 = p_0_reg_130;
    end
end

/// x1_1_ap_vld assign process. ///
always @ (ap_CS_fsm or tmp_reg_458 or tmp_7_reg_517)
begin
    if ((((ap_ST_st74_fsm_73 == ap_CS_fsm) & (tmp_reg_458 == ap_const_lv1_0) & ~(tmp_7_reg_517 == ap_const_lv1_0)) | (ap_ST_st56_fsm_55 == ap_CS_fsm) | (ap_ST_st42_fsm_41 == ap_CS_fsm))) begin
        x1_1_ap_vld = ap_const_logic_1;
    end else begin
        x1_1_ap_vld = ap_const_logic_0;
    end
end

/// x1_2 assign process. ///
always @ (ap_CS_fsm or tmp_reg_458 or tmp_7_reg_517 or w2_1_reg_539)
begin
    if ((((ap_ST_st74_fsm_73 == ap_CS_fsm) & (tmp_reg_458 == ap_const_lv1_0) & ~(tmp_7_reg_517 == ap_const_lv1_0)) | (ap_ST_st56_fsm_55 == ap_CS_fsm))) begin
        x1_2 = ap_const_lv64_0;
    end else if ((ap_ST_st42_fsm_41 == ap_CS_fsm)) begin
        x1_2 = w2_1_reg_539;
    end else begin
        x1_2 = 'bx;
    end
end

/// x1_2_ap_vld assign process. ///
always @ (ap_CS_fsm or tmp_reg_458 or tmp_7_reg_517)
begin
    if ((((ap_ST_st74_fsm_73 == ap_CS_fsm) & (tmp_reg_458 == ap_const_lv1_0) & ~(tmp_7_reg_517 == ap_const_lv1_0)) | (ap_ST_st56_fsm_55 == ap_CS_fsm) | (ap_ST_st42_fsm_41 == ap_CS_fsm))) begin
        x1_2_ap_vld = ap_const_logic_1;
    end else begin
        x1_2_ap_vld = ap_const_logic_0;
    end
end

/// x2_1 assign process. ///
always @ (ap_CS_fsm or tmp_reg_458 or tmp_7_reg_517 or grp_fu_173_p2 or grp_fu_179_p2)
begin
    if (((ap_ST_st74_fsm_73 == ap_CS_fsm) & (tmp_reg_458 == ap_const_lv1_0) & ~(tmp_7_reg_517 == ap_const_lv1_0))) begin
        x2_1 = grp_fu_179_p2;
    end else if (((ap_ST_st56_fsm_55 == ap_CS_fsm) | (ap_ST_st42_fsm_41 == ap_CS_fsm))) begin
        x2_1 = grp_fu_173_p2;
    end else begin
        x2_1 = 'bx;
    end
end

/// x2_1_ap_vld assign process. ///
always @ (ap_CS_fsm or tmp_reg_458 or tmp_7_reg_517)
begin
    if ((((ap_ST_st74_fsm_73 == ap_CS_fsm) & (tmp_reg_458 == ap_const_lv1_0) & ~(tmp_7_reg_517 == ap_const_lv1_0)) | (ap_ST_st56_fsm_55 == ap_CS_fsm) | (ap_ST_st42_fsm_41 == ap_CS_fsm))) begin
        x2_1_ap_vld = ap_const_logic_1;
    end else begin
        x2_1_ap_vld = ap_const_logic_0;
    end
end

/// x2_2 assign process. ///
always @ (ap_CS_fsm or tmp_reg_458 or tmp_7_reg_517 or tmp_15_fu_416_p1)
begin
    if ((((ap_ST_st74_fsm_73 == ap_CS_fsm) & (tmp_reg_458 == ap_const_lv1_0) & ~(tmp_7_reg_517 == ap_const_lv1_0)) | (ap_ST_st56_fsm_55 == ap_CS_fsm))) begin
        x2_2 = ap_const_lv64_0;
    end else if ((ap_ST_st42_fsm_41 == ap_CS_fsm)) begin
        x2_2 = tmp_15_fu_416_p1;
    end else begin
        x2_2 = 'bx;
    end
end

/// x2_2_ap_vld assign process. ///
always @ (ap_CS_fsm or tmp_reg_458 or tmp_7_reg_517)
begin
    if ((((ap_ST_st74_fsm_73 == ap_CS_fsm) & (tmp_reg_458 == ap_const_lv1_0) & ~(tmp_7_reg_517 == ap_const_lv1_0)) | (ap_ST_st56_fsm_55 == ap_CS_fsm) | (ap_ST_st42_fsm_41 == ap_CS_fsm))) begin
        x2_2_ap_vld = ap_const_logic_1;
    end else begin
        x2_2_ap_vld = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or grp_fu_184_p2 or grp_qurt_sqrt_fu_150_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st3_fsm_2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
        ap_ST_st4_fsm_3 : 
            if (~(grp_fu_184_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st74_fsm_73;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        ap_ST_st5_fsm_4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st7_fsm_6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
        ap_ST_st9_fsm_8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
        ap_ST_st10_fsm_9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
        ap_ST_st11_fsm_10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
        ap_ST_st12_fsm_11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
        ap_ST_st13_fsm_12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
        ap_ST_st14_fsm_13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
        ap_ST_st15_fsm_14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
        ap_ST_st16_fsm_15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
        ap_ST_st17_fsm_16 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
        ap_ST_st18_fsm_17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
        ap_ST_st19_fsm_18 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
        ap_ST_st20_fsm_19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
        ap_ST_st21_fsm_20 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
        ap_ST_st22_fsm_21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
        ap_ST_st23_fsm_22 : 
            if (~(ap_const_logic_0 == grp_qurt_sqrt_fu_150_ap_done)) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end
        ap_ST_st24_fsm_23 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
        ap_ST_st25_fsm_24 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
        ap_ST_st26_fsm_25 : 
            if (~(grp_fu_184_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st57_fsm_56;
            end else begin
                ap_NS_fsm = ap_ST_st27_fsm_26;
            end
        ap_ST_st27_fsm_26 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
        ap_ST_st28_fsm_27 : 
            if (~(grp_fu_184_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end else begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end
        ap_ST_st29_fsm_28 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
        ap_ST_st30_fsm_29 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
        ap_ST_st31_fsm_30 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
        ap_ST_st32_fsm_31 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
        ap_ST_st33_fsm_32 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
        ap_ST_st34_fsm_33 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
        ap_ST_st35_fsm_34 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
        ap_ST_st36_fsm_35 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
        ap_ST_st37_fsm_36 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
        ap_ST_st38_fsm_37 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
        ap_ST_st39_fsm_38 : 
            ap_NS_fsm = ap_ST_st40_fsm_39;
        ap_ST_st40_fsm_39 : 
            ap_NS_fsm = ap_ST_st41_fsm_40;
        ap_ST_st41_fsm_40 : 
            ap_NS_fsm = ap_ST_st42_fsm_41;
        ap_ST_st42_fsm_41 : 
            ap_NS_fsm = ap_ST_st74_fsm_73;
        ap_ST_st43_fsm_42 : 
            ap_NS_fsm = ap_ST_st44_fsm_43;
        ap_ST_st44_fsm_43 : 
            ap_NS_fsm = ap_ST_st45_fsm_44;
        ap_ST_st45_fsm_44 : 
            ap_NS_fsm = ap_ST_st46_fsm_45;
        ap_ST_st46_fsm_45 : 
            ap_NS_fsm = ap_ST_st47_fsm_46;
        ap_ST_st47_fsm_46 : 
            ap_NS_fsm = ap_ST_st48_fsm_47;
        ap_ST_st48_fsm_47 : 
            ap_NS_fsm = ap_ST_st49_fsm_48;
        ap_ST_st49_fsm_48 : 
            ap_NS_fsm = ap_ST_st50_fsm_49;
        ap_ST_st50_fsm_49 : 
            ap_NS_fsm = ap_ST_st51_fsm_50;
        ap_ST_st51_fsm_50 : 
            ap_NS_fsm = ap_ST_st52_fsm_51;
        ap_ST_st52_fsm_51 : 
            ap_NS_fsm = ap_ST_st53_fsm_52;
        ap_ST_st53_fsm_52 : 
            ap_NS_fsm = ap_ST_st54_fsm_53;
        ap_ST_st54_fsm_53 : 
            ap_NS_fsm = ap_ST_st55_fsm_54;
        ap_ST_st55_fsm_54 : 
            ap_NS_fsm = ap_ST_st56_fsm_55;
        ap_ST_st56_fsm_55 : 
            ap_NS_fsm = ap_ST_st74_fsm_73;
        ap_ST_st57_fsm_56 : 
            ap_NS_fsm = ap_ST_st58_fsm_57;
        ap_ST_st58_fsm_57 : 
            ap_NS_fsm = ap_ST_st59_fsm_58;
        ap_ST_st59_fsm_58 : 
            ap_NS_fsm = ap_ST_st60_fsm_59;
        ap_ST_st60_fsm_59 : 
            ap_NS_fsm = ap_ST_st61_fsm_60;
        ap_ST_st61_fsm_60 : 
            ap_NS_fsm = ap_ST_st62_fsm_61;
        ap_ST_st62_fsm_61 : 
            ap_NS_fsm = ap_ST_st63_fsm_62;
        ap_ST_st63_fsm_62 : 
            ap_NS_fsm = ap_ST_st64_fsm_63;
        ap_ST_st64_fsm_63 : 
            ap_NS_fsm = ap_ST_st65_fsm_64;
        ap_ST_st65_fsm_64 : 
            ap_NS_fsm = ap_ST_st66_fsm_65;
        ap_ST_st66_fsm_65 : 
            ap_NS_fsm = ap_ST_st67_fsm_66;
        ap_ST_st67_fsm_66 : 
            ap_NS_fsm = ap_ST_st68_fsm_67;
        ap_ST_st68_fsm_67 : 
            ap_NS_fsm = ap_ST_st69_fsm_68;
        ap_ST_st69_fsm_68 : 
            ap_NS_fsm = ap_ST_st70_fsm_69;
        ap_ST_st70_fsm_69 : 
            ap_NS_fsm = ap_ST_st71_fsm_70;
        ap_ST_st71_fsm_70 : 
            ap_NS_fsm = ap_ST_st72_fsm_71;
        ap_ST_st72_fsm_71 : 
            ap_NS_fsm = ap_ST_st73_fsm_72;
        ap_ST_st73_fsm_72 : 
            ap_NS_fsm = ap_ST_st74_fsm_73;
        ap_ST_st74_fsm_73 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign a_address1 = ap_const_lv64_2;
assign ap_return = $unsigned(p_0_cast_fu_443_p0);
assign e5_fu_377_p1 = $signed(p_Val2_19_reg_497);
assign f_fu_231_p1 = f_neg_i_fu_225_p2;
assign f_neg_i_fu_225_p2 = (f_to_int_i_fu_221_p1 ^ ap_const_lv64_8000000000000000);
assign f_to_int_i_fu_221_p1 = reg_202;
assign grp_fu_155_ce = ap_const_logic_1;
assign grp_fu_159_ce = ap_const_logic_1;
assign grp_fu_159_p0 = tmp_neg_fu_428_p2;
assign grp_fu_159_p1 = reg_208;
assign grp_fu_168_ce = ap_const_logic_1;
assign grp_fu_168_p0 = reg_194;
assign grp_fu_168_p1 = a_load_2_reg_482;
assign grp_fu_173_ce = ap_const_logic_1;
assign grp_fu_173_p1 = reg_194;
assign grp_fu_179_ce = ap_const_logic_1;
assign grp_fu_179_p0 = tmp_6_reg_555;
assign grp_fu_179_p1 = reg_194;
assign grp_fu_184_ce = ap_const_logic_1;
assign grp_fu_184_p1 = ap_const_lv64_0;
assign grp_fu_190_ce = ap_const_logic_1;
assign grp_qurt_sqrt_fu_150_ap_start = grp_qurt_sqrt_fu_150_ap_start_ap_start_reg;
assign grp_qurt_sqrt_fu_150_val_r = reg_208;
assign isNeg_fu_291_p3 = sh_assign_fu_285_p2[ap_const_lv32_B];
assign p_0_cast_fu_443_p0 = $signed(p_0_phi_fu_135_p8);
assign p_Result_10_fu_269_p3 = {{ap_const_lv1_1}, {p_Result_9_fu_265_p1}};
assign p_Result_8_fu_255_p4 = {{p_Val2_s_fu_243_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
assign p_Result_9_fu_265_p1 = p_Val2_s_fu_243_p1[51:0];
assign p_Result_s_fu_247_p3 = p_Val2_s_fu_243_p1[ap_const_lv32_3F];
assign p_Val2_16_fu_345_p3 = ((isNeg_fu_291_p3)? tmp_9_i_i_i_cast_fu_335_p1: tmp_11_i_i_i_fu_339_p2);
assign p_Val2_17_fu_353_p4 = {{p_Val2_16_fu_345_p3[ap_const_lv32_53 : ap_const_lv32_34]}};
assign p_Val2_19_fu_369_p3 = ((p_Result_s_fu_247_p3)? p_Val2_7_i_i_i_fu_363_p2: p_Val2_17_fu_353_p4);
assign p_Val2_7_i_i_i_fu_363_p2 = (ap_const_lv32_0 - p_Val2_17_fu_353_p4);
assign p_Val2_s_fu_243_p1 = x_assign_fu_235_p3;
assign sh_assign_4_cast_fu_317_p1 = $signed(sh_assign_4_fu_309_p3);
assign sh_assign_4_fu_309_p1 = $signed(tmp_i_i_i_11_fu_299_p2);
assign sh_assign_4_fu_309_p3 = ((isNeg_fu_291_p3)? sh_assign_4_fu_309_p1: sh_assign_fu_285_p2);
assign sh_assign_fu_285_p2 = (tmp_i_i_i_i_cast1_fu_281_p1 + ap_const_lv12_C01);
assign tmp_11_fu_421_p1 = tmp_12_neg_reg_529;
assign tmp_11_i_i_i_fu_339_p2 = tmp_i_i_i_fu_277_p1 << tmp_8_i_i_i_fu_321_p1;
assign tmp_12_neg_fu_397_p2 = (tmp_12_to_int_fu_394_p1 ^ ap_const_lv64_8000000000000000);
assign tmp_12_to_int_fu_394_p1 = a_load_1_reg_472;
assign tmp_13_fu_403_p1 = tmp_14_neg_reg_524;
assign tmp_14_neg_fu_388_p2 = (tmp_14_to_int_fu_385_p1 ^ ap_const_lv64_8000000000000000);
assign tmp_14_to_int_fu_385_p1 = a_load_1_reg_472;
assign tmp_15_fu_416_p1 = tmp_16_neg_fu_410_p2;
assign tmp_16_neg_fu_410_p2 = (tmp_16_to_int_fu_407_p1 ^ ap_const_lv64_8000000000000000);
assign tmp_16_to_int_fu_407_p1 = w2_1_reg_539;
assign tmp_17_fu_216_p2 = (tmp_16_reg_492 ^ ap_const_lv1_1);
assign tmp_8_i_i_i_cast_fu_325_p0 = sh_assign_4_cast_fu_317_p1;
assign tmp_8_i_i_i_cast_fu_325_p1 = $unsigned(tmp_8_i_i_i_cast_fu_325_p0);
assign tmp_8_i_i_i_fu_321_p0 = sh_assign_4_cast_fu_317_p1;
assign tmp_8_i_i_i_fu_321_p1 = $unsigned(tmp_8_i_i_i_fu_321_p0);
assign tmp_9_i_i_i_cast_fu_335_p1 = $unsigned(tmp_9_i_i_i_fu_329_p2);
assign tmp_9_i_i_i_fu_329_p2 = p_Result_10_fu_269_p3 >> tmp_8_i_i_i_cast_fu_325_p1;
assign tmp_i_i_i_11_fu_299_p2 = (ap_const_lv11_3FF - p_Result_8_fu_255_p4);
assign tmp_i_i_i_fu_277_p1 = $unsigned(p_Result_10_fu_269_p3);
assign tmp_i_i_i_i_cast1_fu_281_p1 = $unsigned(p_Result_8_fu_255_p4);
assign tmp_neg_fu_428_p2 = (tmp_to_int_fu_425_p1 ^ ap_const_lv64_8000000000000000);
assign tmp_to_int_fu_425_p1 = a_load_1_reg_472;
assign w_fu_381_p1 = $signed(tmp_5_reg_507);
assign x1_1 = grp_fu_173_p2;
assign x_assign_fu_235_p3 = ((tmp_17_fu_216_p2)? f_fu_231_p1: reg_202);
always @ (posedge ap_clk)
begin
    p_0_reg_130[4:3] <= 2'b00;
end



endmodule //qurt

