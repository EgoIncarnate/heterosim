// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module float64_mul_roundAndPackFloat64 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zSign,
        zExp,
        zSig,
        float_exception_flags_i,
        float_exception_flags_o,
        float_exception_flags_o_ap_vld,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_st2_fsm_1 = 6'b10;
parameter    ap_ST_st3_fsm_2 = 6'b100;
parameter    ap_ST_st4_fsm_3 = 6'b1000;
parameter    ap_ST_st5_fsm_4 = 6'b10000;
parameter    ap_ST_st6_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv10_3FF = 10'b1111111111;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv10_200 = 10'b1000000000;
parameter    ap_const_lv13_7FC = 13'b11111111100;
parameter    ap_const_lv13_7FD = 13'b11111111101;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv63_0 = 63'b000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_7FF0000000000000 = 64'b111111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv54_0 = 54'b000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] zSign;
input  [12:0] zExp;
input  [63:0] zSig;
input  [31:0] float_exception_flags_i;
output  [31:0] float_exception_flags_o;
output   float_exception_flags_o_ap_vld;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] float_exception_flags_o;
reg float_exception_flags_o_ap_vld;
reg[63:0] ap_return;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm = 6'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_24;
reg   [31:0] float_rounding_mode = 32'b00000000000000000000000000000000;
wire   [0:0] tmp_fu_158_p2;
reg   [0:0] tmp_reg_561;
wire   [9:0] sel_tmp4_cast_fu_202_p3;
reg   [9:0] sel_tmp4_cast_reg_566;
wire   [9:0] sel_tmp5_fu_222_p3;
reg   [9:0] sel_tmp5_reg_571;
wire   [0:0] tmp_1_fu_230_p2;
reg   [0:0] tmp_1_reg_576;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_57;
wire   [9:0] roundIncrement_4_fu_236_p3;
reg   [9:0] roundIncrement_4_reg_595;
wire   [9:0] roundBits_fu_241_p1;
wire   [0:0] tmp_6_fu_245_p2;
reg   [0:0] tmp_6_reg_606;
wire   [0:0] tmp_7_fu_251_p2;
reg   [0:0] tmp_7_reg_610;
wire   [0:0] tmp_8_fu_257_p2;
reg   [0:0] tmp_8_reg_614;
wire   [0:0] tmp_4_fu_273_p3;
reg   [0:0] tmp_4_reg_618;
wire   [10:0] count_assign_fu_293_p2;
reg   [10:0] count_assign_reg_625;
wire   [0:0] tmp_22_fu_281_p3;
wire   [0:0] icmp_fu_309_p2;
reg   [0:0] icmp_reg_630;
wire   [0:0] tmp_8_i_fu_329_p2;
reg   [0:0] tmp_8_i_reg_635;
wire   [63:0] tmp_10_fu_370_p2;
wire   [63:0] z_2_fu_420_p3;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_116;
wire   [9:0] roundBits_2_fu_427_p1;
wire   [53:0] zSig_assign_2_fu_511_p2;
reg   [53:0] zSig_assign_2_reg_661;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_127;
wire   [11:0] tmp_29_fu_517_p1;
reg   [11:0] tmp_29_reg_667;
wire   [63:0] tmp_38_i8_fu_549_p2;
reg   [63:0] tmp_38_i8_reg_672;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_138;
reg   [63:0] zSig_assign1_reg_106;
reg   [12:0] zExp_assign_1_reg_117;
reg   [9:0] roundBits_1_reg_130;
reg   [63:0] p_0_phi_fu_144_p4;
reg   [63:0] p_0_reg_141;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_162;
wire   [0:0] tmp_11_fu_431_p2;
wire   [0:0] tmp_12_fu_449_p2;
wire   [31:0] float_exception_flags_assign_i_fu_335_p2;
wire   [31:0] float_exception_flags_assign_i_1_fu_437_p2;
wire   [31:0] tmp_13_fu_455_p2;
wire   [0:0] tmp_s_fu_164_p2;
wire   [0:0] sel_tmp2_demorgan_fu_182_p2;
wire   [0:0] sel_tmp3_demorgan_fu_188_p2;
wire   [0:0] not_tmp_3_fu_176_p2;
wire   [0:0] not_tmp_2_fu_170_p2;
wire   [0:0] sel_tmp4_fu_194_p3;
wire   [0:0] sel_tmp6_fu_210_p2;
wire   [0:0] sel_tmp7_fu_216_p2;
wire   [63:0] tmp_9_fu_263_p1;
wire   [63:0] tmp_2_fu_267_p2;
wire   [10:0] tmp_24_fu_289_p1;
wire   [4:0] tmp_25_fu_299_p4;
wire   [5:0] tmp_26_fu_315_p1;
wire   [5:0] tmp_6_i_fu_319_p1;
wire   [63:0] tmp_7_i_fu_323_p2;
wire   [63:0] tmp_i_fu_347_p3;
wire   [0:0] tmp_5_fu_360_p2;
wire   [63:0] tmp_38_i9_fu_354_p2;
wire   [63:0] tmp_3_fu_366_p1;
wire   [5:0] tmp_2_i_fu_376_p1;
wire   [63:0] tmp_3_i_fu_379_p2;
wire   [0:0] tmp_27_fu_384_p1;
wire   [62:0] tmp_11_i_fu_393_p4;
wire   [0:0] tmp_10_i_fu_388_p2;
wire   [0:0] tmp_i3_fu_411_p2;
wire   [63:0] z_fu_403_p3;
wire   [63:0] z_1_fu_416_p1;
wire   [63:0] tmp_14_fu_467_p1;
wire   [63:0] tmp_15_fu_470_p2;
wire   [0:0] tmp_16_fu_486_p2;
wire   [0:0] tmp_17_fu_492_p2;
wire   [31:0] tmp_18_fu_497_p1;
wire   [31:0] tmp_19_fu_501_p2;
wire   [53:0] zSig_assign_1_cast_fu_476_p4;
wire  signed [53:0] tmp_27_cast_fu_507_p1;
wire   [0:0] tmp_20_fu_521_p2;
wire   [11:0] tmp_21_fu_526_p3;
wire   [63:0] tmp_37_i_fu_541_p4;
wire   [63:0] tmp_36_i_fu_533_p3;
reg   [63:0] ap_return_preg = 64'b0000000000000000000000000000000000000000000000000000000000000000;
reg   [5:0] ap_NS_fsm;




always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_preg
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv64_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            ap_return_preg <= p_0_phi_fu_144_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ((tmp_6_reg_606 == ap_const_lv1_0) | ((tmp_7_reg_610 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_8_reg_614)) | ((tmp_7_reg_610 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_4_reg_618))))) begin
        p_0_reg_141 <= tmp_38_i8_reg_672;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_6_fu_245_p2 == ap_const_lv1_0) & ~(tmp_7_fu_251_p2 == ap_const_lv1_0)) | (~(tmp_6_fu_245_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_8_fu_257_p2) & ~(ap_const_lv1_0 == tmp_4_fu_273_p3))))) begin
        p_0_reg_141 <= tmp_10_fu_370_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_6_fu_245_p2 == ap_const_lv1_0) & (tmp_7_fu_251_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_8_fu_257_p2) & (ap_const_lv1_0 == tmp_22_fu_281_p3)) | (~(tmp_6_fu_245_p2 == ap_const_lv1_0) & (tmp_7_fu_251_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_22_fu_281_p3) & (ap_const_lv1_0 == tmp_4_fu_273_p3)))) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_6_fu_245_p2 == ap_const_lv1_0)))) begin
        roundBits_1_reg_130 <= roundBits_fu_241_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        roundBits_1_reg_130 <= roundBits_2_fu_427_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_6_fu_245_p2 == ap_const_lv1_0) & (tmp_7_fu_251_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_8_fu_257_p2) & (ap_const_lv1_0 == tmp_22_fu_281_p3)) | (~(tmp_6_fu_245_p2 == ap_const_lv1_0) & (tmp_7_fu_251_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_22_fu_281_p3) & (ap_const_lv1_0 == tmp_4_fu_273_p3)))) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_6_fu_245_p2 == ap_const_lv1_0)))) begin
        zExp_assign_1_reg_117 <= zExp;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        zExp_assign_1_reg_117 <= ap_const_lv13_0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_6_fu_245_p2 == ap_const_lv1_0) & (tmp_7_fu_251_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_8_fu_257_p2) & (ap_const_lv1_0 == tmp_22_fu_281_p3)) | (~(tmp_6_fu_245_p2 == ap_const_lv1_0) & (tmp_7_fu_251_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_22_fu_281_p3) & (ap_const_lv1_0 == tmp_4_fu_273_p3)))) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_6_fu_245_p2 == ap_const_lv1_0)))) begin
        zSig_assign1_reg_106 <= zSig;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        zSig_assign1_reg_106 <= z_2_fu_420_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_6_fu_245_p2 == ap_const_lv1_0) & (tmp_7_fu_251_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_8_fu_257_p2) & ~(ap_const_lv1_0 == tmp_22_fu_281_p3)) | (~(tmp_6_fu_245_p2 == ap_const_lv1_0) & (tmp_7_fu_251_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_22_fu_281_p3) & (ap_const_lv1_0 == tmp_4_fu_273_p3))))) begin
        count_assign_reg_625 <= count_assign_fu_293_p2;
        icmp_reg_630 <= icmp_fu_309_p2;
        tmp_8_i_reg_635 <= tmp_8_i_fu_329_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        roundIncrement_4_reg_595 <= roundIncrement_4_fu_236_p3;
        tmp_6_reg_606 <= tmp_6_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        sel_tmp4_cast_reg_566 <= sel_tmp4_cast_fu_202_p3;
        sel_tmp5_reg_571[9] <= sel_tmp5_fu_222_p3[9];
        tmp_1_reg_576 <= tmp_1_fu_230_p2;
        tmp_reg_561 <= tmp_fu_158_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        tmp_29_reg_667 <= tmp_29_fu_517_p1;
        zSig_assign_2_reg_661 <= zSig_assign_2_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_38_i8_reg_672 <= tmp_38_i8_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_6_fu_245_p2 == ap_const_lv1_0) & (tmp_7_fu_251_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_8_fu_257_p2))) begin
        tmp_4_reg_618 <= tmp_2_fu_267_p2[ap_const_lv32_3F];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_6_fu_245_p2 == ap_const_lv1_0))) begin
        tmp_7_reg_610 <= tmp_7_fu_251_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_6_fu_245_p2 == ap_const_lv1_0) & (tmp_7_fu_251_p2 == ap_const_lv1_0))) begin
        tmp_8_reg_614 <= tmp_8_fu_257_p2;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st6_fsm_5) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (p_0_phi_fu_144_p4 or ap_sig_cseq_ST_st6_fsm_5 or ap_return_preg) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        ap_return = p_0_phi_fu_144_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (ap_sig_bdd_24) begin
    if (ap_sig_bdd_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_57) begin
    if (ap_sig_bdd_57) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_116) begin
    if (ap_sig_bdd_116) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_127) begin
    if (ap_sig_bdd_127) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_138) begin
    if (ap_sig_bdd_138) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_162) begin
    if (ap_sig_bdd_162) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (float_exception_flags_i or ap_sig_cseq_ST_st2_fsm_1 or tmp_6_fu_245_p2 or tmp_7_fu_251_p2 or tmp_8_fu_257_p2 or tmp_4_fu_273_p3 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or tmp_11_fu_431_p2 or tmp_12_fu_449_p2 or float_exception_flags_assign_i_fu_335_p2 or float_exception_flags_assign_i_1_fu_437_p2 or tmp_13_fu_455_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == tmp_12_fu_449_p2))) begin
        float_exception_flags_o = tmp_13_fu_455_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_11_fu_431_p2))) begin
        float_exception_flags_o = float_exception_flags_assign_i_1_fu_437_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_6_fu_245_p2 == ap_const_lv1_0) & ~(tmp_7_fu_251_p2 == ap_const_lv1_0)) | (~(tmp_6_fu_245_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_8_fu_257_p2) & ~(ap_const_lv1_0 == tmp_4_fu_273_p3))))) begin
        float_exception_flags_o = float_exception_flags_assign_i_fu_335_p2;
    end else begin
        float_exception_flags_o = float_exception_flags_i;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_6_fu_245_p2 or tmp_7_fu_251_p2 or tmp_8_fu_257_p2 or tmp_4_fu_273_p3 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or tmp_11_fu_431_p2 or tmp_12_fu_449_p2) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_6_fu_245_p2 == ap_const_lv1_0) & ~(tmp_7_fu_251_p2 == ap_const_lv1_0)) | (~(tmp_6_fu_245_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_8_fu_257_p2) & ~(ap_const_lv1_0 == tmp_4_fu_273_p3)))) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_11_fu_431_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == tmp_12_fu_449_p2)))) begin
        float_exception_flags_o_ap_vld = ap_const_logic_1;
    end else begin
        float_exception_flags_o_ap_vld = ap_const_logic_0;
    end
end

always @ (tmp_6_reg_606 or tmp_7_reg_610 or tmp_8_reg_614 or tmp_4_reg_618 or tmp_38_i8_reg_672 or p_0_reg_141 or ap_sig_cseq_ST_st6_fsm_5) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ((tmp_6_reg_606 == ap_const_lv1_0) | ((tmp_7_reg_610 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_8_reg_614)) | ((tmp_7_reg_610 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_4_reg_618))))) begin
        p_0_phi_fu_144_p4 = tmp_38_i8_reg_672;
    end else begin
        p_0_phi_fu_144_p4 = p_0_reg_141;
    end
end
always @ (ap_start or ap_CS_fsm or tmp_6_fu_245_p2 or tmp_7_fu_251_p2 or tmp_8_fu_257_p2 or tmp_4_fu_273_p3 or tmp_22_fu_281_p3) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (((~(tmp_6_fu_245_p2 == ap_const_lv1_0) & ~(tmp_7_fu_251_p2 == ap_const_lv1_0)) | (~(tmp_6_fu_245_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_8_fu_257_p2) & ~(ap_const_lv1_0 == tmp_4_fu_273_p3)))) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else if (((~(tmp_6_fu_245_p2 == ap_const_lv1_0) & (tmp_7_fu_251_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_8_fu_257_p2) & ~(ap_const_lv1_0 == tmp_22_fu_281_p3)) | (~(tmp_6_fu_245_p2 == ap_const_lv1_0) & (tmp_7_fu_251_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_22_fu_281_p3) & (ap_const_lv1_0 == tmp_4_fu_273_p3)))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_CS_fsm) begin
    ap_sig_bdd_116 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_127 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_138 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_162 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_24 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_57 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign count_assign_fu_293_p2 = (ap_const_lv11_0 - tmp_24_fu_289_p1);

assign float_exception_flags_assign_i_1_fu_437_p2 = (float_exception_flags_i | ap_const_lv32_4);

assign float_exception_flags_assign_i_fu_335_p2 = (float_exception_flags_i | ap_const_lv32_9);

assign icmp_fu_309_p2 = (tmp_25_fu_299_p4 == ap_const_lv5_0? 1'b1: 1'b0);

assign not_tmp_2_fu_170_p2 = (float_rounding_mode != ap_const_lv32_3? 1'b1: 1'b0);

assign not_tmp_3_fu_176_p2 = (float_rounding_mode != ap_const_lv32_2? 1'b1: 1'b0);

assign roundBits_2_fu_427_p1 = z_2_fu_420_p3[9:0];

assign roundBits_fu_241_p1 = zSig[9:0];

assign roundIncrement_4_fu_236_p3 = ((tmp_1_reg_576[0:0] === 1'b1) ? sel_tmp5_reg_571 : sel_tmp4_cast_reg_566);

assign sel_tmp2_demorgan_fu_182_p2 = (tmp_fu_158_p2 | tmp_s_fu_164_p2);

assign sel_tmp3_demorgan_fu_188_p2 = (sel_tmp2_demorgan_fu_182_p2 | zSign);

assign sel_tmp4_cast_fu_202_p3 = ((sel_tmp4_fu_194_p3[0:0] === 1'b1) ? ap_const_lv10_3FF : ap_const_lv10_0);

assign sel_tmp4_fu_194_p3 = ((sel_tmp3_demorgan_fu_188_p2[0:0] === 1'b1) ? not_tmp_3_fu_176_p2 : not_tmp_2_fu_170_p2);

assign sel_tmp5_fu_222_p3 = ((sel_tmp7_fu_216_p2[0:0] === 1'b1) ? ap_const_lv10_0 : ap_const_lv10_200);

assign sel_tmp6_fu_210_p2 = (tmp_fu_158_p2 ^ ap_const_lv1_1);

assign sel_tmp7_fu_216_p2 = (tmp_s_fu_164_p2 & sel_tmp6_fu_210_p2);

assign tmp_10_fu_370_p2 = (tmp_38_i9_fu_354_p2 - tmp_3_fu_366_p1);

assign tmp_10_i_fu_388_p2 = (tmp_27_fu_384_p1 | tmp_8_i_reg_635);

assign tmp_11_fu_431_p2 = (roundBits_2_fu_427_p1 == ap_const_lv10_0? 1'b1: 1'b0);

assign tmp_11_i_fu_393_p4 = {{tmp_3_i_fu_379_p2[ap_const_lv32_3F : ap_const_lv32_1]}};

assign tmp_12_fu_449_p2 = (roundBits_1_reg_130 == ap_const_lv10_0? 1'b1: 1'b0);

assign tmp_13_fu_455_p2 = (float_exception_flags_i | ap_const_lv32_1);

assign tmp_14_fu_467_p1 = roundIncrement_4_reg_595;

assign tmp_15_fu_470_p2 = (zSig_assign1_reg_106 + tmp_14_fu_467_p1);

assign tmp_16_fu_486_p2 = (roundBits_1_reg_130 == ap_const_lv10_200? 1'b1: 1'b0);

assign tmp_17_fu_492_p2 = (tmp_16_fu_486_p2 & tmp_reg_561);

assign tmp_18_fu_497_p1 = tmp_17_fu_492_p2;

assign tmp_19_fu_501_p2 = (tmp_18_fu_497_p1 ^ ap_const_lv32_FFFFFFFF);

assign tmp_1_fu_230_p2 = (sel_tmp7_fu_216_p2 | tmp_fu_158_p2);

assign tmp_20_fu_521_p2 = (zSig_assign_2_reg_661 == ap_const_lv54_0? 1'b1: 1'b0);

assign tmp_21_fu_526_p3 = ((tmp_20_fu_521_p2[0:0] === 1'b1) ? ap_const_lv12_0 : tmp_29_reg_667);

assign tmp_22_fu_281_p3 = zExp[ap_const_lv32_C];

assign tmp_24_fu_289_p1 = zExp[10:0];

assign tmp_25_fu_299_p4 = {{count_assign_fu_293_p2[ap_const_lv32_A : ap_const_lv32_6]}};

assign tmp_26_fu_315_p1 = zExp[5:0];

assign tmp_27_cast_fu_507_p1 = $signed(tmp_19_fu_501_p2);

assign tmp_27_fu_384_p1 = tmp_3_i_fu_379_p2[0:0];

assign tmp_29_fu_517_p1 = zExp_assign_1_reg_117[11:0];

assign tmp_2_fu_267_p2 = (tmp_9_fu_263_p1 + zSig);

assign tmp_2_i_fu_376_p1 = count_assign_reg_625;

assign tmp_36_i_fu_533_p3 = {{tmp_21_fu_526_p3}, {ap_const_lv52_0}};

assign tmp_37_i_fu_541_p4 = {{{zSign}, {ap_const_lv9_0}}, {zSig_assign_2_reg_661}};

assign tmp_38_i8_fu_549_p2 = (tmp_37_i_fu_541_p4 + tmp_36_i_fu_533_p3);

assign tmp_38_i9_fu_354_p2 = (tmp_i_fu_347_p3 | ap_const_lv64_7FF0000000000000);

assign tmp_3_fu_366_p1 = tmp_5_fu_360_p2;

assign tmp_3_i_fu_379_p2 = zSig >> tmp_2_i_fu_376_p1;

assign tmp_4_fu_273_p3 = tmp_2_fu_267_p2[ap_const_lv32_3F];

assign tmp_5_fu_360_p2 = (roundIncrement_4_fu_236_p3 == ap_const_lv10_0? 1'b1: 1'b0);

assign tmp_6_fu_245_p2 = (zExp > ap_const_lv13_7FC? 1'b1: 1'b0);

assign tmp_6_i_fu_319_p1 = tmp_26_fu_315_p1;

assign tmp_7_fu_251_p2 = ($signed(zExp) > $signed(13'b11111111101)? 1'b1: 1'b0);

assign tmp_7_i_fu_323_p2 = zSig << tmp_6_i_fu_319_p1;

assign tmp_8_fu_257_p2 = (zExp == ap_const_lv13_7FD? 1'b1: 1'b0);

assign tmp_8_i_fu_329_p2 = (tmp_7_i_fu_323_p2 != ap_const_lv64_0? 1'b1: 1'b0);

assign tmp_9_fu_263_p1 = roundIncrement_4_fu_236_p3;

assign tmp_fu_158_p2 = (float_rounding_mode == ap_const_lv32_0? 1'b1: 1'b0);

assign tmp_i3_fu_411_p2 = (zSig != ap_const_lv64_0? 1'b1: 1'b0);

assign tmp_i_fu_347_p3 = {{zSign}, {ap_const_lv63_0}};

assign tmp_s_fu_164_p2 = (float_rounding_mode == ap_const_lv32_1? 1'b1: 1'b0);

assign zSig_assign_1_cast_fu_476_p4 = {{tmp_15_fu_470_p2[ap_const_lv32_3F : ap_const_lv32_A]}};

assign zSig_assign_2_fu_511_p2 = (zSig_assign_1_cast_fu_476_p4 & tmp_27_cast_fu_507_p1);

assign z_1_fu_416_p1 = tmp_i3_fu_411_p2;

assign z_2_fu_420_p3 = ((icmp_reg_630[0:0] === 1'b1) ? z_fu_403_p3 : z_1_fu_416_p1);

assign z_fu_403_p3 = {{tmp_11_i_fu_393_p4}, {tmp_10_i_fu_388_p2}};
always @ (posedge ap_clk) begin
    sel_tmp5_reg_571[8:0] <= 9'b000000000;
end



endmodule //float64_mul_roundAndPackFloat64

