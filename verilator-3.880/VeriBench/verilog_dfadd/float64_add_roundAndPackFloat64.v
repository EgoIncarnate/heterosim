// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module float64_add_roundAndPackFloat64 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zSign,
        zExp,
        zSig,
        float_rounding_mode,
        float_exception_flags_i,
        float_exception_flags_o,
        float_exception_flags_o_ap_vld,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_st2_fsm_1 = 6'b10;
parameter    ap_ST_st3_fsm_2 = 6'b100;
parameter    ap_ST_st4_fsm_3 = 6'b1000;
parameter    ap_ST_st5_fsm_4 = 6'b10000;
parameter    ap_ST_st6_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv10_3FF = 10'b1111111111;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv10_200 = 10'b1000000000;
parameter    ap_const_lv12_7FC = 12'b11111111100;
parameter    ap_const_lv12_7FD = 12'b11111111101;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv63_0 = 63'b000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_7FF0000000000000 = 64'b111111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv54_0 = 54'b000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] zSign;
input  [11:0] zExp;
input  [63:0] zSig;
input  [31:0] float_rounding_mode;
input  [31:0] float_exception_flags_i;
output  [31:0] float_exception_flags_o;
output   float_exception_flags_o_ap_vld;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] float_exception_flags_o;
reg float_exception_flags_o_ap_vld;
reg[63:0] ap_return;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm = 6'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_24;
wire   [0:0] tmp_fu_155_p2;
reg   [0:0] tmp_reg_547;
wire   [9:0] sel_tmp4_cast_fu_199_p3;
reg   [9:0] sel_tmp4_cast_reg_552;
wire   [9:0] sel_tmp5_fu_219_p3;
reg   [9:0] sel_tmp5_reg_557;
wire   [0:0] tmp_29_fu_227_p2;
reg   [0:0] tmp_29_reg_562;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_57;
wire   [9:0] roundIncrement_4_fu_233_p3;
reg   [9:0] roundIncrement_4_reg_581;
wire   [9:0] roundBits_fu_238_p1;
wire   [0:0] tmp_21_fu_242_p2;
reg   [0:0] tmp_21_reg_592;
wire   [0:0] tmp_22_fu_248_p2;
reg   [0:0] tmp_22_reg_596;
wire   [0:0] tmp_23_fu_254_p2;
reg   [0:0] tmp_23_reg_600;
wire   [0:0] tmp_44_fu_270_p3;
reg   [0:0] tmp_44_reg_604;
wire   [6:0] count_assign_fu_290_p2;
reg   [6:0] count_assign_reg_611;
wire   [0:0] tmp_45_fu_278_p3;
reg   [0:0] tmp_47_reg_616;
wire   [0:0] tmp_33_i_fu_318_p2;
reg   [0:0] tmp_33_i_reg_621;
wire   [63:0] tmp_31_fu_359_p2;
wire   [63:0] z_6_fu_409_p3;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_116;
wire   [9:0] roundBits_2_fu_416_p1;
wire   [53:0] zSig_assign_2_fu_500_p2;
reg   [53:0] zSig_assign_2_reg_647;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_127;
wire   [63:0] tmp_72_i8_fu_535_p2;
reg   [63:0] tmp_72_i8_reg_653;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_136;
reg   [63:0] zSig_assign1_reg_102;
reg   [11:0] zExp_assign_1_reg_113;
reg   [9:0] roundBits_1_reg_127;
reg   [63:0] p_0_phi_fu_141_p4;
reg   [63:0] p_0_reg_138;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_160;
wire   [0:0] tmp_32_fu_420_p2;
wire   [0:0] tmp_33_fu_438_p2;
wire   [31:0] float_exception_flags_assign_i_fu_324_p2;
wire   [31:0] float_exception_flags_assign_i_1_fu_426_p2;
wire   [31:0] tmp_34_fu_444_p2;
wire   [0:0] tmp_s_fu_161_p2;
wire   [0:0] sel_tmp2_demorgan_fu_179_p2;
wire   [0:0] sel_tmp3_demorgan_fu_185_p2;
wire   [0:0] not_tmp_1_fu_173_p2;
wire   [0:0] not_tmp_s_fu_167_p2;
wire   [0:0] sel_tmp4_fu_191_p3;
wire   [0:0] sel_tmp6_fu_207_p2;
wire   [0:0] sel_tmp7_fu_213_p2;
wire   [63:0] tmp_24_fu_260_p1;
wire   [63:0] tmp_25_fu_264_p2;
wire   [6:0] tmp_46_fu_286_p1;
wire   [5:0] tmp_48_fu_304_p1;
wire   [5:0] tmp_31_i_fu_308_p1;
wire   [63:0] tmp_32_i_fu_312_p2;
wire   [63:0] tmp_i_fu_336_p3;
wire   [0:0] tmp_28_fu_349_p2;
wire   [63:0] tmp_72_i9_fu_343_p2;
wire   [63:0] tmp_30_fu_355_p1;
wire   [5:0] tmp_27_i_fu_365_p1;
wire   [63:0] tmp_28_i_fu_368_p2;
wire   [0:0] tmp_49_fu_373_p1;
wire   [62:0] tmp_3_i_fu_382_p4;
wire   [0:0] tmp_2_i_fu_377_p2;
wire   [0:0] tmp_34_i_fu_400_p2;
wire   [63:0] z_2_fu_405_p1;
wire   [63:0] z_fu_392_p3;
wire   [63:0] tmp_35_fu_456_p1;
wire   [63:0] tmp_36_fu_459_p2;
wire   [0:0] tmp_37_fu_475_p2;
wire   [0:0] tmp_38_fu_481_p2;
wire   [31:0] tmp_39_fu_486_p1;
wire   [31:0] tmp_40_fu_490_p2;
wire   [53:0] zSig_assign_1_cast_fu_465_p4;
wire  signed [53:0] tmp_55_cast_fu_496_p1;
wire   [0:0] tmp_41_fu_506_p2;
wire   [11:0] tmp_42_fu_511_p3;
wire   [63:0] tmp_70_i_fu_519_p3;
wire   [63:0] tmp_71_i_fu_527_p4;
reg   [63:0] ap_return_preg = 64'b0000000000000000000000000000000000000000000000000000000000000000;
reg   [5:0] ap_NS_fsm;




always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_preg
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv64_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            ap_return_preg <= p_0_phi_fu_141_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ((tmp_21_reg_592 == ap_const_lv1_0) | ((tmp_22_reg_596 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_23_reg_600)) | ((tmp_22_reg_596 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_44_reg_604))))) begin
        p_0_reg_138 <= tmp_72_i8_reg_653;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_21_fu_242_p2 == ap_const_lv1_0) & ~(tmp_22_fu_248_p2 == ap_const_lv1_0)) | (~(tmp_21_fu_242_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_23_fu_254_p2) & ~(ap_const_lv1_0 == tmp_44_fu_270_p3))))) begin
        p_0_reg_138 <= tmp_31_fu_359_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_21_fu_242_p2 == ap_const_lv1_0) & (tmp_22_fu_248_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_23_fu_254_p2) & (ap_const_lv1_0 == tmp_45_fu_278_p3)) | (~(tmp_21_fu_242_p2 == ap_const_lv1_0) & (tmp_22_fu_248_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_45_fu_278_p3) & (ap_const_lv1_0 == tmp_44_fu_270_p3)))) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_21_fu_242_p2 == ap_const_lv1_0)))) begin
        roundBits_1_reg_127 <= roundBits_fu_238_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        roundBits_1_reg_127 <= roundBits_2_fu_416_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_21_fu_242_p2 == ap_const_lv1_0) & (tmp_22_fu_248_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_23_fu_254_p2) & (ap_const_lv1_0 == tmp_45_fu_278_p3)) | (~(tmp_21_fu_242_p2 == ap_const_lv1_0) & (tmp_22_fu_248_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_45_fu_278_p3) & (ap_const_lv1_0 == tmp_44_fu_270_p3)))) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_21_fu_242_p2 == ap_const_lv1_0)))) begin
        zExp_assign_1_reg_113 <= zExp;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        zExp_assign_1_reg_113 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_21_fu_242_p2 == ap_const_lv1_0) & (tmp_22_fu_248_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_23_fu_254_p2) & (ap_const_lv1_0 == tmp_45_fu_278_p3)) | (~(tmp_21_fu_242_p2 == ap_const_lv1_0) & (tmp_22_fu_248_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_45_fu_278_p3) & (ap_const_lv1_0 == tmp_44_fu_270_p3)))) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_21_fu_242_p2 == ap_const_lv1_0)))) begin
        zSig_assign1_reg_102 <= zSig;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        zSig_assign1_reg_102 <= z_6_fu_409_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_21_fu_242_p2 == ap_const_lv1_0) & (tmp_22_fu_248_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_23_fu_254_p2) & ~(ap_const_lv1_0 == tmp_45_fu_278_p3)) | (~(tmp_21_fu_242_p2 == ap_const_lv1_0) & (tmp_22_fu_248_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_45_fu_278_p3) & (ap_const_lv1_0 == tmp_44_fu_270_p3))))) begin
        count_assign_reg_611 <= count_assign_fu_290_p2;
        tmp_33_i_reg_621 <= tmp_33_i_fu_318_p2;
        tmp_47_reg_616 <= count_assign_fu_290_p2[ap_const_lv32_6];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        roundIncrement_4_reg_581 <= roundIncrement_4_fu_233_p3;
        tmp_21_reg_592 <= tmp_21_fu_242_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        sel_tmp4_cast_reg_552 <= sel_tmp4_cast_fu_199_p3;
        sel_tmp5_reg_557[9] <= sel_tmp5_fu_219_p3[9];
        tmp_29_reg_562 <= tmp_29_fu_227_p2;
        tmp_reg_547 <= tmp_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_21_fu_242_p2 == ap_const_lv1_0))) begin
        tmp_22_reg_596 <= tmp_22_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_21_fu_242_p2 == ap_const_lv1_0) & (tmp_22_fu_248_p2 == ap_const_lv1_0))) begin
        tmp_23_reg_600 <= tmp_23_fu_254_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_21_fu_242_p2 == ap_const_lv1_0) & (tmp_22_fu_248_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_23_fu_254_p2))) begin
        tmp_44_reg_604 <= tmp_25_fu_264_p2[ap_const_lv32_3F];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_72_i8_reg_653 <= tmp_72_i8_fu_535_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        zSig_assign_2_reg_647 <= zSig_assign_2_fu_500_p2;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st6_fsm_5) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (p_0_phi_fu_141_p4 or ap_sig_cseq_ST_st6_fsm_5 or ap_return_preg) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        ap_return = p_0_phi_fu_141_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (ap_sig_bdd_24) begin
    if (ap_sig_bdd_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_57) begin
    if (ap_sig_bdd_57) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_116) begin
    if (ap_sig_bdd_116) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_127) begin
    if (ap_sig_bdd_127) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_136) begin
    if (ap_sig_bdd_136) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_160) begin
    if (ap_sig_bdd_160) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (float_exception_flags_i or ap_sig_cseq_ST_st2_fsm_1 or tmp_21_fu_242_p2 or tmp_22_fu_248_p2 or tmp_23_fu_254_p2 or tmp_44_fu_270_p3 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or tmp_32_fu_420_p2 or tmp_33_fu_438_p2 or float_exception_flags_assign_i_fu_324_p2 or float_exception_flags_assign_i_1_fu_426_p2 or tmp_34_fu_444_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == tmp_33_fu_438_p2))) begin
        float_exception_flags_o = tmp_34_fu_444_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_32_fu_420_p2))) begin
        float_exception_flags_o = float_exception_flags_assign_i_1_fu_426_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_21_fu_242_p2 == ap_const_lv1_0) & ~(tmp_22_fu_248_p2 == ap_const_lv1_0)) | (~(tmp_21_fu_242_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_23_fu_254_p2) & ~(ap_const_lv1_0 == tmp_44_fu_270_p3))))) begin
        float_exception_flags_o = float_exception_flags_assign_i_fu_324_p2;
    end else begin
        float_exception_flags_o = float_exception_flags_i;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or tmp_21_fu_242_p2 or tmp_22_fu_248_p2 or tmp_23_fu_254_p2 or tmp_44_fu_270_p3 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st4_fsm_3 or tmp_32_fu_420_p2 or tmp_33_fu_438_p2) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((~(tmp_21_fu_242_p2 == ap_const_lv1_0) & ~(tmp_22_fu_248_p2 == ap_const_lv1_0)) | (~(tmp_21_fu_242_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_23_fu_254_p2) & ~(ap_const_lv1_0 == tmp_44_fu_270_p3)))) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_32_fu_420_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == tmp_33_fu_438_p2)))) begin
        float_exception_flags_o_ap_vld = ap_const_logic_1;
    end else begin
        float_exception_flags_o_ap_vld = ap_const_logic_0;
    end
end

always @ (tmp_21_reg_592 or tmp_22_reg_596 or tmp_23_reg_600 or tmp_44_reg_604 or tmp_72_i8_reg_653 or p_0_reg_138 or ap_sig_cseq_ST_st6_fsm_5) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ((tmp_21_reg_592 == ap_const_lv1_0) | ((tmp_22_reg_596 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_23_reg_600)) | ((tmp_22_reg_596 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_44_reg_604))))) begin
        p_0_phi_fu_141_p4 = tmp_72_i8_reg_653;
    end else begin
        p_0_phi_fu_141_p4 = p_0_reg_138;
    end
end
always @ (ap_start or ap_CS_fsm or tmp_21_fu_242_p2 or tmp_22_fu_248_p2 or tmp_23_fu_254_p2 or tmp_44_fu_270_p3 or tmp_45_fu_278_p3) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (((~(tmp_21_fu_242_p2 == ap_const_lv1_0) & ~(tmp_22_fu_248_p2 == ap_const_lv1_0)) | (~(tmp_21_fu_242_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_23_fu_254_p2) & ~(ap_const_lv1_0 == tmp_44_fu_270_p3)))) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else if (((~(tmp_21_fu_242_p2 == ap_const_lv1_0) & (tmp_22_fu_248_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_23_fu_254_p2) & ~(ap_const_lv1_0 == tmp_45_fu_278_p3)) | (~(tmp_21_fu_242_p2 == ap_const_lv1_0) & (tmp_22_fu_248_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_45_fu_278_p3) & (ap_const_lv1_0 == tmp_44_fu_270_p3)))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_CS_fsm) begin
    ap_sig_bdd_116 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_127 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_136 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_160 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_24 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_57 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign count_assign_fu_290_p2 = (ap_const_lv7_0 - tmp_46_fu_286_p1);

assign float_exception_flags_assign_i_1_fu_426_p2 = (float_exception_flags_i | ap_const_lv32_4);

assign float_exception_flags_assign_i_fu_324_p2 = (float_exception_flags_i | ap_const_lv32_9);

assign not_tmp_1_fu_173_p2 = (float_rounding_mode != ap_const_lv32_2? 1'b1: 1'b0);

assign not_tmp_s_fu_167_p2 = (float_rounding_mode != ap_const_lv32_3? 1'b1: 1'b0);

assign roundBits_2_fu_416_p1 = z_6_fu_409_p3[9:0];

assign roundBits_fu_238_p1 = zSig[9:0];

assign roundIncrement_4_fu_233_p3 = ((tmp_29_reg_562[0:0] === 1'b1) ? sel_tmp5_reg_557 : sel_tmp4_cast_reg_552);

assign sel_tmp2_demorgan_fu_179_p2 = (tmp_fu_155_p2 | tmp_s_fu_161_p2);

assign sel_tmp3_demorgan_fu_185_p2 = (sel_tmp2_demorgan_fu_179_p2 | zSign);

assign sel_tmp4_cast_fu_199_p3 = ((sel_tmp4_fu_191_p3[0:0] === 1'b1) ? ap_const_lv10_3FF : ap_const_lv10_0);

assign sel_tmp4_fu_191_p3 = ((sel_tmp3_demorgan_fu_185_p2[0:0] === 1'b1) ? not_tmp_1_fu_173_p2 : not_tmp_s_fu_167_p2);

assign sel_tmp5_fu_219_p3 = ((sel_tmp7_fu_213_p2[0:0] === 1'b1) ? ap_const_lv10_0 : ap_const_lv10_200);

assign sel_tmp6_fu_207_p2 = (tmp_fu_155_p2 ^ ap_const_lv1_1);

assign sel_tmp7_fu_213_p2 = (tmp_s_fu_161_p2 & sel_tmp6_fu_207_p2);

assign tmp_21_fu_242_p2 = (zExp > ap_const_lv12_7FC? 1'b1: 1'b0);

assign tmp_22_fu_248_p2 = ($signed(zExp) > $signed(12'b11111111101)? 1'b1: 1'b0);

assign tmp_23_fu_254_p2 = (zExp == ap_const_lv12_7FD? 1'b1: 1'b0);

assign tmp_24_fu_260_p1 = roundIncrement_4_fu_233_p3;

assign tmp_25_fu_264_p2 = (tmp_24_fu_260_p1 + zSig);

assign tmp_27_i_fu_365_p1 = count_assign_reg_611;

assign tmp_28_fu_349_p2 = (roundIncrement_4_fu_233_p3 == ap_const_lv10_0? 1'b1: 1'b0);

assign tmp_28_i_fu_368_p2 = zSig >> tmp_27_i_fu_365_p1;

assign tmp_29_fu_227_p2 = (sel_tmp7_fu_213_p2 | tmp_fu_155_p2);

assign tmp_2_i_fu_377_p2 = (tmp_49_fu_373_p1 | tmp_33_i_reg_621);

assign tmp_30_fu_355_p1 = tmp_28_fu_349_p2;

assign tmp_31_fu_359_p2 = (tmp_72_i9_fu_343_p2 - tmp_30_fu_355_p1);

assign tmp_31_i_fu_308_p1 = tmp_48_fu_304_p1;

assign tmp_32_fu_420_p2 = (roundBits_2_fu_416_p1 == ap_const_lv10_0? 1'b1: 1'b0);

assign tmp_32_i_fu_312_p2 = zSig << tmp_31_i_fu_308_p1;

assign tmp_33_fu_438_p2 = (roundBits_1_reg_127 == ap_const_lv10_0? 1'b1: 1'b0);

assign tmp_33_i_fu_318_p2 = (tmp_32_i_fu_312_p2 != ap_const_lv64_0? 1'b1: 1'b0);

assign tmp_34_fu_444_p2 = (float_exception_flags_i | ap_const_lv32_1);

assign tmp_34_i_fu_400_p2 = (zSig != ap_const_lv64_0? 1'b1: 1'b0);

assign tmp_35_fu_456_p1 = roundIncrement_4_reg_581;

assign tmp_36_fu_459_p2 = (tmp_35_fu_456_p1 + zSig_assign1_reg_102);

assign tmp_37_fu_475_p2 = (roundBits_1_reg_127 == ap_const_lv10_200? 1'b1: 1'b0);

assign tmp_38_fu_481_p2 = (tmp_37_fu_475_p2 & tmp_reg_547);

assign tmp_39_fu_486_p1 = tmp_38_fu_481_p2;

assign tmp_3_i_fu_382_p4 = {{tmp_28_i_fu_368_p2[ap_const_lv32_3F : ap_const_lv32_1]}};

assign tmp_40_fu_490_p2 = (tmp_39_fu_486_p1 ^ ap_const_lv32_FFFFFFFF);

assign tmp_41_fu_506_p2 = (zSig_assign_2_reg_647 == ap_const_lv54_0? 1'b1: 1'b0);

assign tmp_42_fu_511_p3 = ((tmp_41_fu_506_p2[0:0] === 1'b1) ? ap_const_lv12_0 : zExp_assign_1_reg_113);

assign tmp_44_fu_270_p3 = tmp_25_fu_264_p2[ap_const_lv32_3F];

assign tmp_45_fu_278_p3 = zExp[ap_const_lv32_B];

assign tmp_46_fu_286_p1 = zExp[6:0];

assign tmp_48_fu_304_p1 = zExp[5:0];

assign tmp_49_fu_373_p1 = tmp_28_i_fu_368_p2[0:0];

assign tmp_55_cast_fu_496_p1 = $signed(tmp_40_fu_490_p2);

assign tmp_70_i_fu_519_p3 = {{tmp_42_fu_511_p3}, {ap_const_lv52_0}};

assign tmp_71_i_fu_527_p4 = {{{zSign}, {ap_const_lv9_0}}, {zSig_assign_2_reg_647}};

assign tmp_72_i8_fu_535_p2 = (tmp_70_i_fu_519_p3 + tmp_71_i_fu_527_p4);

assign tmp_72_i9_fu_343_p2 = (tmp_i_fu_336_p3 | ap_const_lv64_7FF0000000000000);

assign tmp_fu_155_p2 = (float_rounding_mode == ap_const_lv32_0? 1'b1: 1'b0);

assign tmp_i_fu_336_p3 = {{zSign}, {ap_const_lv63_0}};

assign tmp_s_fu_161_p2 = (float_rounding_mode == ap_const_lv32_1? 1'b1: 1'b0);

assign zSig_assign_1_cast_fu_465_p4 = {{tmp_36_fu_459_p2[ap_const_lv32_3F : ap_const_lv32_A]}};

assign zSig_assign_2_fu_500_p2 = (zSig_assign_1_cast_fu_465_p4 & tmp_55_cast_fu_496_p1);

assign z_2_fu_405_p1 = tmp_34_i_fu_400_p2;

assign z_6_fu_409_p3 = ((tmp_47_reg_616[0:0] === 1'b1) ? z_2_fu_405_p1 : z_fu_392_p3);

assign z_fu_392_p3 = {{tmp_3_i_fu_382_p4}, {tmp_2_i_fu_377_p2}};
always @ (posedge ap_clk) begin
    sel_tmp5_reg_557[8:0] <= 9'b000000000;
end



endmodule //float64_add_roundAndPackFloat64

