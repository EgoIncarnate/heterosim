// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module encode_filtez (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        bpl_address0,
        bpl_ce0,
        bpl_q0,
        bpl_address1,
        bpl_ce1,
        bpl_q1,
        bpl_offset,
        dlt_offset,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_pp0_stg0_fsm_0 = 6'b1;
parameter    ap_ST_pp0_stg1_fsm_1 = 6'b10;
parameter    ap_ST_pp0_stg2_fsm_2 = 6'b100;
parameter    ap_ST_pp0_stg3_fsm_3 = 6'b1000;
parameter    ap_ST_pp0_stg4_fsm_4 = 6'b10000;
parameter    ap_ST_pp0_stg5_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_2 = 6'b10;
parameter    ap_const_lv6_3 = 6'b11;
parameter    ap_const_lv6_4 = 6'b100;
parameter    ap_const_lv6_5 = 6'b101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
output  [6:0] bpl_address0;
output   bpl_ce0;
input  [31:0] bpl_q0;
output  [6:0] bpl_address1;
output   bpl_ce1;
input  [31:0] bpl_q1;
input  [6:0] bpl_offset;
input  [6:0] dlt_offset;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] bpl_address0;
reg bpl_ce0;
reg[6:0] bpl_address1;
reg bpl_ce1;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm = 6'b1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_bdd_24;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_sig_cseq_ST_pp0_stg5_fsm_5;
reg    ap_sig_bdd_48;
reg  signed [31:0] reg_149;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_1;
reg    ap_sig_bdd_73;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_2;
reg    ap_sig_bdd_82;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_3;
reg    ap_sig_bdd_92;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_4;
reg    ap_sig_bdd_102;
reg  signed [31:0] reg_153;
wire   [5:0] tmp_fu_167_p1;
reg   [5:0] tmp_reg_402;
wire   [5:0] tmp_31_fu_171_p1;
reg   [5:0] tmp_31_reg_411;
wire   [45:0] grp_fu_203_p2;
reg   [45:0] zl_reg_520;
wire   [45:0] grp_fu_237_p2;
reg   [45:0] tmp_s_reg_535;
wire   [45:0] grp_fu_271_p2;
reg   [45:0] tmp_61_1_reg_540;
wire   [45:0] grp_fu_305_p2;
reg   [45:0] tmp_61_2_reg_545;
wire   [45:0] tmp2_fu_359_p2;
reg   [45:0] tmp2_reg_550;
wire   [45:0] grp_fu_339_p2;
reg   [45:0] tmp_61_3_reg_555;
wire   [45:0] grp_fu_353_p2;
reg   [45:0] tmp_61_4_reg_560;
reg    ap_reg_ppiten_pp0_it0_preg = 1'b0;
wire   [63:0] dlt_offset_cast2_fu_157_p1;
wire   [63:0] bpl_offset_cast1_fu_162_p1;
wire   [63:0] sum3_cast_fu_180_p1;
wire   [63:0] sum_cast_fu_190_p1;
wire   [63:0] sum3_1_cast_fu_214_p1;
wire   [63:0] sum_1_cast_fu_224_p1;
wire   [63:0] sum3_2_cast_fu_248_p1;
wire   [63:0] sum_2_cast_fu_258_p1;
wire   [63:0] sum3_3_cast_fu_282_p1;
wire   [63:0] sum_3_cast_fu_292_p1;
wire   [63:0] sum3_4_cast_fu_316_p1;
wire   [63:0] sum_4_cast_fu_326_p1;
wire   [5:0] sum3_fu_175_p2;
wire   [5:0] sum_fu_185_p2;
wire   [5:0] sum3_1_fu_209_p2;
wire   [5:0] sum_1_fu_219_p2;
wire   [5:0] sum3_2_fu_243_p2;
wire   [5:0] sum_2_fu_253_p2;
wire   [5:0] sum3_3_fu_277_p2;
wire   [5:0] sum_3_fu_287_p2;
wire   [5:0] sum3_4_fu_311_p2;
wire   [5:0] sum_4_fu_321_p2;
wire   [45:0] tmp4_fu_367_p2;
wire   [45:0] tmp3_fu_371_p2;
wire   [45:0] tmp1_fu_363_p2;
wire   [45:0] zl_1_4_fu_376_p2;
reg    grp_fu_203_ce;
reg    grp_fu_237_ce;
reg    grp_fu_271_ce;
reg    grp_fu_305_ce;
reg    grp_fu_339_ce;
reg    grp_fu_353_ce;
reg   [5:0] ap_NS_fsm;
reg    ap_sig_pprstidle_pp0;
reg    ap_sig_bdd_425;


encode_mul_32s_32s_46_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_32s_46_6_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( reg_153 ),
    .din1( reg_149 ),
    .ce( grp_fu_203_ce ),
    .dout( grp_fu_203_p2 )
);

encode_mul_32s_32s_46_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_32s_46_6_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( reg_153 ),
    .din1( reg_149 ),
    .ce( grp_fu_237_ce ),
    .dout( grp_fu_237_p2 )
);

encode_mul_32s_32s_46_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_32s_46_6_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( reg_153 ),
    .din1( reg_149 ),
    .ce( grp_fu_271_ce ),
    .dout( grp_fu_271_p2 )
);

encode_mul_32s_32s_46_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_32s_46_6_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( reg_153 ),
    .din1( reg_149 ),
    .ce( grp_fu_305_ce ),
    .dout( grp_fu_305_p2 )
);

encode_mul_32s_32s_46_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_32s_46_6_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( reg_153 ),
    .din1( reg_149 ),
    .ce( grp_fu_339_ce ),
    .dout( grp_fu_339_p2 )
);

encode_mul_32s_32s_46_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_32s_46_6_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( reg_153 ),
    .din1( reg_149 ),
    .ce( grp_fu_353_ce ),
    .dout( grp_fu_353_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0_preg
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0_preg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
            ap_reg_ppiten_pp0_it0_preg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5) & (ap_const_logic_1 == ap_ce))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_ce)) begin
            if (ap_sig_bdd_425) begin
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5)) begin
                ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5) & (ap_const_logic_1 == ap_ce)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
        reg_149 <= bpl_q0;
        reg_153 <= bpl_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        tmp2_reg_550 <= tmp2_fu_359_p2;
        tmp_61_2_reg_545 <= grp_fu_305_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        tmp_31_reg_411 <= tmp_31_fu_171_p1;
        tmp_61_4_reg_560 <= grp_fu_353_p2;
        tmp_reg_402 <= tmp_fu_167_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3))) begin
        tmp_61_1_reg_540 <= grp_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5) & (ap_const_logic_1 == ap_ce))) begin
        tmp_61_3_reg_555 <= grp_fu_339_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2))) begin
        tmp_s_reg_535 <= grp_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1))) begin
        zl_reg_520 <= grp_fu_203_p2;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it2 or ap_ce or ap_sig_cseq_ST_pp0_stg1_fsm_1) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it2))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_5 or ap_ce) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5) & (ap_const_logic_1 == ap_ce))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0_preg) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
        ap_reg_ppiten_pp0_it0 = ap_start;
    end else begin
        ap_reg_ppiten_pp0_it0 = ap_reg_ppiten_pp0_it0_preg;
    end
end

always @ (ap_sig_bdd_24) begin
    if (ap_sig_bdd_24) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_73) begin
    if (ap_sig_bdd_73) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_82) begin
    if (ap_sig_bdd_82) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_92) begin
    if (ap_sig_bdd_92) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_102) begin
    if (ap_sig_bdd_102) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_48) begin
    if (ap_sig_bdd_48) begin
        ap_sig_cseq_ST_pp0_stg5_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg5_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_0 == ap_start))) begin
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    end else begin
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_5 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or bpl_offset_cast1_fu_162_p1 or sum_cast_fu_190_p1 or sum_1_cast_fu_224_p1 or sum_2_cast_fu_258_p1 or sum_3_cast_fu_292_p1 or sum_4_cast_fu_326_p1) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5)) begin
            bpl_address0 = sum_4_cast_fu_326_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4)) begin
            bpl_address0 = sum_3_cast_fu_292_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3)) begin
            bpl_address0 = sum_2_cast_fu_258_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2)) begin
            bpl_address0 = sum_1_cast_fu_224_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            bpl_address0 = sum_cast_fu_190_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            bpl_address0 = bpl_offset_cast1_fu_162_p1;
        end else begin
            bpl_address0 = 'bx;
        end
    end else begin
        bpl_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_5 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or dlt_offset_cast2_fu_157_p1 or sum3_cast_fu_180_p1 or sum3_1_cast_fu_214_p1 or sum3_2_cast_fu_248_p1 or sum3_3_cast_fu_282_p1 or sum3_4_cast_fu_316_p1) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5)) begin
            bpl_address1 = sum3_4_cast_fu_316_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4)) begin
            bpl_address1 = sum3_3_cast_fu_282_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3)) begin
            bpl_address1 = sum3_2_cast_fu_248_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2)) begin
            bpl_address1 = sum3_1_cast_fu_214_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            bpl_address1 = sum3_cast_fu_180_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            bpl_address1 = dlt_offset_cast2_fu_157_p1;
        end else begin
            bpl_address1 = 'bx;
        end
    end else begin
        bpl_address1 = 'bx;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_5 or ap_ce or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_cseq_ST_pp0_stg4_fsm_4) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5) & (ap_const_logic_1 == ap_ce)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
        bpl_ce0 = ap_const_logic_1;
    end else begin
        bpl_ce0 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_5 or ap_ce or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_cseq_ST_pp0_stg4_fsm_4) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5) & (ap_const_logic_1 == ap_ce)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
        bpl_ce1 = ap_const_logic_1;
    end else begin
        bpl_ce1 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if ((~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        grp_fu_203_ce = ap_const_logic_0;
    end else begin
        grp_fu_203_ce = ap_const_logic_1;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if ((~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        grp_fu_237_ce = ap_const_logic_0;
    end else begin
        grp_fu_237_ce = ap_const_logic_1;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if ((~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        grp_fu_271_ce = ap_const_logic_0;
    end else begin
        grp_fu_271_ce = ap_const_logic_1;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if ((~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        grp_fu_305_ce = ap_const_logic_0;
    end else begin
        grp_fu_305_ce = ap_const_logic_1;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if ((~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        grp_fu_339_ce = ap_const_logic_0;
    end else begin
        grp_fu_339_ce = ap_const_logic_1;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_ce) begin
    if ((~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        grp_fu_353_ce = ap_const_logic_0;
    end else begin
        grp_fu_353_ce = ap_const_logic_1;
    end
end
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_ce or ap_sig_pprstidle_pp0) begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : 
        begin
            if ((~(~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) & ~((ap_const_logic_0 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_0 == ap_start)))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            end
        end
        ap_ST_pp0_stg1_fsm_1 : 
        begin
            if (((ap_const_logic_1 == ap_ce) & ~(ap_const_logic_1 == ap_sig_pprstidle_pp0))) begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_2;
            end else if (((ap_const_logic_1 == ap_ce) & (ap_const_logic_1 == ap_sig_pprstidle_pp0))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_1;
            end
        end
        ap_ST_pp0_stg2_fsm_2 : 
        begin
            if ((ap_const_logic_1 == ap_ce)) begin
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_2;
            end
        end
        ap_ST_pp0_stg3_fsm_3 : 
        begin
            if ((ap_const_logic_1 == ap_ce)) begin
                ap_NS_fsm = ap_ST_pp0_stg4_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_3;
            end
        end
        ap_ST_pp0_stg4_fsm_4 : 
        begin
            if ((ap_const_logic_1 == ap_ce)) begin
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg4_fsm_4;
            end
        end
        ap_ST_pp0_stg5_fsm_5 : 
        begin
            if ((ap_const_logic_1 == ap_ce)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_5;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_return = {{zl_1_4_fu_376_p2[ap_const_lv32_2D : ap_const_lv32_E]}};


always @ (ap_CS_fsm) begin
    ap_sig_bdd_102 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_24 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg1_fsm_1) begin
    ap_sig_bdd_425 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_48 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_73 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_82 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_92 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

assign bpl_offset_cast1_fu_162_p1 = bpl_offset;

assign dlt_offset_cast2_fu_157_p1 = dlt_offset;

assign sum3_1_cast_fu_214_p1 = sum3_1_fu_209_p2;

assign sum3_1_fu_209_p2 = (ap_const_lv6_2 + tmp_reg_402);

assign sum3_2_cast_fu_248_p1 = sum3_2_fu_243_p2;

assign sum3_2_fu_243_p2 = (ap_const_lv6_3 + tmp_reg_402);

assign sum3_3_cast_fu_282_p1 = sum3_3_fu_277_p2;

assign sum3_3_fu_277_p2 = (ap_const_lv6_4 + tmp_reg_402);

assign sum3_4_cast_fu_316_p1 = sum3_4_fu_311_p2;

assign sum3_4_fu_311_p2 = (ap_const_lv6_5 + tmp_reg_402);

assign sum3_cast_fu_180_p1 = sum3_fu_175_p2;

assign sum3_fu_175_p2 = (ap_const_lv6_1 + tmp_reg_402);

assign sum_1_cast_fu_224_p1 = sum_1_fu_219_p2;

assign sum_1_fu_219_p2 = (ap_const_lv6_2 + tmp_31_reg_411);

assign sum_2_cast_fu_258_p1 = sum_2_fu_253_p2;

assign sum_2_fu_253_p2 = (ap_const_lv6_3 + tmp_31_reg_411);

assign sum_3_cast_fu_292_p1 = sum_3_fu_287_p2;

assign sum_3_fu_287_p2 = (ap_const_lv6_4 + tmp_31_reg_411);

assign sum_4_cast_fu_326_p1 = sum_4_fu_321_p2;

assign sum_4_fu_321_p2 = (ap_const_lv6_5 + tmp_31_reg_411);

assign sum_cast_fu_190_p1 = sum_fu_185_p2;

assign sum_fu_185_p2 = (ap_const_lv6_1 + tmp_31_reg_411);

assign tmp1_fu_363_p2 = (tmp2_reg_550 + tmp_s_reg_535);

assign tmp2_fu_359_p2 = (zl_reg_520 + tmp_61_1_reg_540);

assign tmp3_fu_371_p2 = (tmp4_fu_367_p2 + tmp_61_2_reg_545);

assign tmp4_fu_367_p2 = (tmp_61_3_reg_555 + tmp_61_4_reg_560);

assign tmp_31_fu_171_p1 = bpl_offset[5:0];

assign tmp_fu_167_p1 = dlt_offset[5:0];

assign zl_1_4_fu_376_p2 = (tmp3_fu_371_p2 + tmp1_fu_363_p2);


endmodule //encode_filtez

