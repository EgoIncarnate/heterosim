// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module encode_quantl (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        el,
        detl,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 84'b1;
parameter    ap_ST_st2_fsm_1 = 84'b10;
parameter    ap_ST_st3_fsm_2 = 84'b100;
parameter    ap_ST_st4_fsm_3 = 84'b1000;
parameter    ap_ST_st5_fsm_4 = 84'b10000;
parameter    ap_ST_st6_fsm_5 = 84'b100000;
parameter    ap_ST_st7_fsm_6 = 84'b1000000;
parameter    ap_ST_st8_fsm_7 = 84'b10000000;
parameter    ap_ST_st9_fsm_8 = 84'b100000000;
parameter    ap_ST_st10_fsm_9 = 84'b1000000000;
parameter    ap_ST_st11_fsm_10 = 84'b10000000000;
parameter    ap_ST_st12_fsm_11 = 84'b100000000000;
parameter    ap_ST_st13_fsm_12 = 84'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 84'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 84'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 84'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 84'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 84'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 84'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 84'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 84'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 84'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 84'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 84'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 84'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 84'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 84'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 84'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 84'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 84'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 84'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 84'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 84'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 84'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 84'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 84'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 84'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 84'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 84'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 84'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 84'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 84'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 84'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 84'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 84'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 84'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 84'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 84'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 84'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 84'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 84'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 84'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 84'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 84'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 84'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 84'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 84'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 84'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 84'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 84'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 84'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 84'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 84'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 84'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 84'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 84'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 84'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 84'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 84'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 84'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 84'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 84'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 84'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 84'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 84'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 84'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 84'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 84'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 84'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 84'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 84'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 84'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 84'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 84'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv5_5 = 5'b101;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv5_6 = 5'b110;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv5_7 = 5'b111;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv5_8 = 5'b1000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv5_9 = 5'b1001;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv5_A = 5'b1010;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv5_B = 5'b1011;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv5_C = 5'b1100;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv5_D = 5'b1101;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv5_E = 5'b1110;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv5_F = 5'b1111;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv5_11 = 5'b10001;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv5_12 = 5'b10010;
parameter    ap_const_lv5_13 = 5'b10011;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv5_15 = 5'b10101;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv5_16 = 5'b10110;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv5_17 = 5'b10111;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv5_18 = 5'b11000;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv5_19 = 5'b11001;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv5_1A = 5'b11010;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv5_1B = 5'b11011;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv5_1C = 5'b11100;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv41_118 = 41'b100011000;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv42_370 = 42'b1101110000;
parameter    ap_const_lv43_4B0 = 43'b10010110000;
parameter    ap_const_lv43_5F0 = 43'b10111110000;
parameter    ap_const_lv43_748 = 43'b11101001000;
parameter    ap_const_lv44_8A0 = 44'b100010100000;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv44_A18 = 44'b101000011000;
parameter    ap_const_lv44_B90 = 44'b101110010000;
parameter    ap_const_lv44_D30 = 44'b110100110000;
parameter    ap_const_lv44_EC8 = 44'b111011001000;
parameter    ap_const_lv45_1090 = 45'b1000010010000;
parameter    ap_const_lv45_1258 = 45'b1001001011000;
parameter    ap_const_lv45_1450 = 45'b1010001010000;
parameter    ap_const_lv45_1650 = 45'b1011001010000;
parameter    ap_const_lv45_1890 = 45'b1100010010000;
parameter    ap_const_lv45_1AD0 = 45'b1101011010000;
parameter    ap_const_lv45_1D60 = 45'b1110101100000;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv46_2308 = 46'b10001100001000;
parameter    ap_const_lv46_2618 = 46'b10011000011000;
parameter    ap_const_lv46_29D8 = 46'b10100111011000;
parameter    ap_const_lv46_2D90 = 46'b10110110010000;
parameter    ap_const_lv46_3260 = 46'b11001001100000;
parameter    ap_const_lv46_3728 = 46'b11011100101000;
parameter    ap_const_lv46_3DE0 = 46'b11110111100000;
parameter    ap_const_lv47_4498 = 47'b100010010011000;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv47_4FE8 = 47'b100111111101000;
parameter    ap_const_lv47_5B38 = 47'b101101100111000;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv5_1E = 5'b11110;
parameter    ap_const_lv5_1D = 5'b11101;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] el;
input  [31:0] detl;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return;
(* fsm_encoding = "none" *) reg   [83:0] ap_CS_fsm = 84'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_102;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_124;
wire   [31:0] tmp_encode_abs_fu_428_ap_return;
reg   [31:0] tmp_reg_1404;
wire   [0:0] tmp_9_fu_458_p2;
reg   [0:0] tmp_9_reg_1437;
wire  signed [32:0] wd_cast_cast_fu_464_p1;
reg  signed [32:0] wd_cast_cast_reg_1441;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_137;
wire  signed [45:0] tmp_cast9_fu_467_p1;
reg  signed [45:0] tmp_cast9_reg_1446;
wire  signed [43:0] tmp_cast8_fu_470_p1;
reg  signed [43:0] tmp_cast8_reg_1457;
wire  signed [42:0] tmp_cast7_fu_473_p1;
reg  signed [42:0] tmp_cast7_reg_1466;
wire  signed [47:0] tmp_cast5_fu_476_p1;
reg  signed [47:0] tmp_cast5_reg_1473;
wire  signed [46:0] tmp_cast4_fu_479_p1;
reg  signed [46:0] tmp_cast4_reg_1478;
wire  signed [44:0] tmp_cast2_fu_482_p1;
reg  signed [44:0] tmp_cast2_reg_1485;
wire   [0:0] tmp_44_1_fu_527_p2;
wire   [0:0] tmp_44_2_fu_555_p2;
reg   [0:0] tmp_44_2_reg_1504;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_168;
wire   [0:0] tmp_44_3_fu_579_p2;
reg   [0:0] tmp_44_3_reg_1508;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_177;
wire   [0:0] tmp_44_4_fu_603_p2;
reg   [0:0] tmp_44_4_reg_1512;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_186;
wire   [0:0] tmp_44_5_fu_627_p2;
reg   [0:0] tmp_44_5_reg_1516;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_195;
wire   [0:0] tmp_44_6_fu_651_p2;
reg   [0:0] tmp_44_6_reg_1520;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_204;
wire   [0:0] tmp_44_7_fu_675_p2;
reg   [0:0] tmp_44_7_reg_1524;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_213;
wire   [0:0] tmp_44_8_fu_699_p2;
reg   [0:0] tmp_44_8_reg_1528;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_222;
wire   [0:0] tmp_44_9_fu_723_p2;
reg   [0:0] tmp_44_9_reg_1532;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_231;
wire   [0:0] tmp_44_s_fu_747_p2;
reg   [0:0] tmp_44_s_reg_1536;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_240;
wire   [0:0] tmp_44_10_fu_771_p2;
reg   [0:0] tmp_44_10_reg_1540;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_249;
wire   [0:0] tmp_44_11_fu_795_p2;
reg   [0:0] tmp_44_11_reg_1544;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_258;
wire   [0:0] tmp_44_12_fu_819_p2;
reg   [0:0] tmp_44_12_reg_1548;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_bdd_267;
wire   [0:0] tmp_44_13_fu_843_p2;
reg   [0:0] tmp_44_13_reg_1552;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_276;
wire   [0:0] tmp_44_14_fu_867_p2;
reg   [0:0] tmp_44_14_reg_1556;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_bdd_285;
wire   [0:0] tmp_44_15_fu_891_p2;
reg   [0:0] tmp_44_15_reg_1560;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_bdd_294;
wire   [0:0] tmp_44_16_fu_915_p2;
reg   [0:0] tmp_44_16_reg_1564;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_bdd_303;
wire   [0:0] tmp_44_18_fu_986_p2;
reg   [0:0] tmp_44_18_reg_1571;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_bdd_312;
wire   [0:0] tmp_44_19_fu_1010_p2;
reg   [0:0] tmp_44_19_reg_1575;
reg    ap_sig_cseq_ST_st57_fsm_56;
reg    ap_sig_bdd_321;
wire   [0:0] tmp_44_20_fu_1034_p2;
reg   [0:0] tmp_44_20_reg_1579;
reg    ap_sig_cseq_ST_st60_fsm_59;
reg    ap_sig_bdd_330;
wire   [0:0] tmp_44_21_fu_1058_p2;
reg   [0:0] tmp_44_21_reg_1583;
reg    ap_sig_cseq_ST_st63_fsm_62;
reg    ap_sig_bdd_339;
wire   [0:0] tmp_44_22_fu_1082_p2;
reg   [0:0] tmp_44_22_reg_1587;
reg    ap_sig_cseq_ST_st66_fsm_65;
reg    ap_sig_bdd_348;
wire   [0:0] tmp_44_23_fu_1106_p2;
reg   [0:0] tmp_44_23_reg_1591;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_bdd_357;
wire   [0:0] tmp_44_24_fu_1130_p2;
reg   [0:0] tmp_44_24_reg_1595;
reg    ap_sig_cseq_ST_st72_fsm_71;
reg    ap_sig_bdd_366;
wire   [0:0] tmp_44_25_fu_1150_p2;
reg   [0:0] tmp_44_25_reg_1599;
reg    ap_sig_cseq_ST_st75_fsm_74;
reg    ap_sig_bdd_375;
wire   [0:0] tmp_44_26_fu_1170_p2;
reg   [0:0] tmp_44_26_reg_1603;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_bdd_384;
wire   [0:0] tmp_44_27_fu_1190_p2;
reg   [0:0] tmp_44_27_reg_1607;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_bdd_393;
wire   [0:0] tmp_44_28_fu_1221_p2;
reg   [0:0] tmp_44_28_reg_1611;
reg    ap_sig_cseq_ST_st82_fsm_81;
reg    ap_sig_bdd_402;
wire   [4:0] p_cast_cast_fu_1226_p3;
reg    ap_sig_cseq_ST_st83_fsm_82;
reg    ap_sig_bdd_414;
wire   [31:0] tmp_encode_abs_fu_428_n;
reg   [4:0] mil_lcssa_reg_296;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_432;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_442;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_452;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_462;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_472;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_482;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_492;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_502;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_512;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_522;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_532;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_bdd_542;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_bdd_552;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_bdd_562;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_bdd_572;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_bdd_582;
wire   [0:0] tmp_44_17_fu_962_p2;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_bdd_598;
reg    ap_sig_cseq_ST_st58_fsm_57;
reg    ap_sig_bdd_608;
reg    ap_sig_cseq_ST_st61_fsm_60;
reg    ap_sig_bdd_618;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_bdd_628;
reg    ap_sig_cseq_ST_st67_fsm_66;
reg    ap_sig_bdd_638;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_bdd_648;
reg    ap_sig_cseq_ST_st73_fsm_72;
reg    ap_sig_bdd_658;
reg    ap_sig_cseq_ST_st76_fsm_75;
reg    ap_sig_bdd_668;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_bdd_678;
wire   [31:0] ril_fu_1240_p33;
reg   [31:0] ril2_phi_fu_422_p4;
reg    ap_sig_cseq_ST_st84_fsm_83;
reg    ap_sig_bdd_692;
wire   [0:0] tmp_29_fu_1233_p3;
wire   [31:0] ril_1_fu_1309_p33;
wire   [9:0] grp_fu_438_p1;
wire   [40:0] grp_fu_438_p2;
wire   [25:0] tmp_2_fu_444_p4;
wire  signed [31:0] decis_cast_cast_fu_454_p1;
wire   [40:0] p_shl_fu_485_p3;
wire   [37:0] p_shl3_fu_496_p3;
wire  signed [41:0] p_shl3_cast_fu_503_p1;
wire  signed [41:0] p_shl_cast_fu_492_p1;
wire   [41:0] tmp_43_1_fu_507_p2;
wire   [26:0] tmp_4_fu_513_p4;
wire  signed [31:0] decis_1_cast_cast_fu_523_p1;
wire   [10:0] grp_fu_535_p1;
wire   [41:0] grp_fu_535_p2;
wire   [26:0] tmp_7_fu_541_p4;
wire  signed [31:0] decis_2_cast_cast_fu_551_p1;
wire  signed [31:0] grp_fu_560_p0;
wire   [11:0] grp_fu_560_p1;
wire   [42:0] grp_fu_560_p2;
wire   [27:0] tmp_1_fu_565_p4;
wire  signed [31:0] decis_3_cast_cast_fu_575_p1;
wire  signed [31:0] grp_fu_584_p0;
wire   [11:0] grp_fu_584_p1;
wire   [42:0] grp_fu_584_p2;
wire   [27:0] tmp_3_fu_589_p4;
wire  signed [31:0] decis_4_cast_cast_fu_599_p1;
wire  signed [31:0] grp_fu_608_p0;
wire   [11:0] grp_fu_608_p1;
wire   [42:0] grp_fu_608_p2;
wire   [27:0] tmp_6_fu_613_p4;
wire  signed [31:0] decis_5_cast_cast_fu_623_p1;
wire  signed [31:0] grp_fu_632_p0;
wire   [12:0] grp_fu_632_p1;
wire   [43:0] grp_fu_632_p2;
wire   [28:0] tmp_8_fu_637_p4;
wire  signed [31:0] decis_6_cast_cast_fu_647_p1;
wire  signed [31:0] grp_fu_656_p0;
wire   [12:0] grp_fu_656_p1;
wire   [43:0] grp_fu_656_p2;
wire   [28:0] tmp_10_fu_661_p4;
wire  signed [31:0] decis_7_cast_cast_fu_671_p1;
wire  signed [31:0] grp_fu_680_p0;
wire   [12:0] grp_fu_680_p1;
wire   [43:0] grp_fu_680_p2;
wire   [28:0] tmp_11_fu_685_p4;
wire  signed [31:0] decis_8_cast_cast_fu_695_p1;
wire  signed [31:0] grp_fu_704_p0;
wire   [12:0] grp_fu_704_p1;
wire   [43:0] grp_fu_704_p2;
wire   [28:0] tmp_12_fu_709_p4;
wire  signed [31:0] decis_9_cast_cast_fu_719_p1;
wire  signed [31:0] grp_fu_728_p0;
wire   [12:0] grp_fu_728_p1;
wire   [43:0] grp_fu_728_p2;
wire   [28:0] tmp_13_fu_733_p4;
wire  signed [31:0] decis_cast_cast_31_fu_743_p1;
wire  signed [31:0] grp_fu_752_p0;
wire   [13:0] grp_fu_752_p1;
wire   [44:0] grp_fu_752_p2;
wire   [29:0] tmp_14_fu_757_p4;
wire  signed [31:0] decis_10_cast_cast_fu_767_p1;
wire  signed [31:0] grp_fu_776_p0;
wire   [13:0] grp_fu_776_p1;
wire   [44:0] grp_fu_776_p2;
wire   [29:0] tmp_15_fu_781_p4;
wire  signed [31:0] decis_11_cast_cast_fu_791_p1;
wire  signed [31:0] grp_fu_800_p0;
wire   [13:0] grp_fu_800_p1;
wire   [44:0] grp_fu_800_p2;
wire   [29:0] tmp_16_fu_805_p4;
wire  signed [31:0] decis_12_cast_cast_fu_815_p1;
wire  signed [31:0] grp_fu_824_p0;
wire   [13:0] grp_fu_824_p1;
wire   [44:0] grp_fu_824_p2;
wire   [29:0] tmp_17_fu_829_p4;
wire  signed [31:0] decis_13_cast_cast_fu_839_p1;
wire  signed [31:0] grp_fu_848_p0;
wire   [13:0] grp_fu_848_p1;
wire   [44:0] grp_fu_848_p2;
wire   [29:0] tmp_18_fu_853_p4;
wire  signed [31:0] decis_14_cast_cast_fu_863_p1;
wire  signed [31:0] grp_fu_872_p0;
wire   [13:0] grp_fu_872_p1;
wire   [44:0] grp_fu_872_p2;
wire   [29:0] tmp_19_fu_877_p4;
wire  signed [31:0] decis_15_cast_cast_fu_887_p1;
wire  signed [31:0] grp_fu_896_p0;
wire   [13:0] grp_fu_896_p1;
wire   [44:0] grp_fu_896_p2;
wire   [29:0] tmp_20_fu_901_p4;
wire  signed [31:0] decis_16_cast_cast_fu_911_p1;
wire   [44:0] p_shl4_fu_920_p3;
wire   [34:0] p_shl5_fu_931_p3;
wire  signed [45:0] p_shl4_cast_fu_927_p1;
wire  signed [45:0] p_shl5_cast_fu_938_p1;
wire   [45:0] tmp_43_16_fu_942_p2;
wire   [30:0] tmp_21_fu_948_p4;
wire  signed [31:0] decis_17_cast_cast_fu_958_p1;
wire  signed [31:0] grp_fu_967_p0;
wire   [14:0] grp_fu_967_p1;
wire   [45:0] grp_fu_967_p2;
wire   [30:0] tmp_22_fu_972_p4;
wire  signed [31:0] decis_18_cast_cast_fu_982_p1;
wire  signed [31:0] grp_fu_991_p0;
wire   [14:0] grp_fu_991_p1;
wire   [45:0] grp_fu_991_p2;
wire   [30:0] tmp_23_fu_996_p4;
wire  signed [31:0] decis_19_cast_cast_fu_1006_p1;
wire  signed [31:0] grp_fu_1015_p0;
wire   [14:0] grp_fu_1015_p1;
wire   [45:0] grp_fu_1015_p2;
wire   [30:0] tmp_24_fu_1020_p4;
wire  signed [31:0] decis_20_cast_cast_fu_1030_p1;
wire  signed [31:0] grp_fu_1039_p0;
wire   [14:0] grp_fu_1039_p1;
wire   [45:0] grp_fu_1039_p2;
wire   [30:0] tmp_25_fu_1044_p4;
wire  signed [31:0] decis_21_cast_cast_fu_1054_p1;
wire  signed [31:0] grp_fu_1063_p0;
wire   [14:0] grp_fu_1063_p1;
wire   [45:0] grp_fu_1063_p2;
wire   [30:0] tmp_26_fu_1068_p4;
wire  signed [31:0] decis_22_cast_cast_fu_1078_p1;
wire  signed [31:0] grp_fu_1087_p0;
wire   [14:0] grp_fu_1087_p1;
wire   [45:0] grp_fu_1087_p2;
wire   [30:0] tmp_27_fu_1092_p4;
wire  signed [31:0] decis_23_cast_cast_fu_1102_p1;
wire  signed [31:0] grp_fu_1111_p0;
wire   [14:0] grp_fu_1111_p1;
wire   [45:0] grp_fu_1111_p2;
wire   [30:0] tmp_28_fu_1116_p4;
wire  signed [31:0] decis_24_cast_cast_fu_1126_p1;
wire  signed [31:0] grp_fu_1135_p0;
wire   [15:0] grp_fu_1135_p1;
wire   [46:0] grp_fu_1135_p2;
wire   [31:0] decis_25_cast_cast_fu_1140_p4;
wire  signed [31:0] grp_fu_1155_p0;
wire   [15:0] grp_fu_1155_p1;
wire   [46:0] grp_fu_1155_p2;
wire   [31:0] decis_26_cast_cast_fu_1160_p4;
wire  signed [31:0] grp_fu_1175_p0;
wire   [15:0] grp_fu_1175_p1;
wire   [46:0] grp_fu_1175_p2;
wire   [31:0] decis_27_cast_cast_fu_1180_p4;
wire   [46:0] p_shl6_fu_1195_p3;
wire  signed [47:0] p_shl6_cast_fu_1202_p1;
wire   [47:0] tmp_43_27_fu_1206_p2;
wire   [32:0] decis_28_cast_cast_fu_1211_p4;
wire    grp_fu_438_ce;
wire    grp_fu_535_ce;
wire    grp_fu_560_ce;
wire    grp_fu_584_ce;
wire    grp_fu_608_ce;
wire    grp_fu_632_ce;
wire    grp_fu_656_ce;
wire    grp_fu_680_ce;
wire    grp_fu_704_ce;
wire    grp_fu_728_ce;
wire    grp_fu_752_ce;
wire    grp_fu_776_ce;
wire    grp_fu_800_ce;
wire    grp_fu_824_ce;
wire    grp_fu_848_ce;
wire    grp_fu_872_ce;
wire    grp_fu_896_ce;
wire    grp_fu_967_ce;
wire    grp_fu_991_ce;
wire    grp_fu_1015_ce;
wire    grp_fu_1039_ce;
wire    grp_fu_1063_ce;
wire    grp_fu_1087_ce;
wire    grp_fu_1111_ce;
wire    grp_fu_1135_ce;
wire    grp_fu_1155_ce;
wire    grp_fu_1175_ce;
reg   [31:0] ap_return_preg = 32'b00000000000000000000000000000000;
reg   [83:0] ap_NS_fsm;


encode_abs tmp_encode_abs_fu_428(
    .n( tmp_encode_abs_fu_428_n ),
    .ap_return( tmp_encode_abs_fu_428_ap_return )
);

encode_mul_32s_10ns_41_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 41 ))
encode_mul_32s_10ns_41_3_U17(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( detl ),
    .din1( grp_fu_438_p1 ),
    .ce( grp_fu_438_ce ),
    .dout( grp_fu_438_p2 )
);

encode_mul_32s_11ns_42_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 42 ))
encode_mul_32s_11ns_42_3_U18(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( detl ),
    .din1( grp_fu_535_p1 ),
    .ce( grp_fu_535_ce ),
    .dout( grp_fu_535_p2 )
);

encode_mul_32s_12ns_43_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 43 ))
encode_mul_32s_12ns_43_3_U19(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_560_p0 ),
    .din1( grp_fu_560_p1 ),
    .ce( grp_fu_560_ce ),
    .dout( grp_fu_560_p2 )
);

encode_mul_32s_12ns_43_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 43 ))
encode_mul_32s_12ns_43_3_U20(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_584_p0 ),
    .din1( grp_fu_584_p1 ),
    .ce( grp_fu_584_ce ),
    .dout( grp_fu_584_p2 )
);

encode_mul_32s_12ns_43_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 43 ))
encode_mul_32s_12ns_43_3_U21(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_608_p0 ),
    .din1( grp_fu_608_p1 ),
    .ce( grp_fu_608_ce ),
    .dout( grp_fu_608_p2 )
);

encode_mul_32s_13ns_44_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 44 ))
encode_mul_32s_13ns_44_3_U22(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_632_p0 ),
    .din1( grp_fu_632_p1 ),
    .ce( grp_fu_632_ce ),
    .dout( grp_fu_632_p2 )
);

encode_mul_32s_13ns_44_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 44 ))
encode_mul_32s_13ns_44_3_U23(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_656_p0 ),
    .din1( grp_fu_656_p1 ),
    .ce( grp_fu_656_ce ),
    .dout( grp_fu_656_p2 )
);

encode_mul_32s_13ns_44_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 44 ))
encode_mul_32s_13ns_44_3_U24(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_680_p0 ),
    .din1( grp_fu_680_p1 ),
    .ce( grp_fu_680_ce ),
    .dout( grp_fu_680_p2 )
);

encode_mul_32s_13ns_44_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 44 ))
encode_mul_32s_13ns_44_3_U25(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_704_p0 ),
    .din1( grp_fu_704_p1 ),
    .ce( grp_fu_704_ce ),
    .dout( grp_fu_704_p2 )
);

encode_mul_32s_13ns_44_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 44 ))
encode_mul_32s_13ns_44_3_U26(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_728_p0 ),
    .din1( grp_fu_728_p1 ),
    .ce( grp_fu_728_ce ),
    .dout( grp_fu_728_p2 )
);

encode_mul_32s_14ns_45_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 45 ))
encode_mul_32s_14ns_45_3_U27(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_752_p0 ),
    .din1( grp_fu_752_p1 ),
    .ce( grp_fu_752_ce ),
    .dout( grp_fu_752_p2 )
);

encode_mul_32s_14ns_45_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 45 ))
encode_mul_32s_14ns_45_3_U28(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_776_p0 ),
    .din1( grp_fu_776_p1 ),
    .ce( grp_fu_776_ce ),
    .dout( grp_fu_776_p2 )
);

encode_mul_32s_14ns_45_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 45 ))
encode_mul_32s_14ns_45_3_U29(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_800_p0 ),
    .din1( grp_fu_800_p1 ),
    .ce( grp_fu_800_ce ),
    .dout( grp_fu_800_p2 )
);

encode_mul_32s_14ns_45_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 45 ))
encode_mul_32s_14ns_45_3_U30(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_824_p0 ),
    .din1( grp_fu_824_p1 ),
    .ce( grp_fu_824_ce ),
    .dout( grp_fu_824_p2 )
);

encode_mul_32s_14ns_45_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 45 ))
encode_mul_32s_14ns_45_3_U31(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_848_p0 ),
    .din1( grp_fu_848_p1 ),
    .ce( grp_fu_848_ce ),
    .dout( grp_fu_848_p2 )
);

encode_mul_32s_14ns_45_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 45 ))
encode_mul_32s_14ns_45_3_U32(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_872_p0 ),
    .din1( grp_fu_872_p1 ),
    .ce( grp_fu_872_ce ),
    .dout( grp_fu_872_p2 )
);

encode_mul_32s_14ns_45_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 45 ))
encode_mul_32s_14ns_45_3_U33(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_896_p0 ),
    .din1( grp_fu_896_p1 ),
    .ce( grp_fu_896_ce ),
    .dout( grp_fu_896_p2 )
);

encode_mul_32s_15ns_46_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_15ns_46_3_U34(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_967_p0 ),
    .din1( grp_fu_967_p1 ),
    .ce( grp_fu_967_ce ),
    .dout( grp_fu_967_p2 )
);

encode_mul_32s_15ns_46_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_15ns_46_3_U35(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_991_p0 ),
    .din1( grp_fu_991_p1 ),
    .ce( grp_fu_991_ce ),
    .dout( grp_fu_991_p2 )
);

encode_mul_32s_15ns_46_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_15ns_46_3_U36(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1015_p0 ),
    .din1( grp_fu_1015_p1 ),
    .ce( grp_fu_1015_ce ),
    .dout( grp_fu_1015_p2 )
);

encode_mul_32s_15ns_46_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_15ns_46_3_U37(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1039_p0 ),
    .din1( grp_fu_1039_p1 ),
    .ce( grp_fu_1039_ce ),
    .dout( grp_fu_1039_p2 )
);

encode_mul_32s_15ns_46_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_15ns_46_3_U38(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1063_p0 ),
    .din1( grp_fu_1063_p1 ),
    .ce( grp_fu_1063_ce ),
    .dout( grp_fu_1063_p2 )
);

encode_mul_32s_15ns_46_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_15ns_46_3_U39(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1087_p0 ),
    .din1( grp_fu_1087_p1 ),
    .ce( grp_fu_1087_ce ),
    .dout( grp_fu_1087_p2 )
);

encode_mul_32s_15ns_46_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 46 ))
encode_mul_32s_15ns_46_3_U40(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1111_p0 ),
    .din1( grp_fu_1111_p1 ),
    .ce( grp_fu_1111_ce ),
    .dout( grp_fu_1111_p2 )
);

encode_mul_32s_16ns_47_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 47 ))
encode_mul_32s_16ns_47_3_U41(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1135_p0 ),
    .din1( grp_fu_1135_p1 ),
    .ce( grp_fu_1135_ce ),
    .dout( grp_fu_1135_p2 )
);

encode_mul_32s_16ns_47_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 47 ))
encode_mul_32s_16ns_47_3_U42(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1155_p0 ),
    .din1( grp_fu_1155_p1 ),
    .ce( grp_fu_1155_ce ),
    .dout( grp_fu_1155_p2 )
);

encode_mul_32s_16ns_47_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 47 ))
encode_mul_32s_16ns_47_3_U43(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1175_p0 ),
    .din1( grp_fu_1175_p1 ),
    .ce( grp_fu_1175_ce ),
    .dout( grp_fu_1175_p2 )
);

encode_mux_31to1_sel5_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
encode_mux_31to1_sel5_32_1_U44(
    .din1( ap_const_lv32_3D ),
    .din2( ap_const_lv32_3C ),
    .din3( ap_const_lv32_3B ),
    .din4( ap_const_lv32_3A ),
    .din5( ap_const_lv32_39 ),
    .din6( ap_const_lv32_38 ),
    .din7( ap_const_lv32_37 ),
    .din8( ap_const_lv32_36 ),
    .din9( ap_const_lv32_35 ),
    .din10( ap_const_lv32_34 ),
    .din11( ap_const_lv32_33 ),
    .din12( ap_const_lv32_32 ),
    .din13( ap_const_lv32_31 ),
    .din14( ap_const_lv32_30 ),
    .din15( ap_const_lv32_2F ),
    .din16( ap_const_lv32_2E ),
    .din17( ap_const_lv32_2D ),
    .din18( ap_const_lv32_2C ),
    .din19( ap_const_lv32_2B ),
    .din20( ap_const_lv32_2A ),
    .din21( ap_const_lv32_29 ),
    .din22( ap_const_lv32_28 ),
    .din23( ap_const_lv32_27 ),
    .din24( ap_const_lv32_26 ),
    .din25( ap_const_lv32_25 ),
    .din26( ap_const_lv32_24 ),
    .din27( ap_const_lv32_23 ),
    .din28( ap_const_lv32_22 ),
    .din29( ap_const_lv32_21 ),
    .din30( ap_const_lv32_20 ),
    .din31( ap_const_lv32_20 ),
    .din32( mil_lcssa_reg_296 ),
    .dout( ril_fu_1240_p33 )
);

encode_mux_31to1_sel5_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
encode_mux_31to1_sel5_32_1_U45(
    .din1( ap_const_lv32_3F ),
    .din2( ap_const_lv32_3E ),
    .din3( ap_const_lv32_1F ),
    .din4( ap_const_lv32_1E ),
    .din5( ap_const_lv32_1D ),
    .din6( ap_const_lv32_1C ),
    .din7( ap_const_lv32_1B ),
    .din8( ap_const_lv32_1A ),
    .din9( ap_const_lv32_19 ),
    .din10( ap_const_lv32_18 ),
    .din11( ap_const_lv32_17 ),
    .din12( ap_const_lv32_16 ),
    .din13( ap_const_lv32_15 ),
    .din14( ap_const_lv32_14 ),
    .din15( ap_const_lv32_13 ),
    .din16( ap_const_lv32_12 ),
    .din17( ap_const_lv32_11 ),
    .din18( ap_const_lv32_10 ),
    .din19( ap_const_lv32_F ),
    .din20( ap_const_lv32_E ),
    .din21( ap_const_lv32_D ),
    .din22( ap_const_lv32_C ),
    .din23( ap_const_lv32_B ),
    .din24( ap_const_lv32_A ),
    .din25( ap_const_lv32_9 ),
    .din26( ap_const_lv32_8 ),
    .din27( ap_const_lv32_7 ),
    .din28( ap_const_lv32_6 ),
    .din29( ap_const_lv32_5 ),
    .din30( ap_const_lv32_4 ),
    .din31( ap_const_lv32_4 ),
    .din32( mil_lcssa_reg_296 ),
    .dout( ril_1_fu_1309_p33 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_preg
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv32_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_83)) begin
            ap_return_preg <= ril2_phi_fu_422_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82)) begin
        mil_lcssa_reg_296 <= p_cast_cast_fu_1226_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) & (ap_const_lv1_0 == tmp_44_27_reg_1607))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_1C;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78) & (ap_const_lv1_0 == tmp_44_26_reg_1603))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_1B;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75) & (ap_const_lv1_0 == tmp_44_25_reg_1599))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_1A;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72) & (ap_const_lv1_0 == tmp_44_24_reg_1595))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_19;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69) & (ap_const_lv1_0 == tmp_44_23_reg_1591))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_18;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st67_fsm_66) & (ap_const_lv1_0 == tmp_44_22_reg_1587))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_17;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63) & (ap_const_lv1_0 == tmp_44_21_reg_1583))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_16;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60) & (ap_const_lv1_0 == tmp_44_20_reg_1579))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_15;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57) & (ap_const_lv1_0 == tmp_44_19_reg_1575))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_14;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54) & (ap_const_lv1_0 == tmp_44_18_reg_1571))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_13;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51) & (ap_const_lv1_0 == tmp_44_17_fu_962_p2) & ~(ap_const_lv1_0 == tmp_44_16_reg_1564))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_12;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51) & (ap_const_lv1_0 == tmp_44_16_reg_1564))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_11;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48) & (ap_const_lv1_0 == tmp_44_15_reg_1560))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_10;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45) & (ap_const_lv1_0 == tmp_44_14_reg_1556))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_F;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42) & (ap_const_lv1_0 == tmp_44_13_reg_1552))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_E;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39) & (ap_const_lv1_0 == tmp_44_12_reg_1548))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_D;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36) & (ap_const_lv1_0 == tmp_44_11_reg_1544))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_C;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) & (ap_const_lv1_0 == tmp_44_10_reg_1540))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_B;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) & (ap_const_lv1_0 == tmp_44_s_reg_1536))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_A;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) & (ap_const_lv1_0 == tmp_44_9_reg_1532))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_9;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) & (ap_const_lv1_0 == tmp_44_8_reg_1528))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_8;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == tmp_44_7_reg_1524))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_7;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) & (ap_const_lv1_0 == tmp_44_6_reg_1520))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_6;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & (ap_const_lv1_0 == tmp_44_5_reg_1516))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_5;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) & (ap_const_lv1_0 == tmp_44_4_reg_1512))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & (ap_const_lv1_0 == tmp_44_3_reg_1508))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_44_2_reg_1504))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(tmp_9_reg_1437 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_44_1_fu_527_p2))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (tmp_9_reg_1437 == ap_const_lv1_0))) begin
        mil_lcssa_reg_296 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        tmp_44_10_reg_1540 <= tmp_44_10_fu_771_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        tmp_44_11_reg_1544 <= tmp_44_11_fu_795_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        tmp_44_12_reg_1548 <= tmp_44_12_fu_819_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        tmp_44_13_reg_1552 <= tmp_44_13_fu_843_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        tmp_44_14_reg_1556 <= tmp_44_14_fu_867_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        tmp_44_15_reg_1560 <= tmp_44_15_fu_891_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        tmp_44_16_reg_1564 <= tmp_44_16_fu_915_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        tmp_44_18_reg_1571 <= tmp_44_18_fu_986_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56)) begin
        tmp_44_19_reg_1575 <= tmp_44_19_fu_1010_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        tmp_44_20_reg_1579 <= tmp_44_20_fu_1034_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_62)) begin
        tmp_44_21_reg_1583 <= tmp_44_21_fu_1058_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st66_fsm_65)) begin
        tmp_44_22_reg_1587 <= tmp_44_22_fu_1082_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        tmp_44_23_reg_1591 <= tmp_44_23_fu_1106_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71)) begin
        tmp_44_24_reg_1595 <= tmp_44_24_fu_1130_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74)) begin
        tmp_44_25_reg_1599 <= tmp_44_25_fu_1150_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77)) begin
        tmp_44_26_reg_1603 <= tmp_44_26_fu_1170_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        tmp_44_27_reg_1607 <= tmp_44_27_fu_1190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) & ~(ap_const_lv1_0 == tmp_44_27_reg_1607))) begin
        tmp_44_28_reg_1611 <= tmp_44_28_fu_1221_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_44_2_reg_1504 <= tmp_44_2_fu_555_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        tmp_44_3_reg_1508 <= tmp_44_3_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        tmp_44_4_reg_1512 <= tmp_44_4_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        tmp_44_5_reg_1516 <= tmp_44_5_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        tmp_44_6_reg_1520 <= tmp_44_6_fu_651_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        tmp_44_7_reg_1524 <= tmp_44_7_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        tmp_44_8_reg_1528 <= tmp_44_8_fu_699_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        tmp_44_9_reg_1532 <= tmp_44_9_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        tmp_44_s_reg_1536 <= tmp_44_s_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tmp_9_reg_1437 <= tmp_9_fu_458_p2;
        tmp_reg_1404 <= tmp_encode_abs_fu_428_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        tmp_cast2_reg_1485 <= tmp_cast2_fu_482_p1;
        tmp_cast4_reg_1478 <= tmp_cast4_fu_479_p1;
        tmp_cast5_reg_1473 <= tmp_cast5_fu_476_p1;
        tmp_cast7_reg_1466 <= tmp_cast7_fu_473_p1;
        tmp_cast8_reg_1457 <= tmp_cast8_fu_470_p1;
        tmp_cast9_reg_1446 <= tmp_cast9_fu_467_p1;
        wd_cast_cast_reg_1441 <= wd_cast_cast_fu_464_p1;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st84_fsm_83) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_83))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st84_fsm_83) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_83)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ril2_phi_fu_422_p4 or ap_sig_cseq_ST_st84_fsm_83 or ap_return_preg) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_83)) begin
        ap_return = ril2_phi_fu_422_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (ap_sig_bdd_442) begin
    if (ap_sig_bdd_442) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_186) begin
    if (ap_sig_bdd_186) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_452) begin
    if (ap_sig_bdd_452) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_195) begin
    if (ap_sig_bdd_195) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_462) begin
    if (ap_sig_bdd_462) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_204) begin
    if (ap_sig_bdd_204) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_472) begin
    if (ap_sig_bdd_472) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_102) begin
    if (ap_sig_bdd_102) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_213) begin
    if (ap_sig_bdd_213) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_482) begin
    if (ap_sig_bdd_482) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_222) begin
    if (ap_sig_bdd_222) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_492) begin
    if (ap_sig_bdd_492) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_231) begin
    if (ap_sig_bdd_231) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_502) begin
    if (ap_sig_bdd_502) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_240) begin
    if (ap_sig_bdd_240) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_512) begin
    if (ap_sig_bdd_512) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_249) begin
    if (ap_sig_bdd_249) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_522) begin
    if (ap_sig_bdd_522) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_258) begin
    if (ap_sig_bdd_258) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_532) begin
    if (ap_sig_bdd_532) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_267) begin
    if (ap_sig_bdd_267) begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_124) begin
    if (ap_sig_bdd_124) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_542) begin
    if (ap_sig_bdd_542) begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_276) begin
    if (ap_sig_bdd_276) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_552) begin
    if (ap_sig_bdd_552) begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_285) begin
    if (ap_sig_bdd_285) begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_562) begin
    if (ap_sig_bdd_562) begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_294) begin
    if (ap_sig_bdd_294) begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_572) begin
    if (ap_sig_bdd_572) begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_137) begin
    if (ap_sig_bdd_137) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_303) begin
    if (ap_sig_bdd_303) begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_582) begin
    if (ap_sig_bdd_582) begin
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_312) begin
    if (ap_sig_bdd_312) begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_598) begin
    if (ap_sig_bdd_598) begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_321) begin
    if (ap_sig_bdd_321) begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_608) begin
    if (ap_sig_bdd_608) begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_330) begin
    if (ap_sig_bdd_330) begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_618) begin
    if (ap_sig_bdd_618) begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_339) begin
    if (ap_sig_bdd_339) begin
        ap_sig_cseq_ST_st63_fsm_62 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st63_fsm_62 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_628) begin
    if (ap_sig_bdd_628) begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_348) begin
    if (ap_sig_bdd_348) begin
        ap_sig_cseq_ST_st66_fsm_65 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st66_fsm_65 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_638) begin
    if (ap_sig_bdd_638) begin
        ap_sig_cseq_ST_st67_fsm_66 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st67_fsm_66 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_357) begin
    if (ap_sig_bdd_357) begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_168) begin
    if (ap_sig_bdd_168) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_648) begin
    if (ap_sig_bdd_648) begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_366) begin
    if (ap_sig_bdd_366) begin
        ap_sig_cseq_ST_st72_fsm_71 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_71 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_658) begin
    if (ap_sig_bdd_658) begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_375) begin
    if (ap_sig_bdd_375) begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_668) begin
    if (ap_sig_bdd_668) begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_384) begin
    if (ap_sig_bdd_384) begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_678) begin
    if (ap_sig_bdd_678) begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_432) begin
    if (ap_sig_bdd_432) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_393) begin
    if (ap_sig_bdd_393) begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_402) begin
    if (ap_sig_bdd_402) begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_414) begin
    if (ap_sig_bdd_414) begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_692) begin
    if (ap_sig_bdd_692) begin
        ap_sig_cseq_ST_st84_fsm_83 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st84_fsm_83 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_177) begin
    if (ap_sig_bdd_177) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (ril_fu_1240_p33 or ap_sig_cseq_ST_st84_fsm_83 or tmp_29_fu_1233_p3 or ril_1_fu_1309_p33) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_83)) begin
        if (~(ap_const_lv1_0 == tmp_29_fu_1233_p3)) begin
            ril2_phi_fu_422_p4 = ril_1_fu_1309_p33;
        end else if ((ap_const_lv1_0 == tmp_29_fu_1233_p3)) begin
            ril2_phi_fu_422_p4 = ril_fu_1240_p33;
        end else begin
            ril2_phi_fu_422_p4 = 'bx;
        end
    end else begin
        ril2_phi_fu_422_p4 = 'bx;
    end
end
always @ (ap_start or ap_CS_fsm or tmp_9_reg_1437 or tmp_44_1_fu_527_p2 or tmp_44_2_reg_1504 or tmp_44_3_reg_1508 or tmp_44_4_reg_1512 or tmp_44_5_reg_1516 or tmp_44_6_reg_1520 or tmp_44_7_reg_1524 or tmp_44_8_reg_1528 or tmp_44_9_reg_1532 or tmp_44_s_reg_1536 or tmp_44_10_reg_1540 or tmp_44_11_reg_1544 or tmp_44_12_reg_1548 or tmp_44_13_reg_1552 or tmp_44_14_reg_1556 or tmp_44_15_reg_1560 or tmp_44_16_reg_1564 or tmp_44_18_reg_1571 or tmp_44_19_reg_1575 or tmp_44_20_reg_1579 or tmp_44_21_reg_1583 or tmp_44_22_reg_1587 or tmp_44_23_reg_1591 or tmp_44_24_reg_1595 or tmp_44_25_reg_1599 or tmp_44_26_reg_1603 or tmp_44_27_reg_1607 or tmp_44_17_fu_962_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((~(tmp_9_reg_1437 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_44_1_fu_527_p2))) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_2_reg_1504)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_3_reg_1508)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_4_reg_1512)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_5_reg_1516)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_6_reg_1520)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_7_reg_1524)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_8_reg_1528)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_9_reg_1532)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_s_reg_1536)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_10_reg_1540)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st35_fsm_34;
            end
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_11_reg_1544)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st38_fsm_37;
            end
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_12_reg_1548)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st41_fsm_40;
            end
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_13_reg_1552)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st44_fsm_43;
            end
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_14_reg_1556)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st47_fsm_46;
            end
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_15_reg_1560)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st50_fsm_49;
            end
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            if ((~(ap_const_lv1_0 == tmp_44_16_reg_1564) & ~(ap_const_lv1_0 == tmp_44_17_fu_962_p2))) begin
                ap_NS_fsm = ap_ST_st53_fsm_52;
            end else begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_18_reg_1571)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st56_fsm_55;
            end
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_19_reg_1575)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st59_fsm_58;
            end
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_20_reg_1579)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st62_fsm_61;
            end
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_21_reg_1583)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st65_fsm_64;
            end
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_22_reg_1587)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st68_fsm_67;
            end
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_23_reg_1591)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st71_fsm_70;
            end
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_24_reg_1595)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st74_fsm_73;
            end
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_25_reg_1599)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st77_fsm_76;
            end
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_26_reg_1603)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st80_fsm_79;
            end
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            if ((ap_const_lv1_0 == tmp_44_27_reg_1607)) begin
                ap_NS_fsm = ap_ST_st84_fsm_83;
            end else begin
                ap_NS_fsm = ap_ST_st83_fsm_82;
            end
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_CS_fsm) begin
    ap_sig_bdd_102 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_124 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_137 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_168 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_177 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_186 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_195 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_204 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_213 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_222 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_231 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_240 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_249 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_258 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_267 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_276 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_285 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_294 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_303 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_312 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_35]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_321 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_38]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_330 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_339 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_348 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_41]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_357 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_44]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_366 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_47]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_375 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_384 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_393 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_402 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_51]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_414 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_52]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_432 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_442 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_452 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_462 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_472 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_482 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_492 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_502 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_512 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_522 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_532 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_542 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_27]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_552 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_562 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_572 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_582 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_33]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_598 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_36]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_608 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_39]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_618 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_628 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_638 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_42]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_648 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_45]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_658 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_48]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_668 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_678 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_692 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_53]);
end

assign decis_10_cast_cast_fu_767_p1 = $signed(tmp_14_fu_757_p4);

assign decis_11_cast_cast_fu_791_p1 = $signed(tmp_15_fu_781_p4);

assign decis_12_cast_cast_fu_815_p1 = $signed(tmp_16_fu_805_p4);

assign decis_13_cast_cast_fu_839_p1 = $signed(tmp_17_fu_829_p4);

assign decis_14_cast_cast_fu_863_p1 = $signed(tmp_18_fu_853_p4);

assign decis_15_cast_cast_fu_887_p1 = $signed(tmp_19_fu_877_p4);

assign decis_16_cast_cast_fu_911_p1 = $signed(tmp_20_fu_901_p4);

assign decis_17_cast_cast_fu_958_p1 = $signed(tmp_21_fu_948_p4);

assign decis_18_cast_cast_fu_982_p1 = $signed(tmp_22_fu_972_p4);

assign decis_19_cast_cast_fu_1006_p1 = $signed(tmp_23_fu_996_p4);

assign decis_1_cast_cast_fu_523_p1 = $signed(tmp_4_fu_513_p4);

assign decis_20_cast_cast_fu_1030_p1 = $signed(tmp_24_fu_1020_p4);

assign decis_21_cast_cast_fu_1054_p1 = $signed(tmp_25_fu_1044_p4);

assign decis_22_cast_cast_fu_1078_p1 = $signed(tmp_26_fu_1068_p4);

assign decis_23_cast_cast_fu_1102_p1 = $signed(tmp_27_fu_1092_p4);

assign decis_24_cast_cast_fu_1126_p1 = $signed(tmp_28_fu_1116_p4);

assign decis_25_cast_cast_fu_1140_p4 = {{grp_fu_1135_p2[ap_const_lv32_2E : ap_const_lv32_F]}};

assign decis_26_cast_cast_fu_1160_p4 = {{grp_fu_1155_p2[ap_const_lv32_2E : ap_const_lv32_F]}};

assign decis_27_cast_cast_fu_1180_p4 = {{grp_fu_1175_p2[ap_const_lv32_2E : ap_const_lv32_F]}};

assign decis_28_cast_cast_fu_1211_p4 = {{tmp_43_27_fu_1206_p2[ap_const_lv32_2F : ap_const_lv32_F]}};

assign decis_2_cast_cast_fu_551_p1 = $signed(tmp_7_fu_541_p4);

assign decis_3_cast_cast_fu_575_p1 = $signed(tmp_1_fu_565_p4);

assign decis_4_cast_cast_fu_599_p1 = $signed(tmp_3_fu_589_p4);

assign decis_5_cast_cast_fu_623_p1 = $signed(tmp_6_fu_613_p4);

assign decis_6_cast_cast_fu_647_p1 = $signed(tmp_8_fu_637_p4);

assign decis_7_cast_cast_fu_671_p1 = $signed(tmp_10_fu_661_p4);

assign decis_8_cast_cast_fu_695_p1 = $signed(tmp_11_fu_685_p4);

assign decis_9_cast_cast_fu_719_p1 = $signed(tmp_12_fu_709_p4);

assign decis_cast_cast_31_fu_743_p1 = $signed(tmp_13_fu_733_p4);

assign decis_cast_cast_fu_454_p1 = $signed(tmp_2_fu_444_p4);

assign grp_fu_1015_ce = ap_const_logic_1;

assign grp_fu_1015_p0 = tmp_cast9_reg_1446;

assign grp_fu_1015_p1 = ap_const_lv46_29D8;

assign grp_fu_1039_ce = ap_const_logic_1;

assign grp_fu_1039_p0 = tmp_cast9_reg_1446;

assign grp_fu_1039_p1 = ap_const_lv46_2D90;

assign grp_fu_1063_ce = ap_const_logic_1;

assign grp_fu_1063_p0 = tmp_cast9_reg_1446;

assign grp_fu_1063_p1 = ap_const_lv46_3260;

assign grp_fu_1087_ce = ap_const_logic_1;

assign grp_fu_1087_p0 = tmp_cast9_reg_1446;

assign grp_fu_1087_p1 = ap_const_lv46_3728;

assign grp_fu_1111_ce = ap_const_logic_1;

assign grp_fu_1111_p0 = tmp_cast9_reg_1446;

assign grp_fu_1111_p1 = ap_const_lv46_3DE0;

assign grp_fu_1135_ce = ap_const_logic_1;

assign grp_fu_1135_p0 = tmp_cast4_reg_1478;

assign grp_fu_1135_p1 = ap_const_lv47_4498;

assign grp_fu_1155_ce = ap_const_logic_1;

assign grp_fu_1155_p0 = tmp_cast4_reg_1478;

assign grp_fu_1155_p1 = ap_const_lv47_4FE8;

assign grp_fu_1175_ce = ap_const_logic_1;

assign grp_fu_1175_p0 = tmp_cast4_reg_1478;

assign grp_fu_1175_p1 = ap_const_lv47_5B38;

assign grp_fu_438_ce = ap_const_logic_1;

assign grp_fu_438_p1 = ap_const_lv41_118;

assign grp_fu_535_ce = ap_const_logic_1;

assign grp_fu_535_p1 = ap_const_lv42_370;

assign grp_fu_560_ce = ap_const_logic_1;

assign grp_fu_560_p0 = tmp_cast7_reg_1466;

assign grp_fu_560_p1 = ap_const_lv43_4B0;

assign grp_fu_584_ce = ap_const_logic_1;

assign grp_fu_584_p0 = tmp_cast7_reg_1466;

assign grp_fu_584_p1 = ap_const_lv43_5F0;

assign grp_fu_608_ce = ap_const_logic_1;

assign grp_fu_608_p0 = tmp_cast7_reg_1466;

assign grp_fu_608_p1 = ap_const_lv43_748;

assign grp_fu_632_ce = ap_const_logic_1;

assign grp_fu_632_p0 = tmp_cast8_reg_1457;

assign grp_fu_632_p1 = ap_const_lv44_8A0;

assign grp_fu_656_ce = ap_const_logic_1;

assign grp_fu_656_p0 = tmp_cast8_reg_1457;

assign grp_fu_656_p1 = ap_const_lv44_A18;

assign grp_fu_680_ce = ap_const_logic_1;

assign grp_fu_680_p0 = tmp_cast8_reg_1457;

assign grp_fu_680_p1 = ap_const_lv44_B90;

assign grp_fu_704_ce = ap_const_logic_1;

assign grp_fu_704_p0 = tmp_cast8_reg_1457;

assign grp_fu_704_p1 = ap_const_lv44_D30;

assign grp_fu_728_ce = ap_const_logic_1;

assign grp_fu_728_p0 = tmp_cast8_reg_1457;

assign grp_fu_728_p1 = ap_const_lv44_EC8;

assign grp_fu_752_ce = ap_const_logic_1;

assign grp_fu_752_p0 = tmp_cast2_reg_1485;

assign grp_fu_752_p1 = ap_const_lv45_1090;

assign grp_fu_776_ce = ap_const_logic_1;

assign grp_fu_776_p0 = tmp_cast2_reg_1485;

assign grp_fu_776_p1 = ap_const_lv45_1258;

assign grp_fu_800_ce = ap_const_logic_1;

assign grp_fu_800_p0 = tmp_cast2_reg_1485;

assign grp_fu_800_p1 = ap_const_lv45_1450;

assign grp_fu_824_ce = ap_const_logic_1;

assign grp_fu_824_p0 = tmp_cast2_reg_1485;

assign grp_fu_824_p1 = ap_const_lv45_1650;

assign grp_fu_848_ce = ap_const_logic_1;

assign grp_fu_848_p0 = tmp_cast2_reg_1485;

assign grp_fu_848_p1 = ap_const_lv45_1890;

assign grp_fu_872_ce = ap_const_logic_1;

assign grp_fu_872_p0 = tmp_cast2_reg_1485;

assign grp_fu_872_p1 = ap_const_lv45_1AD0;

assign grp_fu_896_ce = ap_const_logic_1;

assign grp_fu_896_p0 = tmp_cast2_reg_1485;

assign grp_fu_896_p1 = ap_const_lv45_1D60;

assign grp_fu_967_ce = ap_const_logic_1;

assign grp_fu_967_p0 = tmp_cast9_reg_1446;

assign grp_fu_967_p1 = ap_const_lv46_2308;

assign grp_fu_991_ce = ap_const_logic_1;

assign grp_fu_991_p0 = tmp_cast9_reg_1446;

assign grp_fu_991_p1 = ap_const_lv46_2618;

assign p_cast_cast_fu_1226_p3 = ((tmp_44_28_reg_1611[0:0] === 1'b1) ? ap_const_lv5_1E : ap_const_lv5_1D);

assign p_shl3_cast_fu_503_p1 = $signed(p_shl3_fu_496_p3);

assign p_shl3_fu_496_p3 = {{detl}, {ap_const_lv6_0}};

assign p_shl4_cast_fu_927_p1 = $signed(p_shl4_fu_920_p3);

assign p_shl4_fu_920_p3 = {{detl}, {ap_const_lv13_0}};

assign p_shl5_cast_fu_938_p1 = $signed(p_shl5_fu_931_p3);

assign p_shl5_fu_931_p3 = {{detl}, {ap_const_lv3_0}};

assign p_shl6_cast_fu_1202_p1 = $signed(p_shl6_fu_1195_p3);

assign p_shl6_fu_1195_p3 = {{detl}, {ap_const_lv15_0}};

assign p_shl_cast_fu_492_p1 = $signed(p_shl_fu_485_p3);

assign p_shl_fu_485_p3 = {{detl}, {ap_const_lv9_0}};

assign tmp_10_fu_661_p4 = {{grp_fu_656_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_11_fu_685_p4 = {{grp_fu_680_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_12_fu_709_p4 = {{grp_fu_704_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_13_fu_733_p4 = {{grp_fu_728_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_14_fu_757_p4 = {{grp_fu_752_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_15_fu_781_p4 = {{grp_fu_776_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_16_fu_805_p4 = {{grp_fu_800_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_17_fu_829_p4 = {{grp_fu_824_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_18_fu_853_p4 = {{grp_fu_848_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_19_fu_877_p4 = {{grp_fu_872_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_1_fu_565_p4 = {{grp_fu_560_p2[ap_const_lv32_2A : ap_const_lv32_F]}};

assign tmp_20_fu_901_p4 = {{grp_fu_896_p2[ap_const_lv32_2C : ap_const_lv32_F]}};

assign tmp_21_fu_948_p4 = {{tmp_43_16_fu_942_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_22_fu_972_p4 = {{grp_fu_967_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_23_fu_996_p4 = {{grp_fu_991_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_24_fu_1020_p4 = {{grp_fu_1015_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_25_fu_1044_p4 = {{grp_fu_1039_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_26_fu_1068_p4 = {{grp_fu_1063_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_27_fu_1092_p4 = {{grp_fu_1087_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_28_fu_1116_p4 = {{grp_fu_1111_p2[ap_const_lv32_2D : ap_const_lv32_F]}};

assign tmp_29_fu_1233_p3 = el[ap_const_lv32_1F];

assign tmp_2_fu_444_p4 = {{grp_fu_438_p2[ap_const_lv32_28 : ap_const_lv32_F]}};

assign tmp_3_fu_589_p4 = {{grp_fu_584_p2[ap_const_lv32_2A : ap_const_lv32_F]}};

assign tmp_43_16_fu_942_p2 = ($signed(p_shl4_cast_fu_927_p1) - $signed(p_shl5_cast_fu_938_p1));

assign tmp_43_1_fu_507_p2 = ($signed(p_shl3_cast_fu_503_p1) + $signed(p_shl_cast_fu_492_p1));

assign tmp_43_27_fu_1206_p2 = ($signed(p_shl6_cast_fu_1202_p1) - $signed(tmp_cast5_reg_1473));

assign tmp_44_10_fu_771_p2 = ($signed(tmp_reg_1404) > $signed(decis_10_cast_cast_fu_767_p1)? 1'b1: 1'b0);

assign tmp_44_11_fu_795_p2 = ($signed(tmp_reg_1404) > $signed(decis_11_cast_cast_fu_791_p1)? 1'b1: 1'b0);

assign tmp_44_12_fu_819_p2 = ($signed(tmp_reg_1404) > $signed(decis_12_cast_cast_fu_815_p1)? 1'b1: 1'b0);

assign tmp_44_13_fu_843_p2 = ($signed(tmp_reg_1404) > $signed(decis_13_cast_cast_fu_839_p1)? 1'b1: 1'b0);

assign tmp_44_14_fu_867_p2 = ($signed(tmp_reg_1404) > $signed(decis_14_cast_cast_fu_863_p1)? 1'b1: 1'b0);

assign tmp_44_15_fu_891_p2 = ($signed(tmp_reg_1404) > $signed(decis_15_cast_cast_fu_887_p1)? 1'b1: 1'b0);

assign tmp_44_16_fu_915_p2 = ($signed(tmp_reg_1404) > $signed(decis_16_cast_cast_fu_911_p1)? 1'b1: 1'b0);

assign tmp_44_17_fu_962_p2 = ($signed(tmp_reg_1404) > $signed(decis_17_cast_cast_fu_958_p1)? 1'b1: 1'b0);

assign tmp_44_18_fu_986_p2 = ($signed(tmp_reg_1404) > $signed(decis_18_cast_cast_fu_982_p1)? 1'b1: 1'b0);

assign tmp_44_19_fu_1010_p2 = ($signed(tmp_reg_1404) > $signed(decis_19_cast_cast_fu_1006_p1)? 1'b1: 1'b0);

assign tmp_44_1_fu_527_p2 = ($signed(tmp_reg_1404) > $signed(decis_1_cast_cast_fu_523_p1)? 1'b1: 1'b0);

assign tmp_44_20_fu_1034_p2 = ($signed(tmp_reg_1404) > $signed(decis_20_cast_cast_fu_1030_p1)? 1'b1: 1'b0);

assign tmp_44_21_fu_1058_p2 = ($signed(tmp_reg_1404) > $signed(decis_21_cast_cast_fu_1054_p1)? 1'b1: 1'b0);

assign tmp_44_22_fu_1082_p2 = ($signed(tmp_reg_1404) > $signed(decis_22_cast_cast_fu_1078_p1)? 1'b1: 1'b0);

assign tmp_44_23_fu_1106_p2 = ($signed(tmp_reg_1404) > $signed(decis_23_cast_cast_fu_1102_p1)? 1'b1: 1'b0);

assign tmp_44_24_fu_1130_p2 = ($signed(tmp_reg_1404) > $signed(decis_24_cast_cast_fu_1126_p1)? 1'b1: 1'b0);

assign tmp_44_25_fu_1150_p2 = ($signed(tmp_reg_1404) > $signed(decis_25_cast_cast_fu_1140_p4)? 1'b1: 1'b0);

assign tmp_44_26_fu_1170_p2 = ($signed(tmp_reg_1404) > $signed(decis_26_cast_cast_fu_1160_p4)? 1'b1: 1'b0);

assign tmp_44_27_fu_1190_p2 = ($signed(tmp_reg_1404) > $signed(decis_27_cast_cast_fu_1180_p4)? 1'b1: 1'b0);

assign tmp_44_28_fu_1221_p2 = ($signed(wd_cast_cast_reg_1441) > $signed(decis_28_cast_cast_fu_1211_p4)? 1'b1: 1'b0);

assign tmp_44_2_fu_555_p2 = ($signed(tmp_reg_1404) > $signed(decis_2_cast_cast_fu_551_p1)? 1'b1: 1'b0);

assign tmp_44_3_fu_579_p2 = ($signed(tmp_reg_1404) > $signed(decis_3_cast_cast_fu_575_p1)? 1'b1: 1'b0);

assign tmp_44_4_fu_603_p2 = ($signed(tmp_reg_1404) > $signed(decis_4_cast_cast_fu_599_p1)? 1'b1: 1'b0);

assign tmp_44_5_fu_627_p2 = ($signed(tmp_reg_1404) > $signed(decis_5_cast_cast_fu_623_p1)? 1'b1: 1'b0);

assign tmp_44_6_fu_651_p2 = ($signed(tmp_reg_1404) > $signed(decis_6_cast_cast_fu_647_p1)? 1'b1: 1'b0);

assign tmp_44_7_fu_675_p2 = ($signed(tmp_reg_1404) > $signed(decis_7_cast_cast_fu_671_p1)? 1'b1: 1'b0);

assign tmp_44_8_fu_699_p2 = ($signed(tmp_reg_1404) > $signed(decis_8_cast_cast_fu_695_p1)? 1'b1: 1'b0);

assign tmp_44_9_fu_723_p2 = ($signed(tmp_reg_1404) > $signed(decis_9_cast_cast_fu_719_p1)? 1'b1: 1'b0);

assign tmp_44_s_fu_747_p2 = ($signed(tmp_reg_1404) > $signed(decis_cast_cast_31_fu_743_p1)? 1'b1: 1'b0);

assign tmp_4_fu_513_p4 = {{tmp_43_1_fu_507_p2[ap_const_lv32_29 : ap_const_lv32_F]}};

assign tmp_6_fu_613_p4 = {{grp_fu_608_p2[ap_const_lv32_2A : ap_const_lv32_F]}};

assign tmp_7_fu_541_p4 = {{grp_fu_535_p2[ap_const_lv32_29 : ap_const_lv32_F]}};

assign tmp_8_fu_637_p4 = {{grp_fu_632_p2[ap_const_lv32_2B : ap_const_lv32_F]}};

assign tmp_9_fu_458_p2 = ($signed(tmp_encode_abs_fu_428_ap_return) > $signed(decis_cast_cast_fu_454_p1)? 1'b1: 1'b0);

assign tmp_cast2_fu_482_p1 = $signed(detl);

assign tmp_cast4_fu_479_p1 = $signed(detl);

assign tmp_cast5_fu_476_p1 = $signed(detl);

assign tmp_cast7_fu_473_p1 = $signed(detl);

assign tmp_cast8_fu_470_p1 = $signed(detl);

assign tmp_cast9_fu_467_p1 = $signed(detl);

assign tmp_encode_abs_fu_428_n = el;

assign wd_cast_cast_fu_464_p1 = $signed(tmp_reg_1404);


endmodule //encode_quantl

