// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bitcnt,hls_ip_2015_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.479000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=340,HLS_SYN_LUT=845}" *)

module bitcnt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        mm,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0,
        out_r_address1,
        out_r_ce1,
        out_r_we1,
        out_r_d1,
        nn,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 7'b1;
parameter    ap_ST_st2_fsm_1 = 7'b10;
parameter    ap_ST_st3_fsm_2 = 7'b100;
parameter    ap_ST_st4_fsm_3 = 7'b1000;
parameter    ap_ST_st5_fsm_4 = 7'b10000;
parameter    ap_ST_st6_fsm_5 = 7'b100000;
parameter    ap_ST_st7_fsm_6 = 7'b1000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_FFFFFFFFFFFFFFFF = 64'b1111111111111111111111111111111111111111111111111111111111111111;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] in_r;
input  [31:0] mm;
output  [2:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [31:0] out_r_d0;
output  [2:0] out_r_address1;
output   out_r_ce1;
output   out_r_we1;
output  [31:0] out_r_d1;
input  [31:0] nn;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] out_r_address0;
reg out_r_ce0;
reg out_r_we0;
reg[31:0] out_r_d0;
reg[2:0] out_r_address1;
reg out_r_ce1;
reg out_r_we1;
reg[31:0] out_r_d1;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm = 7'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_23;
reg   [7:0] bits_address0;
reg    bits_ce0;
wire   [3:0] bits_q0;
reg   [7:0] bits_address1;
reg    bits_ce1;
wire   [3:0] bits_q1;
reg   [7:0] bits_address2;
reg    bits_ce2;
wire   [3:0] bits_q2;
reg   [7:0] bits_address3;
reg    bits_ce3;
wire   [3:0] bits_q3;
wire   [7:0] bits_address4;
reg    bits_ce4;
wire   [3:0] bits_q4;
wire   [7:0] bits_address5;
reg    bits_ce5;
wire   [3:0] bits_q5;
wire   [7:0] bits_address6;
reg    bits_ce6;
wire   [3:0] bits_q6;
wire   [7:0] bits_address7;
reg    bits_ce7;
wire   [3:0] bits_q7;
wire   [2:0] out_addr_5_gep_fu_170_p3;
reg   [2:0] out_addr_5_reg_1691;
wire   [0:0] tmp_i_fu_414_p2;
reg   [0:0] tmp_i_reg_1696;
wire   [63:0] x_1_fu_426_p2;
reg   [63:0] x_1_reg_1700;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_100;
wire   [0:0] tmp_59_i_fu_432_p2;
reg   [0:0] tmp_59_i_reg_1705;
wire   [31:0] n_fu_438_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_111;
reg   [4:0] tmp_56_reg_1755;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_144;
reg   [7:0] tmp_57_reg_1760;
reg   [7:0] tmp_58_reg_1765;
wire   [7:0] tmp_59_fu_1306_p1;
reg   [7:0] tmp_59_reg_1770;
wire   [6:0] out_write_assign_1_fu_1402_p2;
reg   [6:0] out_write_assign_1_reg_1775;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_161;
wire   [2:0] out_addr_4_gep_fu_342_p3;
reg   [2:0] out_addr_4_reg_1800;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_176;
wire   [6:0] i_fu_1593_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_185;
wire   [31:0] n_1_fu_1607_p2;
wire   [0:0] demorgan_fu_1587_p2;
wire  signed [63:0] x_2_fu_1623_p1;
reg   [63:0] x3_i_reg_350;
reg   [31:0] n_i_reg_359;
reg   [31:0] n_1_i_reg_370;
reg   [63:0] x1_i_reg_382;
reg   [6:0] i_i_reg_391;
reg   [31:0] out_write_assign_4_reg_402;
wire   [63:0] tmp_2_i_fu_447_p1;
wire   [63:0] tmp_7_i_fu_461_p1;
wire   [63:0] tmp_11_i_fu_475_p1;
wire   [63:0] tmp_16_i_fu_489_p1;
wire   [63:0] tmp_21_i_fu_503_p1;
wire   [63:0] tmp_26_i_fu_517_p1;
wire   [63:0] tmp_31_i_fu_531_p1;
wire   [63:0] tmp_36_i_fu_545_p1;
wire   [63:0] tmp_i3_fu_1478_p1;
wire   [63:0] tmp_63_i_fu_1492_p1;
wire   [63:0] tmp_67_i_fu_1506_p1;
wire   [63:0] tmp_71_i_fu_1520_p1;
wire   [31:0] out_write_assign_fu_1466_p1;
wire   [31:0] out_write_assign_2_cast_fu_1567_p1;
wire   [31:0] out_write_assign_1_cast_fu_1471_p1;
wire   [63:0] tmp_i_12_fu_420_p2;
wire   [3:0] tmp_61_fu_444_p1;
wire   [3:0] tmp_5_i_cast_fu_452_p4;
wire   [3:0] tmp_i2_cast_fu_466_p4;
wire   [3:0] tmp_14_i_cast_fu_480_p4;
wire   [3:0] tmp_19_i_cast_fu_494_p4;
wire   [3:0] tmp_24_i_cast_fu_508_p4;
wire   [3:0] tmp_29_i_cast_fu_522_p4;
wire   [3:0] tmp_34_i_cast_fu_536_p4;
wire   [0:0] tmp_1_fu_550_p3;
wire   [0:0] tmp_2_fu_557_p3;
wire   [0:0] tmp_3_fu_564_p3;
wire   [0:0] tmp_4_fu_571_p3;
wire   [0:0] tmp_5_fu_578_p3;
wire   [0:0] tmp_6_fu_585_p3;
wire   [0:0] tmp_7_fu_592_p3;
wire   [0:0] tmp_8_fu_599_p3;
wire   [0:0] tmp_9_fu_606_p3;
wire   [0:0] tmp_10_fu_613_p3;
wire   [0:0] tmp_11_fu_620_p3;
wire   [0:0] tmp_12_fu_627_p3;
wire   [0:0] tmp_13_fu_634_p3;
wire   [0:0] tmp_14_fu_641_p3;
wire   [0:0] tmp_15_fu_648_p3;
wire   [0:0] tmp_16_fu_655_p3;
wire   [30:0] tmp_i1_fu_662_p32;
wire   [0:0] tmp_17_fu_732_p3;
wire   [0:0] tmp_18_fu_739_p3;
wire   [0:0] tmp_19_fu_746_p3;
wire   [0:0] tmp_20_fu_753_p3;
wire   [0:0] tmp_21_fu_760_p3;
wire   [0:0] tmp_22_fu_767_p3;
wire   [0:0] tmp_23_fu_774_p3;
wire   [0:0] tmp_24_fu_781_p3;
wire   [0:0] tmp_25_fu_788_p3;
wire   [0:0] tmp_26_fu_795_p3;
wire   [0:0] tmp_27_fu_802_p3;
wire   [0:0] tmp_28_fu_809_p3;
wire   [0:0] tmp_29_fu_816_p3;
wire   [0:0] tmp_30_fu_823_p3;
wire   [0:0] tmp_31_fu_830_p3;
wire   [0:0] tmp_32_fu_837_p1;
wire   [30:0] tmp_44_i_fu_840_p32;
wire   [31:0] tmp_44_i_cast_fu_906_p1;
wire   [31:0] tmp_i1_cast_fu_728_p1;
wire   [31:0] i_1_fu_910_p2;
wire   [1:0] tmp_s_fu_916_p4;
wire   [1:0] tmp_33_fu_926_p4;
wire   [1:0] tmp_34_fu_936_p4;
wire   [1:0] tmp_35_fu_946_p4;
wire   [1:0] tmp_36_fu_956_p4;
wire   [1:0] tmp_37_fu_966_p4;
wire   [1:0] tmp_38_fu_976_p4;
wire   [1:0] tmp_39_fu_986_p4;
wire   [29:0] tmp_46_i_fu_996_p16;
wire   [1:0] tmp_40_fu_1034_p4;
wire   [1:0] tmp_41_fu_1044_p4;
wire   [1:0] tmp_42_fu_1054_p4;
wire   [1:0] tmp_43_fu_1064_p4;
wire   [1:0] tmp_44_fu_1074_p4;
wire   [1:0] tmp_45_fu_1084_p4;
wire   [1:0] tmp_46_fu_1094_p4;
wire   [1:0] tmp_47_fu_1104_p1;
wire   [29:0] tmp_47_i_fu_1108_p16;
wire   [30:0] tmp_47_i_cast_fu_1142_p1;
wire   [30:0] tmp_46_i_cast_fu_1030_p1;
wire   [30:0] i_2_fu_1146_p2;
wire   [2:0] tmp_48_fu_1152_p4;
wire   [3:0] tmp_49_fu_1162_p4;
wire   [3:0] tmp_50_fu_1172_p4;
wire   [3:0] tmp_51_fu_1182_p4;
wire   [26:0] tmp_49_i_fu_1192_p8;
wire   [3:0] tmp_52_fu_1214_p4;
wire   [3:0] tmp_53_fu_1224_p4;
wire   [3:0] tmp_54_fu_1234_p4;
wire   [3:0] tmp_55_fu_1244_p1;
wire   [27:0] tmp_50_i_fu_1248_p8;
wire   [28:0] tmp_50_i_cast_fu_1266_p1;
wire   [28:0] tmp_49_i_cast_fu_1210_p1;
wire   [28:0] i_3_fu_1270_p2;
wire   [4:0] tmp_8_i_cast_fu_1314_p1;
wire   [4:0] tmp_3_i_cast_fu_1310_p1;
wire   [4:0] tmp2_fu_1342_p2;
wire   [4:0] tmp_17_i_cast_fu_1322_p1;
wire   [4:0] tmp_12_i_cast_fu_1318_p1;
wire   [4:0] tmp3_fu_1352_p2;
wire   [5:0] tmp2_cast_fu_1348_p1;
wire   [5:0] tmp3_cast_fu_1358_p1;
wire   [5:0] tmp1_fu_1362_p2;
wire   [4:0] tmp_27_i_cast_fu_1330_p1;
wire   [4:0] tmp_22_i_cast_fu_1326_p1;
wire   [4:0] tmp5_fu_1372_p2;
wire   [4:0] tmp_37_i_cast_fu_1338_p1;
wire   [4:0] tmp_32_i_cast_fu_1334_p1;
wire   [4:0] tmp6_fu_1382_p2;
wire   [5:0] tmp5_cast_fu_1378_p1;
wire   [5:0] tmp6_cast_fu_1388_p1;
wire   [5:0] tmp4_fu_1392_p2;
wire   [6:0] tmp1_cast_fu_1368_p1;
wire   [6:0] tmp4_cast_fu_1398_p1;
wire   [20:0] tmp_52_i_fu_1408_p4;
wire   [23:0] tmp_53_i_fu_1420_p4;
wire   [24:0] tmp_53_i_cast_fu_1428_p1;
wire   [24:0] tmp_52_i_cast_fu_1416_p1;
wire   [24:0] i_4_fu_1432_p2;
wire   [8:0] tmp_54_i_cast_fu_1442_p4;
wire   [15:0] tmp_60_fu_1438_p1;
wire   [16:0] tmp_56_i_cast_fu_1456_p1;
wire   [16:0] tmp_55_i_cast_fu_1452_p1;
wire   [16:0] i_5_fu_1460_p2;
wire   [7:0] tmp_62_fu_1475_p1;
wire   [7:0] tmp_62_i_fu_1483_p4;
wire   [7:0] tmp_66_i_fu_1497_p4;
wire   [7:0] tmp_70_i_fu_1511_p4;
wire   [4:0] tmp_64_i_cast_fu_1529_p1;
wire   [4:0] Accu_cast_fu_1525_p1;
wire   [4:0] tmp_73_i_fu_1541_p2;
wire   [4:0] tmp_72_i_cast_fu_1537_p1;
wire   [4:0] tmp_68_i_cast_fu_1533_p1;
wire   [4:0] tmp7_fu_1551_p2;
wire   [5:0] tmp_73_i_cast_fu_1547_p1;
wire   [5:0] tmp7_cast_fu_1557_p1;
wire   [5:0] Accu_fu_1561_p2;
wire   [0:0] tmp_63_fu_1573_p3;
wire   [0:0] not_i_fu_1581_p2;
wire   [0:0] tmp_64_fu_1599_p1;
wire   [31:0] tmp_58_i_cast_fu_1603_p1;
wire   [62:0] tmp_3_i1_fu_1613_p4;
reg   [6:0] ap_NS_fsm;


bitcnt_bits #(
    .DataWidth( 4 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
bits_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( bits_address0 ),
    .ce0( bits_ce0 ),
    .q0( bits_q0 ),
    .address1( bits_address1 ),
    .ce1( bits_ce1 ),
    .q1( bits_q1 ),
    .address2( bits_address2 ),
    .ce2( bits_ce2 ),
    .q2( bits_q2 ),
    .address3( bits_address3 ),
    .ce3( bits_ce3 ),
    .q3( bits_q3 ),
    .address4( bits_address4 ),
    .ce4( bits_ce4 ),
    .q4( bits_q4 ),
    .address5( bits_address5 ),
    .ce5( bits_ce5 ),
    .q5( bits_q5 ),
    .address6( bits_address6 ),
    .ce6( bits_ce6 ),
    .q6( bits_q6 ),
    .address7( bits_address7 ),
    .ce7( bits_ce7 ),
    .q7( bits_q7 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == demorgan_fu_1587_p2))) begin
        i_i_reg_391 <= i_fu_1593_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        i_i_reg_391 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (tmp_i_reg_1696 == ap_const_lv1_0) & ~(tmp_59_i_reg_1705 == ap_const_lv1_0))) begin
        n_1_i_reg_370 <= n_fu_438_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & ~(tmp_i_fu_414_p2 == ap_const_lv1_0))) begin
        n_1_i_reg_370 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & (tmp_i_fu_414_p2 == ap_const_lv1_0))) begin
        n_i_reg_359 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (tmp_i_reg_1696 == ap_const_lv1_0) & (tmp_59_i_reg_1705 == ap_const_lv1_0))) begin
        n_i_reg_359 <= n_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == demorgan_fu_1587_p2))) begin
        out_write_assign_4_reg_402 <= n_1_fu_1607_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        out_write_assign_4_reg_402 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == demorgan_fu_1587_p2))) begin
        x1_i_reg_382 <= x_2_fu_1623_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        x1_i_reg_382 <= in_r;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & (tmp_i_fu_414_p2 == ap_const_lv1_0))) begin
        x3_i_reg_350 <= in_r;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (tmp_i_reg_1696 == ap_const_lv1_0) & (tmp_59_i_reg_1705 == ap_const_lv1_0))) begin
        x3_i_reg_350 <= x_1_reg_1700;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        out_write_assign_1_reg_1775 <= out_write_assign_1_fu_1402_p2;
        tmp_56_reg_1755 <= {{i_3_fu_1270_p2[ap_const_lv32_1C : ap_const_lv32_18]}};
        tmp_57_reg_1760 <= {{i_3_fu_1270_p2[ap_const_lv32_F : ap_const_lv32_8]}};
        tmp_58_reg_1765 <= {{i_3_fu_1270_p2[ap_const_lv32_17 : ap_const_lv32_10]}};
        tmp_59_reg_1770 <= tmp_59_fu_1306_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        tmp_59_i_reg_1705 <= tmp_59_i_fu_432_p2;
        x_1_reg_1700 <= x_1_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_i_reg_1696 <= tmp_i_fu_414_p2;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6 or demorgan_fu_1587_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == demorgan_fu_1587_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6 or demorgan_fu_1587_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == demorgan_fu_1587_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_23) begin
    if (ap_sig_bdd_23) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_100) begin
    if (ap_sig_bdd_100) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_111) begin
    if (ap_sig_bdd_111) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_144) begin
    if (ap_sig_bdd_144) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_161) begin
    if (ap_sig_bdd_161) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_176) begin
    if (ap_sig_bdd_176) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_185) begin
    if (ap_sig_bdd_185) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4 or tmp_2_i_fu_447_p1 or tmp_i3_fu_1478_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        bits_address0 = tmp_i3_fu_1478_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        bits_address0 = tmp_2_i_fu_447_p1;
    end else begin
        bits_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4 or tmp_7_i_fu_461_p1 or tmp_63_i_fu_1492_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        bits_address1 = tmp_63_i_fu_1492_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        bits_address1 = tmp_7_i_fu_461_p1;
    end else begin
        bits_address1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4 or tmp_11_i_fu_475_p1 or tmp_67_i_fu_1506_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        bits_address2 = tmp_67_i_fu_1506_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        bits_address2 = tmp_11_i_fu_475_p1;
    end else begin
        bits_address2 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4 or tmp_16_i_fu_489_p1 or tmp_71_i_fu_1520_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        bits_address3 = tmp_71_i_fu_1520_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        bits_address3 = tmp_16_i_fu_489_p1;
    end else begin
        bits_address3 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        bits_ce0 = ap_const_logic_1;
    end else begin
        bits_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        bits_ce1 = ap_const_logic_1;
    end else begin
        bits_ce1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        bits_ce2 = ap_const_logic_1;
    end else begin
        bits_ce2 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        bits_ce3 = ap_const_logic_1;
    end else begin
        bits_ce3 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        bits_ce4 = ap_const_logic_1;
    end else begin
        bits_ce4 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        bits_ce5 = ap_const_logic_1;
    end else begin
        bits_ce5 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        bits_ce6 = ap_const_logic_1;
    end else begin
        bits_ce6 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        bits_ce7 = ap_const_logic_1;
    end else begin
        bits_ce7 = ap_const_logic_0;
    end
end

always @ (out_addr_5_reg_1691 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        out_r_address0 = ap_const_lv64_4;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        out_r_address0 = ap_const_lv64_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        out_r_address0 = out_addr_5_reg_1691;
    end else begin
        out_r_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or out_addr_4_reg_1800 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st7_fsm_6) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        out_r_address1 = out_addr_4_reg_1800;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        out_r_address1 = ap_const_lv64_3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        out_r_address1 = ap_const_lv64_2;
    end else begin
        out_r_address1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        out_r_ce0 = ap_const_logic_1;
    end else begin
        out_r_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st7_fsm_6) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        out_r_ce1 = ap_const_logic_1;
    end else begin
        out_r_ce1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or n_1_i_reg_370 or out_write_assign_fu_1466_p1 or out_write_assign_2_cast_fu_1567_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        out_r_d0 = out_write_assign_2_cast_fu_1567_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        out_r_d0 = out_write_assign_fu_1466_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        out_r_d0 = n_1_i_reg_370;
    end else begin
        out_r_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st7_fsm_6 or out_write_assign_4_reg_402 or out_write_assign_2_cast_fu_1567_p1 or out_write_assign_1_cast_fu_1471_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        out_r_d1 = out_write_assign_4_reg_402;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        out_r_d1 = out_write_assign_2_cast_fu_1567_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        out_r_d1 = out_write_assign_1_cast_fu_1471_p1;
    end else begin
        out_r_d1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        out_r_we0 = ap_const_logic_1;
    end else begin
        out_r_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st7_fsm_6 or demorgan_fu_1587_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == demorgan_fu_1587_p2)))) begin
        out_r_we1 = ap_const_logic_1;
    end else begin
        out_r_we1 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or tmp_i_fu_414_p2 or tmp_i_reg_1696 or tmp_59_i_reg_1705 or demorgan_fu_1587_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if ((~(ap_start == ap_const_logic_0) & ~(tmp_i_fu_414_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else if ((~(ap_start == ap_const_logic_0) & (tmp_i_fu_414_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((~(tmp_i_reg_1696 == ap_const_lv1_0) | ~(tmp_59_i_reg_1705 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            if (~(ap_const_lv1_0 == demorgan_fu_1587_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign Accu_cast_fu_1525_p1 = bits_q0;

assign Accu_fu_1561_p2 = (tmp_73_i_cast_fu_1547_p1 + tmp7_cast_fu_1557_p1);

assign ap_return = (nn + mm);


always @ (ap_CS_fsm) begin
    ap_sig_bdd_100 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_111 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_144 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_161 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_176 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_185 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_23 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

assign bits_address4 = tmp_21_i_fu_503_p1;

assign bits_address5 = tmp_26_i_fu_517_p1;

assign bits_address6 = tmp_31_i_fu_531_p1;

assign bits_address7 = tmp_36_i_fu_545_p1;

assign demorgan_fu_1587_p2 = (tmp_63_fu_1573_p3 | not_i_fu_1581_p2);

assign i_1_fu_910_p2 = (tmp_44_i_cast_fu_906_p1 + tmp_i1_cast_fu_728_p1);

assign i_2_fu_1146_p2 = (tmp_47_i_cast_fu_1142_p1 + tmp_46_i_cast_fu_1030_p1);

assign i_3_fu_1270_p2 = (tmp_50_i_cast_fu_1266_p1 + tmp_49_i_cast_fu_1210_p1);

assign i_4_fu_1432_p2 = (tmp_53_i_cast_fu_1428_p1 + tmp_52_i_cast_fu_1416_p1);

assign i_5_fu_1460_p2 = (tmp_56_i_cast_fu_1456_p1 + tmp_55_i_cast_fu_1452_p1);

assign i_fu_1593_p2 = (i_i_reg_391 + ap_const_lv7_1);

assign n_1_fu_1607_p2 = (out_write_assign_4_reg_402 + tmp_58_i_cast_fu_1603_p1);

assign n_fu_438_p2 = (n_i_reg_359 + ap_const_lv32_1);

assign not_i_fu_1581_p2 = (x1_i_reg_382 == ap_const_lv64_0? 1'b1: 1'b0);

assign out_addr_4_gep_fu_342_p3 = ap_const_lv64_5;

assign out_addr_5_gep_fu_170_p3 = ap_const_lv64_0;

assign out_write_assign_1_cast_fu_1471_p1 = out_write_assign_1_reg_1775;

assign out_write_assign_1_fu_1402_p2 = (tmp1_cast_fu_1368_p1 + tmp4_cast_fu_1398_p1);

assign out_write_assign_2_cast_fu_1567_p1 = Accu_fu_1561_p2;

assign out_write_assign_fu_1466_p1 = i_5_fu_1460_p2;

assign tmp1_cast_fu_1368_p1 = tmp1_fu_1362_p2;

assign tmp1_fu_1362_p2 = (tmp2_cast_fu_1348_p1 + tmp3_cast_fu_1358_p1);

assign tmp2_cast_fu_1348_p1 = tmp2_fu_1342_p2;

assign tmp2_fu_1342_p2 = (tmp_8_i_cast_fu_1314_p1 + tmp_3_i_cast_fu_1310_p1);

assign tmp3_cast_fu_1358_p1 = tmp3_fu_1352_p2;

assign tmp3_fu_1352_p2 = (tmp_17_i_cast_fu_1322_p1 + tmp_12_i_cast_fu_1318_p1);

assign tmp4_cast_fu_1398_p1 = tmp4_fu_1392_p2;

assign tmp4_fu_1392_p2 = (tmp5_cast_fu_1378_p1 + tmp6_cast_fu_1388_p1);

assign tmp5_cast_fu_1378_p1 = tmp5_fu_1372_p2;

assign tmp5_fu_1372_p2 = (tmp_27_i_cast_fu_1330_p1 + tmp_22_i_cast_fu_1326_p1);

assign tmp6_cast_fu_1388_p1 = tmp6_fu_1382_p2;

assign tmp6_fu_1382_p2 = (tmp_37_i_cast_fu_1338_p1 + tmp_32_i_cast_fu_1334_p1);

assign tmp7_cast_fu_1557_p1 = tmp7_fu_1551_p2;

assign tmp7_fu_1551_p2 = (tmp_72_i_cast_fu_1537_p1 + tmp_68_i_cast_fu_1533_p1);

assign tmp_10_fu_613_p3 = in_r[ap_const_lv32_D];

assign tmp_11_fu_620_p3 = in_r[ap_const_lv32_B];

assign tmp_11_i_fu_475_p1 = tmp_i2_cast_fu_466_p4;

assign tmp_12_fu_627_p3 = in_r[ap_const_lv32_9];

assign tmp_12_i_cast_fu_1318_p1 = bits_q2;

assign tmp_13_fu_634_p3 = in_r[ap_const_lv32_7];

assign tmp_14_fu_641_p3 = in_r[ap_const_lv32_5];

assign tmp_14_i_cast_fu_480_p4 = {{in_r[ap_const_lv32_F : ap_const_lv32_C]}};

assign tmp_15_fu_648_p3 = in_r[ap_const_lv32_3];

assign tmp_16_fu_655_p3 = in_r[ap_const_lv32_1];

assign tmp_16_i_fu_489_p1 = tmp_14_i_cast_fu_480_p4;

assign tmp_17_fu_732_p3 = in_r[ap_const_lv32_1E];

assign tmp_17_i_cast_fu_1322_p1 = bits_q3;

assign tmp_18_fu_739_p3 = in_r[ap_const_lv32_1C];

assign tmp_19_fu_746_p3 = in_r[ap_const_lv32_1A];

assign tmp_19_i_cast_fu_494_p4 = {{in_r[ap_const_lv32_13 : ap_const_lv32_10]}};

assign tmp_1_fu_550_p3 = in_r[ap_const_lv32_1F];

assign tmp_20_fu_753_p3 = in_r[ap_const_lv32_18];

assign tmp_21_fu_760_p3 = in_r[ap_const_lv32_16];

assign tmp_21_i_fu_503_p1 = tmp_19_i_cast_fu_494_p4;

assign tmp_22_fu_767_p3 = in_r[ap_const_lv32_14];

assign tmp_22_i_cast_fu_1326_p1 = bits_q4;

assign tmp_23_fu_774_p3 = in_r[ap_const_lv32_12];

assign tmp_24_fu_781_p3 = in_r[ap_const_lv32_10];

assign tmp_24_i_cast_fu_508_p4 = {{in_r[ap_const_lv32_17 : ap_const_lv32_14]}};

assign tmp_25_fu_788_p3 = in_r[ap_const_lv32_E];

assign tmp_26_fu_795_p3 = in_r[ap_const_lv32_C];

assign tmp_26_i_fu_517_p1 = tmp_24_i_cast_fu_508_p4;

assign tmp_27_fu_802_p3 = in_r[ap_const_lv32_A];

assign tmp_27_i_cast_fu_1330_p1 = bits_q5;

assign tmp_28_fu_809_p3 = in_r[ap_const_lv32_8];

assign tmp_29_fu_816_p3 = in_r[ap_const_lv32_6];

assign tmp_29_i_cast_fu_522_p4 = {{in_r[ap_const_lv32_1B : ap_const_lv32_18]}};

assign tmp_2_fu_557_p3 = in_r[ap_const_lv32_1D];

assign tmp_2_i_fu_447_p1 = tmp_61_fu_444_p1;

assign tmp_30_fu_823_p3 = in_r[ap_const_lv32_4];

assign tmp_31_fu_830_p3 = in_r[ap_const_lv32_2];

assign tmp_31_i_fu_531_p1 = tmp_29_i_cast_fu_522_p4;

assign tmp_32_fu_837_p1 = in_r[0:0];

assign tmp_32_i_cast_fu_1334_p1 = bits_q6;

assign tmp_33_fu_926_p4 = {{i_1_fu_910_p2[ap_const_lv32_1B : ap_const_lv32_1A]}};

assign tmp_34_fu_936_p4 = {{i_1_fu_910_p2[ap_const_lv32_17 : ap_const_lv32_16]}};

assign tmp_34_i_cast_fu_536_p4 = {{in_r[ap_const_lv32_1F : ap_const_lv32_1C]}};

assign tmp_35_fu_946_p4 = {{i_1_fu_910_p2[ap_const_lv32_13 : ap_const_lv32_12]}};

assign tmp_36_fu_956_p4 = {{i_1_fu_910_p2[ap_const_lv32_F : ap_const_lv32_E]}};

assign tmp_36_i_fu_545_p1 = tmp_34_i_cast_fu_536_p4;

assign tmp_37_fu_966_p4 = {{i_1_fu_910_p2[ap_const_lv32_B : ap_const_lv32_A]}};

assign tmp_37_i_cast_fu_1338_p1 = bits_q7;

assign tmp_38_fu_976_p4 = {{i_1_fu_910_p2[ap_const_lv32_7 : ap_const_lv32_6]}};

assign tmp_39_fu_986_p4 = {{i_1_fu_910_p2[ap_const_lv32_3 : ap_const_lv32_2]}};

assign tmp_3_fu_564_p3 = in_r[ap_const_lv32_1B];

assign tmp_3_i1_fu_1613_p4 = {{x1_i_reg_382[ap_const_lv32_3F : ap_const_lv32_1]}};

assign tmp_3_i_cast_fu_1310_p1 = bits_q0;

assign tmp_40_fu_1034_p4 = {{i_1_fu_910_p2[ap_const_lv32_1D : ap_const_lv32_1C]}};

assign tmp_41_fu_1044_p4 = {{i_1_fu_910_p2[ap_const_lv32_19 : ap_const_lv32_18]}};

assign tmp_42_fu_1054_p4 = {{i_1_fu_910_p2[ap_const_lv32_15 : ap_const_lv32_14]}};

assign tmp_43_fu_1064_p4 = {{i_1_fu_910_p2[ap_const_lv32_11 : ap_const_lv32_10]}};

assign tmp_44_fu_1074_p4 = {{i_1_fu_910_p2[ap_const_lv32_D : ap_const_lv32_C]}};

assign tmp_44_i_cast_fu_906_p1 = tmp_44_i_fu_840_p32;

assign tmp_44_i_fu_840_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_17_fu_732_p3}, {ap_const_lv1_0}}, {tmp_18_fu_739_p3}}, {ap_const_lv1_0}}, {tmp_19_fu_746_p3}}, {ap_const_lv1_0}}, {tmp_20_fu_753_p3}}, {ap_const_lv1_0}}, {tmp_21_fu_760_p3}}, {ap_const_lv1_0}}, {tmp_22_fu_767_p3}}, {ap_const_lv1_0}}, {tmp_23_fu_774_p3}}, {ap_const_lv1_0}}, {tmp_24_fu_781_p3}}, {ap_const_lv1_0}}, {tmp_25_fu_788_p3}}, {ap_const_lv1_0}}, {tmp_26_fu_795_p3}}, {ap_const_lv1_0}}, {tmp_27_fu_802_p3}}, {ap_const_lv1_0}}, {tmp_28_fu_809_p3}}, {ap_const_lv1_0}}, {tmp_29_fu_816_p3}}, {ap_const_lv1_0}}, {tmp_30_fu_823_p3}}, {ap_const_lv1_0}}, {tmp_31_fu_830_p3}}, {ap_const_lv1_0}}, {tmp_32_fu_837_p1}};

assign tmp_45_fu_1084_p4 = {{i_1_fu_910_p2[ap_const_lv32_9 : ap_const_lv32_8]}};

assign tmp_46_fu_1094_p4 = {{i_1_fu_910_p2[ap_const_lv32_5 : ap_const_lv32_4]}};

assign tmp_46_i_cast_fu_1030_p1 = tmp_46_i_fu_996_p16;

assign tmp_46_i_fu_996_p16 = {{{{{{{{{{{{{{{tmp_s_fu_916_p4}, {ap_const_lv2_0}}, {tmp_33_fu_926_p4}}, {ap_const_lv2_0}}, {tmp_34_fu_936_p4}}, {ap_const_lv2_0}}, {tmp_35_fu_946_p4}}, {ap_const_lv2_0}}, {tmp_36_fu_956_p4}}, {ap_const_lv2_0}}, {tmp_37_fu_966_p4}}, {ap_const_lv2_0}}, {tmp_38_fu_976_p4}}, {ap_const_lv2_0}}, {tmp_39_fu_986_p4}};

assign tmp_47_fu_1104_p1 = i_1_fu_910_p2[1:0];

assign tmp_47_i_cast_fu_1142_p1 = tmp_47_i_fu_1108_p16;

assign tmp_47_i_fu_1108_p16 = {{{{{{{{{{{{{{{tmp_40_fu_1034_p4}, {ap_const_lv2_0}}, {tmp_41_fu_1044_p4}}, {ap_const_lv2_0}}, {tmp_42_fu_1054_p4}}, {ap_const_lv2_0}}, {tmp_43_fu_1064_p4}}, {ap_const_lv2_0}}, {tmp_44_fu_1074_p4}}, {ap_const_lv2_0}}, {tmp_45_fu_1084_p4}}, {ap_const_lv2_0}}, {tmp_46_fu_1094_p4}}, {ap_const_lv2_0}}, {tmp_47_fu_1104_p1}};

assign tmp_48_fu_1152_p4 = {{i_2_fu_1146_p2[ap_const_lv32_1E : ap_const_lv32_1C]}};

assign tmp_49_fu_1162_p4 = {{i_2_fu_1146_p2[ap_const_lv32_17 : ap_const_lv32_14]}};

assign tmp_49_i_cast_fu_1210_p1 = tmp_49_i_fu_1192_p8;

assign tmp_49_i_fu_1192_p8 = {{{{{{{tmp_48_fu_1152_p4}, {ap_const_lv4_0}}, {tmp_49_fu_1162_p4}}, {ap_const_lv4_0}}, {tmp_50_fu_1172_p4}}, {ap_const_lv4_0}}, {tmp_51_fu_1182_p4}};

assign tmp_4_fu_571_p3 = in_r[ap_const_lv32_19];

assign tmp_50_fu_1172_p4 = {{i_2_fu_1146_p2[ap_const_lv32_F : ap_const_lv32_C]}};

assign tmp_50_i_cast_fu_1266_p1 = tmp_50_i_fu_1248_p8;

assign tmp_50_i_fu_1248_p8 = {{{{{{{tmp_52_fu_1214_p4}, {ap_const_lv4_0}}, {tmp_53_fu_1224_p4}}, {ap_const_lv4_0}}, {tmp_54_fu_1234_p4}}, {ap_const_lv4_0}}, {tmp_55_fu_1244_p1}};

assign tmp_51_fu_1182_p4 = {{i_2_fu_1146_p2[ap_const_lv32_7 : ap_const_lv32_4]}};

assign tmp_52_fu_1214_p4 = {{i_2_fu_1146_p2[ap_const_lv32_1B : ap_const_lv32_18]}};

assign tmp_52_i_cast_fu_1416_p1 = tmp_52_i_fu_1408_p4;

assign tmp_52_i_fu_1408_p4 = {{{tmp_56_reg_1755}, {ap_const_lv8_0}}, {tmp_57_reg_1760}};

assign tmp_53_fu_1224_p4 = {{i_2_fu_1146_p2[ap_const_lv32_13 : ap_const_lv32_10]}};

assign tmp_53_i_cast_fu_1428_p1 = tmp_53_i_fu_1420_p4;

assign tmp_53_i_fu_1420_p4 = {{{tmp_58_reg_1765}, {ap_const_lv8_0}}, {tmp_59_reg_1770}};

assign tmp_54_fu_1234_p4 = {{i_2_fu_1146_p2[ap_const_lv32_B : ap_const_lv32_8]}};

assign tmp_54_i_cast_fu_1442_p4 = {{i_4_fu_1432_p2[ap_const_lv32_18 : ap_const_lv32_10]}};

assign tmp_55_fu_1244_p1 = i_2_fu_1146_p2[3:0];

assign tmp_55_i_cast_fu_1452_p1 = tmp_54_i_cast_fu_1442_p4;

assign tmp_56_i_cast_fu_1456_p1 = tmp_60_fu_1438_p1;

assign tmp_58_i_cast_fu_1603_p1 = tmp_64_fu_1599_p1;

assign tmp_59_fu_1306_p1 = i_3_fu_1270_p2[7:0];

assign tmp_59_i_fu_432_p2 = (x_1_fu_426_p2 == ap_const_lv64_0? 1'b1: 1'b0);

assign tmp_5_fu_578_p3 = in_r[ap_const_lv32_17];

assign tmp_5_i_cast_fu_452_p4 = {{in_r[ap_const_lv32_7 : ap_const_lv32_4]}};

assign tmp_60_fu_1438_p1 = i_4_fu_1432_p2[15:0];

assign tmp_61_fu_444_p1 = in_r[3:0];

assign tmp_62_fu_1475_p1 = in_r[7:0];

assign tmp_62_i_fu_1483_p4 = {{in_r[ap_const_lv32_F : ap_const_lv32_8]}};

assign tmp_63_fu_1573_p3 = i_i_reg_391[ap_const_lv32_6];

assign tmp_63_i_fu_1492_p1 = tmp_62_i_fu_1483_p4;

assign tmp_64_fu_1599_p1 = x1_i_reg_382[0:0];

assign tmp_64_i_cast_fu_1529_p1 = bits_q1;

assign tmp_66_i_fu_1497_p4 = {{in_r[ap_const_lv32_1F : ap_const_lv32_18]}};

assign tmp_67_i_fu_1506_p1 = tmp_66_i_fu_1497_p4;

assign tmp_68_i_cast_fu_1533_p1 = bits_q2;

assign tmp_6_fu_585_p3 = in_r[ap_const_lv32_15];

assign tmp_70_i_fu_1511_p4 = {{in_r[ap_const_lv32_17 : ap_const_lv32_10]}};

assign tmp_71_i_fu_1520_p1 = tmp_70_i_fu_1511_p4;

assign tmp_72_i_cast_fu_1537_p1 = bits_q3;

assign tmp_73_i_cast_fu_1547_p1 = tmp_73_i_fu_1541_p2;

assign tmp_73_i_fu_1541_p2 = (tmp_64_i_cast_fu_1529_p1 + Accu_cast_fu_1525_p1);

assign tmp_7_fu_592_p3 = in_r[ap_const_lv32_13];

assign tmp_7_i_fu_461_p1 = tmp_5_i_cast_fu_452_p4;

assign tmp_8_fu_599_p3 = in_r[ap_const_lv32_11];

assign tmp_8_i_cast_fu_1314_p1 = bits_q1;

assign tmp_9_fu_606_p3 = in_r[ap_const_lv32_F];

assign tmp_i1_cast_fu_728_p1 = tmp_i1_fu_662_p32;

assign tmp_i1_fu_662_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_1_fu_550_p3}, {ap_const_lv1_0}}, {tmp_2_fu_557_p3}}, {ap_const_lv1_0}}, {tmp_3_fu_564_p3}}, {ap_const_lv1_0}}, {tmp_4_fu_571_p3}}, {ap_const_lv1_0}}, {tmp_5_fu_578_p3}}, {ap_const_lv1_0}}, {tmp_6_fu_585_p3}}, {ap_const_lv1_0}}, {tmp_7_fu_592_p3}}, {ap_const_lv1_0}}, {tmp_8_fu_599_p3}}, {ap_const_lv1_0}}, {tmp_9_fu_606_p3}}, {ap_const_lv1_0}}, {tmp_10_fu_613_p3}}, {ap_const_lv1_0}}, {tmp_11_fu_620_p3}}, {ap_const_lv1_0}}, {tmp_12_fu_627_p3}}, {ap_const_lv1_0}}, {tmp_13_fu_634_p3}}, {ap_const_lv1_0}}, {tmp_14_fu_641_p3}}, {ap_const_lv1_0}}, {tmp_15_fu_648_p3}}, {ap_const_lv1_0}}, {tmp_16_fu_655_p3}};

assign tmp_i2_cast_fu_466_p4 = {{in_r[ap_const_lv32_B : ap_const_lv32_8]}};

assign tmp_i3_fu_1478_p1 = tmp_62_fu_1475_p1;

assign tmp_i_12_fu_420_p2 = ($signed(x3_i_reg_350) + $signed(ap_const_lv64_FFFFFFFFFFFFFFFF));

assign tmp_i_fu_414_p2 = (in_r == ap_const_lv64_0? 1'b1: 1'b0);

assign tmp_s_fu_916_p4 = {{i_1_fu_910_p2[ap_const_lv32_1F : ap_const_lv32_1E]}};

assign x_1_fu_426_p2 = (tmp_i_12_fu_420_p2 & x3_i_reg_350);

assign x_2_fu_1623_p1 = $signed(tmp_3_i1_fu_1613_p4);
always @ (posedge ap_clk) begin
    out_addr_5_reg_1691[2:0] <= 3'b000;
    out_addr_4_reg_1800[2:0] <= 3'b101;
end



endmodule //bitcnt

