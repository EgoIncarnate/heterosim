// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module decode_start_pgetc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        CurHuffReadBuf_address0,
        CurHuffReadBuf_ce0,
        CurHuffReadBuf_q0,
        tmp_7,
        off_i,
        off_o,
        off_o_ap_vld,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_pp0_stg0_fsm_0 = 2'b1;
parameter    ap_ST_pp0_stg1_fsm_1 = 2'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
output  [12:0] CurHuffReadBuf_address0;
output   CurHuffReadBuf_ce0;
input  [7:0] CurHuffReadBuf_q0;
input  [31:0] tmp_7;
input  [31:0] off_i;
output  [31:0] off_o;
output   off_o_ap_vld;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[12:0] CurHuffReadBuf_address0;
reg CurHuffReadBuf_ce0;
reg[31:0] off_o;
reg off_o_ap_vld;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm = 2'b1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_bdd_20;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_1;
reg    ap_sig_bdd_40;
reg   [31:0] off_load_reg_142;
wire   [31:0] off_assign_fu_75_p2;
reg   [31:0] off_assign_reg_147;
wire   [13:0] tmp_3_fu_91_p1;
reg   [13:0] tmp_3_reg_152;
wire   [0:0] tmp_1_fu_106_p2;
reg   [0:0] tmp_1_reg_167;
reg    ap_reg_ppiten_pp0_it0_preg = 1'b0;
wire   [7:0] ap_reg_phiprechg_temp_0_in_reg_50pp0_it0;
reg   [7:0] ap_reg_phiprechg_temp_0_in_reg_50pp0_it1;
reg   [7:0] temp_0_in_phi_fu_53_p4;
wire   [0:0] tmp_4_fu_136_p2;
wire   [7:0] ap_reg_phiprechg_p_0_reg_60pp0_it0;
reg   [7:0] ap_reg_phiprechg_p_0_reg_60pp0_it1;
reg   [7:0] p_0_phi_fu_63_p4;
wire  signed [63:0] sum_cast_fu_101_p1;
wire  signed [63:0] sum2_cast_fu_131_p1;
wire   [31:0] tmp_2_fu_112_p2;
wire   [13:0] tmp_fu_87_p1;
wire   [13:0] sum_fu_95_p2;
wire   [13:0] tmp_5_fu_123_p1;
wire   [13:0] sum2_fu_126_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_sig_pprstidle_pp0;
reg    ap_sig_bdd_47;
reg    ap_sig_bdd_68;
reg    ap_sig_bdd_188;
reg    ap_sig_bdd_186;
reg    ap_sig_bdd_108;
reg    ap_sig_bdd_114;
reg    ap_sig_bdd_94;




always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0_preg
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0_preg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
            ap_reg_ppiten_pp0_it0_preg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_ce))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_sig_bdd_47) begin
        if ((tmp_1_fu_106_p2 == ap_const_lv1_0)) begin
            ap_reg_phiprechg_temp_0_in_reg_50pp0_it1 <= CurHuffReadBuf_q0;
        end else if ((ap_true == ap_true)) begin
            ap_reg_phiprechg_temp_0_in_reg_50pp0_it1 <= ap_reg_phiprechg_temp_0_in_reg_50pp0_it0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_ce))) begin
        ap_reg_phiprechg_p_0_reg_60pp0_it1 <= ap_reg_phiprechg_p_0_reg_60pp0_it0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)))) begin
        off_assign_reg_147 <= off_assign_fu_75_p2;
        off_load_reg_142 <= off_i;
        tmp_3_reg_152 <= tmp_3_fu_91_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_ce))) begin
        tmp_1_reg_167 <= tmp_1_fu_106_p2;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or sum_cast_fu_101_p1 or sum2_cast_fu_131_p1) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
            CurHuffReadBuf_address0 = sum2_cast_fu_131_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            CurHuffReadBuf_address0 = sum_cast_fu_101_p1;
        end else begin
            CurHuffReadBuf_address0 = 'bx;
        end
    end else begin
        CurHuffReadBuf_address0 = 'bx;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_ce) begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_ce)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
        CurHuffReadBuf_ce0 = ap_const_logic_1;
    end else begin
        CurHuffReadBuf_ce0 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_ce) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it1))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_ce) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_ce))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0_preg) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
        ap_reg_ppiten_pp0_it0 = ap_start;
    end else begin
        ap_reg_ppiten_pp0_it0 = ap_reg_ppiten_pp0_it0_preg;
    end
end

always @ (ap_sig_bdd_20) begin
    if (ap_sig_bdd_20) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_40) begin
    if (ap_sig_bdd_40) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_reg_ppiten_pp0_it0) begin
    if (((ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_start))) begin
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    end else begin
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    end
end

always @ (off_i or off_assign_fu_75_p2 or tmp_2_fu_112_p2 or ap_sig_bdd_68 or ap_sig_bdd_188 or ap_sig_bdd_186) begin
    if (ap_sig_bdd_186) begin
        if (ap_sig_bdd_188) begin
            off_o = tmp_2_fu_112_p2;
        end else if (ap_sig_bdd_68) begin
            off_o = off_assign_fu_75_p2;
        end else begin
            off_o = off_i;
        end
    end else begin
        off_o = off_i;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_ce or tmp_1_fu_106_p2) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_ce) & ~(tmp_1_fu_106_p2 == ap_const_lv1_0)))) begin
        off_o_ap_vld = ap_const_logic_1;
    end else begin
        off_o_ap_vld = ap_const_logic_0;
    end
end

always @ (temp_0_in_phi_fu_53_p4 or ap_reg_phiprechg_p_0_reg_60pp0_it1 or ap_sig_bdd_108 or ap_sig_bdd_114 or ap_sig_bdd_94) begin
    if (ap_sig_bdd_94) begin
        if (ap_sig_bdd_114) begin
            p_0_phi_fu_63_p4 = ap_const_lv8_FF;
        end else if (ap_sig_bdd_108) begin
            p_0_phi_fu_63_p4 = temp_0_in_phi_fu_53_p4;
        end else begin
            p_0_phi_fu_63_p4 = ap_reg_phiprechg_p_0_reg_60pp0_it1;
        end
    end else begin
        p_0_phi_fu_63_p4 = ap_reg_phiprechg_p_0_reg_60pp0_it1;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it1 or CurHuffReadBuf_q0 or tmp_1_reg_167 or ap_reg_phiprechg_temp_0_in_reg_50pp0_it1 or tmp_4_fu_136_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == tmp_4_fu_136_p2) & ~(tmp_1_reg_167 == ap_const_lv1_0))) begin
        temp_0_in_phi_fu_53_p4 = CurHuffReadBuf_q0;
    end else begin
        temp_0_in_phi_fu_53_p4 = ap_reg_phiprechg_temp_0_in_reg_50pp0_it1;
    end
end
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_ce or ap_sig_pprstidle_pp0) begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : 
        begin
            if ((~(~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) & ~(ap_const_logic_1 == ap_sig_pprstidle_pp0) & ~((ap_const_logic_0 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_0 == ap_start)))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_1;
            end else if ((~(~(ap_const_logic_1 == ap_ce) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0))) & (ap_const_logic_1 == ap_sig_pprstidle_pp0))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            end
        end
        ap_ST_pp0_stg1_fsm_1 : 
        begin
            if ((ap_const_logic_1 == ap_ce)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_1;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_reg_phiprechg_p_0_reg_60pp0_it0 = 'bx;

assign ap_reg_phiprechg_temp_0_in_reg_50pp0_it0 = 'bx;

assign ap_return = p_0_phi_fu_63_p4;


always @ (tmp_1_reg_167 or tmp_4_fu_136_p2) begin
    ap_sig_bdd_108 = ((ap_const_lv1_0 == tmp_4_fu_136_p2) | (tmp_1_reg_167 == ap_const_lv1_0));
end


always @ (tmp_1_reg_167 or tmp_4_fu_136_p2) begin
    ap_sig_bdd_114 = (~(tmp_1_reg_167 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_4_fu_136_p2));
end


always @ (ap_reg_ppiten_pp0_it0 or ap_ce) begin
    ap_sig_bdd_186 = ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_ce));
end


always @ (ap_sig_cseq_ST_pp0_stg1_fsm_1 or tmp_1_fu_106_p2) begin
    ap_sig_bdd_188 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & ~(tmp_1_fu_106_p2 == ap_const_lv1_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_20 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_40 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_ce) begin
    ap_sig_bdd_47 = ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) & (ap_const_logic_1 == ap_ce));
end


always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0) begin
    ap_sig_bdd_68 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_start == ap_const_logic_0)));
end


always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it1) begin
    ap_sig_bdd_94 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1));
end

assign off_assign_fu_75_p2 = (ap_const_lv32_1 + off_i);

assign sum2_cast_fu_131_p1 = $signed(sum2_fu_126_p2);

assign sum2_fu_126_p2 = (tmp_5_fu_123_p1 + tmp_3_reg_152);

assign sum_cast_fu_101_p1 = $signed(sum_fu_95_p2);

assign sum_fu_95_p2 = (tmp_fu_87_p1 + tmp_3_fu_91_p1);

assign tmp_1_fu_106_p2 = (CurHuffReadBuf_q0 == ap_const_lv8_FF? 1'b1: 1'b0);

assign tmp_2_fu_112_p2 = (ap_const_lv32_2 + off_load_reg_142);

assign tmp_3_fu_91_p1 = tmp_7[13:0];

assign tmp_4_fu_136_p2 = (CurHuffReadBuf_q0 == ap_const_lv8_0? 1'b1: 1'b0);

assign tmp_5_fu_123_p1 = off_assign_reg_147[13:0];

assign tmp_fu_87_p1 = off_i[13:0];


endmodule //decode_start_pgetc

