`begin_keywords "1800-2012"
`line 1 "encrypt_MixColumn_AddRoundKey_ret.v" 1
 
 
 
 

`line 6 "encrypt_MixColumn_AddRoundKey_ret.v" 0
 

`line 8 "encrypt_MixColumn_AddRoundKey_ret.v" 0
`timescale 1 ns / 1 ps
module encrypt_MixColumn_AddRoundKey_ret_ram (addr0, ce0, d0, we0, q0, addr1, ce1, d1, we1, q1,  clk);

`line 11 "encrypt_MixColumn_AddRoundKey_ret.v" 0
parameter DWIDTH = 32;
parameter AWIDTH = 5;
parameter MEM_SIZE = 32;

`line 15 "encrypt_MixColumn_AddRoundKey_ret.v" 0
input[AWIDTH-1:0] addr0;
input ce0;
input[DWIDTH-1:0] d0;
input we0;
output reg[DWIDTH-1:0] q0;
input[AWIDTH-1:0] addr1;
input ce1;
input[DWIDTH-1:0] d1;
input we1;
output reg[DWIDTH-1:0] q1;
input clk;

`line 27 "encrypt_MixColumn_AddRoundKey_ret.v" 0
(* ram_style = "block" *)reg [DWIDTH-1:0] ram[MEM_SIZE-1:0];




`line 32 "encrypt_MixColumn_AddRoundKey_ret.v" 0
always @(posedge clk)  
begin 
    if (ce0) 
    begin
        if (we0) 
        begin 
            ram[addr0] <= d0; 
            q0 <= d0;
        end 
        else 
            q0 <= ram[addr0];
    end
end


`line 47 "encrypt_MixColumn_AddRoundKey_ret.v" 0
always @(posedge clk)  
begin 
    if (ce1) 
    begin
        if (we1) 
        begin 
            ram[addr1] <= d1; 
            q1 <= d1;
        end 
        else 
            q1 <= ram[addr1];
    end
end


`line 62 "encrypt_MixColumn_AddRoundKey_ret.v" 0
endmodule


`line 65 "encrypt_MixColumn_AddRoundKey_ret.v" 0
`timescale 1 ns / 1 ps
module encrypt_MixColumn_AddRoundKey_ret(
    reset,
    clk,
    address0,
    ce0,
    we0,
    d0,
    q0,
    address1,
    ce1,
    we1,
    d1,
    q1);

`line 80 "encrypt_MixColumn_AddRoundKey_ret.v" 0
parameter DataWidth = 32'd32;
parameter AddressRange = 32'd32;
parameter AddressWidth = 32'd5;
input reset;
input clk;
input[AddressWidth - 1:0] address0;
input ce0;
input we0;
input[DataWidth - 1:0] d0;
output[DataWidth - 1:0] q0;
input[AddressWidth - 1:0] address1;
input ce1;
input we1;
input[DataWidth - 1:0] d1;
output[DataWidth - 1:0] q1;



`line 98 "encrypt_MixColumn_AddRoundKey_ret.v" 0
encrypt_MixColumn_AddRoundKey_ret_ram encrypt_MixColumn_AddRoundKey_ret_ram_U(
    .clk( clk ),
    .addr0( address0 ),
    .ce0( ce0 ),
    .d0( d0 ),
    .we0( we0 ),
    .q0( q0 ),
    .addr1( address1 ),
    .ce1( ce1 ),
    .d1( d1 ),
    .we1( we1 ),
    .q1( q1 ));

`line 111 "encrypt_MixColumn_AddRoundKey_ret.v" 0
endmodule


`line 114 "encrypt_MixColumn_AddRoundKey_ret.v" 2
