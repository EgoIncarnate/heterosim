`begin_keywords "1800-2012"
`line 1 "encrypt_KeySchedule_Rcon0.v" 1
 
 
 
 

`line 6 "encrypt_KeySchedule_Rcon0.v" 0
 

`line 8 "encrypt_KeySchedule_Rcon0.v" 0
`timescale 1 ns / 1 ps
(* rom_style = "distributed" *) module encrypt_KeySchedule_Rcon0_rom (
addr0, ce0, q0, clk);

`line 12 "encrypt_KeySchedule_Rcon0.v" 0
parameter DWIDTH = 8;
parameter AWIDTH = 5;
parameter MEM_SIZE = 30;

`line 16 "encrypt_KeySchedule_Rcon0.v" 0
input[AWIDTH-1:0] addr0;
input ce0;
output reg[DWIDTH-1:0] q0;
input clk;

`line 21 "encrypt_KeySchedule_Rcon0.v" 0
(* ram_style = "distributed" *)reg [DWIDTH-1:0] ram[MEM_SIZE-1:0];

`line 23 "encrypt_KeySchedule_Rcon0.v" 0
initial begin
    $readmemh("./encrypt_KeySchedule_Rcon0_rom.dat", ram);
end



`line 29 "encrypt_KeySchedule_Rcon0.v" 0
always @(posedge clk)  
begin 
    if (ce0) 
    begin
        q0 <= ram[addr0];
    end
end



`line 39 "encrypt_KeySchedule_Rcon0.v" 0
endmodule


`line 42 "encrypt_KeySchedule_Rcon0.v" 0
`timescale 1 ns / 1 ps
module encrypt_KeySchedule_Rcon0(
    reset,
    clk,
    address0,
    ce0,
    q0);

`line 50 "encrypt_KeySchedule_Rcon0.v" 0
parameter DataWidth = 32'd8;
parameter AddressRange = 32'd30;
parameter AddressWidth = 32'd5;
input reset;
input clk;
input[AddressWidth - 1:0] address0;
input ce0;
output[DataWidth - 1:0] q0;



`line 61 "encrypt_KeySchedule_Rcon0.v" 0
encrypt_KeySchedule_Rcon0_rom encrypt_KeySchedule_Rcon0_rom_U(
    .clk( clk ),
    .addr0( address0 ),
    .ce0( ce0 ),
    .q0( q0 ));

`line 67 "encrypt_KeySchedule_Rcon0.v" 0
endmodule


`line 70 "encrypt_KeySchedule_Rcon0.v" 2
