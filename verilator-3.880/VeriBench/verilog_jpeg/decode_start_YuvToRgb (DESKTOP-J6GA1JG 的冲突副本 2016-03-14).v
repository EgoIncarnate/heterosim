// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module decode_start_YuvToRgb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        y_buf_address0,
        y_buf_ce0,
        y_buf_q0,
        y_buf_address1,
        y_buf_ce1,
        y_buf_q1,
        tmp_7,
        u_buf_offset,
        v_buf_offset,
        rgb_buf_address0,
        rgb_buf_ce0,
        rgb_buf_we0,
        rgb_buf_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 9'b1;
parameter    ap_ST_st2_fsm_1 = 9'b10;
parameter    ap_ST_st3_fsm_2 = 9'b100;
parameter    ap_ST_st4_fsm_3 = 9'b1000;
parameter    ap_ST_st5_fsm_4 = 9'b10000;
parameter    ap_ST_st6_fsm_5 = 9'b100000;
parameter    ap_ST_st7_fsm_6 = 9'b1000000;
parameter    ap_ST_st8_fsm_7 = 9'b10000000;
parameter    ap_ST_st9_fsm_8 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv11_40 = 11'b1000000;
parameter    ap_const_lv11_80 = 11'b10000000;
parameter    ap_const_lv7_40 = 7'b1000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv32_FFFFFF80 = 32'b11111111111111111111111110000000;
parameter    ap_const_lv32_167 = 32'b101100111;
parameter    ap_const_lv32_FFFFFFA8 = 32'b11111111111111111111111110101000;
parameter    ap_const_lv32_FFFFFF4A = 32'b11111111111111111111111101001010;
parameter    ap_const_lv32_1C6 = 32'b111000110;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv10_FF = 10'b11111111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] p;
output  [8:0] y_buf_address0;
output   y_buf_ce0;
input  [31:0] y_buf_q0;
output  [8:0] y_buf_address1;
output   y_buf_ce1;
input  [31:0] y_buf_q1;
input  [2:0] tmp_7;
input  [4:0] u_buf_offset;
input  [3:0] v_buf_offset;
output  [9:0] rgb_buf_address0;
output   rgb_buf_ce0;
output   rgb_buf_we0;
output  [31:0] rgb_buf_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] y_buf_address0;
reg y_buf_ce0;
reg y_buf_ce1;
reg[9:0] rgb_buf_address0;
reg rgb_buf_ce0;
reg rgb_buf_we0;
reg[31:0] rgb_buf_d0;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm = 9'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_27;
wire   [9:0] tmp_fu_168_p3;
reg   [9:0] tmp_reg_624;
wire   [9:0] tmp_222_cast_fu_180_p3;
reg   [9:0] tmp_222_cast_reg_629;
wire   [9:0] tmp_224_cast_fu_196_p1;
reg   [9:0] tmp_224_cast_reg_634;
wire   [10:0] tmp_182_fu_220_p2;
reg   [10:0] tmp_182_reg_639;
wire   [10:0] tmp_183_fu_226_p2;
reg   [10:0] tmp_183_reg_644;
wire   [10:0] tmp_184_fu_232_p2;
reg   [10:0] tmp_184_reg_649;
wire   [6:0] i_27_fu_244_p2;
reg   [6:0] i_27_reg_657;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_74;
wire   [9:0] tmp_185_fu_258_p2;
reg   [9:0] tmp_185_reg_662;
wire   [0:0] exitcond_fu_238_p2;
wire   [10:0] tmp_188_fu_283_p2;
reg   [10:0] tmp_188_reg_677;
wire   [10:0] tmp_189_fu_288_p2;
reg   [10:0] tmp_189_reg_682;
wire   [10:0] tmp_190_fu_293_p2;
reg   [10:0] tmp_190_reg_687;
reg   [31:0] v_buf_load_2_reg_692;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_98;
reg   [31:0] v_buf_load_reg_697;
wire  signed [31:0] u_fu_298_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_108;
wire  signed [31:0] v_fu_303_p2;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_119;
wire   [31:0] tmp_29_fu_342_p2;
reg   [31:0] tmp_29_reg_719;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_128;
reg   [23:0] tmp_31_reg_725;
wire   [31:0] grp_fu_314_p2;
reg   [31:0] tmp_32_reg_730;
wire   [31:0] grp_fu_320_p2;
reg   [31:0] tmp_33_reg_735;
wire   [31:0] grp_fu_326_p2;
reg   [31:0] tmp_36_reg_740;
reg   [0:0] tmp_199_reg_745;
reg   [15:0] tmp_200_reg_750;
reg   [0:0] tmp_201_reg_755;
reg   [23:0] tmp_35_reg_761;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_151;
reg   [0:0] tmp_204_reg_766;
wire   [0:0] tmp_17_fu_503_p2;
reg   [0:0] tmp_17_reg_772;
wire   [23:0] b_1_fu_571_p3;
reg   [23:0] b_1_reg_777;
reg   [6:0] i_reg_157;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_167;
wire   [63:0] tmp_231_cast_fu_268_p1;
wire   [63:0] tmp_232_cast_fu_278_p1;
wire   [63:0] tmp_230_cast_fu_332_p1;
wire  signed [63:0] tmp_233_cast_fu_390_p1;
wire  signed [63:0] tmp_234_cast_fu_579_p1;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_181;
wire  signed [63:0] tmp_235_cast_fu_616_p1;
wire  signed [31:0] r_1_cast_fu_466_p1;
wire  signed [31:0] g_1_cast_fu_611_p1;
wire  signed [31:0] b_1_cast_fu_620_p1;
wire   [3:0] tmp_197_fu_176_p1;
wire   [8:0] tmp_s_fu_188_p3;
wire   [8:0] tmp_181_fu_208_p3;
wire   [10:0] tmp_180_fu_200_p3;
wire   [10:0] p_shl1_cast_fu_216_p1;
wire   [9:0] tmp_cast_fu_254_p1;
wire   [9:0] tmp_186_fu_263_p2;
wire   [9:0] tmp_187_fu_273_p2;
wire   [10:0] tmp_cast1_fu_250_p1;
wire   [9:0] grp_fu_308_p0;
wire  signed [7:0] grp_fu_314_p0;
wire  signed [8:0] grp_fu_320_p0;
wire   [9:0] grp_fu_326_p0;
wire   [31:0] tmp_198_fu_336_p2;
wire   [31:0] grp_fu_308_p2;
wire   [31:0] tmp_30_fu_348_p2;
wire   [31:0] tmp1_fu_394_p2;
wire   [31:0] tmp_34_fu_398_p2;
wire   [31:0] tmp_37_fu_413_p2;
wire   [8:0] tmp_191_fu_432_p4;
wire  signed [9:0] tmp_11_cast_fu_440_p1;
wire   [9:0] tmp_12_fu_444_p2;
wire   [0:0] icmp_fu_427_p2;
wire   [0:0] tmp_13_fu_454_p2;
wire  signed [23:0] tmp_12_cast_fu_450_p1;
wire   [23:0] r_1_fu_459_p3;
wire   [15:0] tmp_203_fu_479_p4;
wire   [0:0] tmp_202_fu_471_p3;
wire   [0:0] icmp12_fu_489_p2;
wire   [15:0] tmp_206_fu_517_p4;
wire   [0:0] tmp_207_fu_533_p3;
wire   [8:0] tmp_193_fu_541_p4;
wire  signed [9:0] tmp_19_cast_fu_551_p1;
wire   [9:0] tmp_20_fu_555_p2;
wire   [0:0] tmp_205_fu_509_p3;
wire   [0:0] icmp13_fu_527_p2;
wire   [0:0] tmp_21_fu_565_p2;
wire  signed [23:0] tmp_20_cast_fu_561_p1;
wire   [23:0] tmp_38_fu_417_p4;
wire   [8:0] tmp_192_fu_583_p4;
wire  signed [9:0] tmp_15_cast_fu_591_p1;
wire   [9:0] tmp_16_fu_595_p2;
wire  signed [23:0] tmp_16_cast_fu_601_p1;
wire   [23:0] g_1_fu_605_p3;
wire    grp_fu_308_ce;
wire    grp_fu_314_ce;
wire    grp_fu_320_ce;
wire    grp_fu_326_ce;
reg   [8:0] ap_NS_fsm;


decode_start_mul_10ns_32s_32_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
decode_start_mul_10ns_32s_32_3_U55(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_308_p0 ),
    .din1( v_fu_303_p2 ),
    .ce( grp_fu_308_ce ),
    .dout( grp_fu_308_p2 )
);

decode_start_mul_8s_32s_32_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
decode_start_mul_8s_32s_32_3_U56(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_314_p0 ),
    .din1( u_fu_298_p2 ),
    .ce( grp_fu_314_ce ),
    .dout( grp_fu_314_p2 )
);

decode_start_mul_9s_32s_32_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
decode_start_mul_9s_32s_32_3_U57(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_320_p0 ),
    .din1( v_fu_303_p2 ),
    .ce( grp_fu_320_ce ),
    .dout( grp_fu_320_p2 )
);

decode_start_mul_10ns_32s_32_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
decode_start_mul_10ns_32s_32_3_U58(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_326_p0 ),
    .din1( u_fu_298_p2 ),
    .ce( grp_fu_326_ce ),
    .dout( grp_fu_326_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        i_reg_157 <= i_27_reg_657;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_157 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        b_1_reg_777 <= b_1_fu_571_p3;
        tmp_17_reg_772 <= tmp_17_fu_503_p2;
        tmp_204_reg_766 <= tmp_34_fu_398_p2[ap_const_lv32_1F];
        tmp_35_reg_761 <= {{tmp_34_fu_398_p2[ap_const_lv32_1F : ap_const_lv32_8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_27_reg_657 <= i_27_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_182_reg_639[10 : 6] <= tmp_182_fu_220_p2[10 : 6];
        tmp_183_reg_644[10 : 6] <= tmp_183_fu_226_p2[10 : 6];
        tmp_184_reg_649[10 : 6] <= tmp_184_fu_232_p2[10 : 6];
        tmp_222_cast_reg_629[9 : 6] <= tmp_222_cast_fu_180_p3[9 : 6];
        tmp_224_cast_reg_634[8 : 6] <= tmp_224_cast_fu_196_p1[8 : 6];
        tmp_reg_624[9 : 6] <= tmp_fu_168_p3[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_fu_238_p2 == ap_const_lv1_0))) begin
        tmp_185_reg_662 <= tmp_185_fu_258_p2;
        tmp_188_reg_677 <= tmp_188_fu_283_p2;
        tmp_189_reg_682 <= tmp_189_fu_288_p2;
        tmp_190_reg_687 <= tmp_190_fu_293_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_199_reg_745 <= tmp_30_fu_348_p2[ap_const_lv32_1F];
        tmp_200_reg_750 <= {{tmp_30_fu_348_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
        tmp_201_reg_755 <= tmp_30_fu_348_p2[ap_const_lv32_1F];
        tmp_29_reg_719[31 : 8] <= tmp_29_fu_342_p2[31 : 8];
        tmp_31_reg_725 <= {{tmp_30_fu_348_p2[ap_const_lv32_1F : ap_const_lv32_8]}};
        tmp_32_reg_730 <= grp_fu_314_p2;
        tmp_33_reg_735 <= grp_fu_320_p2;
        tmp_36_reg_740 <= grp_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        v_buf_load_2_reg_692 <= y_buf_q0;
        v_buf_load_reg_697 <= y_buf_q1;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or exitcond_fu_238_p2) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_238_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond_fu_238_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_238_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_27) begin
    if (ap_sig_bdd_27) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_74) begin
    if (ap_sig_bdd_74) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_98) begin
    if (ap_sig_bdd_98) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_108) begin
    if (ap_sig_bdd_108) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_119) begin
    if (ap_sig_bdd_119) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_128) begin
    if (ap_sig_bdd_128) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_151) begin
    if (ap_sig_bdd_151) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_181) begin
    if (ap_sig_bdd_181) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_167) begin
    if (ap_sig_bdd_167) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st9_fsm_8 or tmp_233_cast_fu_390_p1 or tmp_234_cast_fu_579_p1 or ap_sig_cseq_ST_st8_fsm_7 or tmp_235_cast_fu_616_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        rgb_buf_address0 = tmp_235_cast_fu_616_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        rgb_buf_address0 = tmp_234_cast_fu_579_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        rgb_buf_address0 = tmp_233_cast_fu_390_p1;
    end else begin
        rgb_buf_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st8_fsm_7) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        rgb_buf_ce0 = ap_const_logic_1;
    end else begin
        rgb_buf_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st8_fsm_7 or r_1_cast_fu_466_p1 or g_1_cast_fu_611_p1 or b_1_cast_fu_620_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        rgb_buf_d0 = b_1_cast_fu_620_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        rgb_buf_d0 = g_1_cast_fu_611_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        rgb_buf_d0 = r_1_cast_fu_466_p1;
    end else begin
        rgb_buf_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st8_fsm_7) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        rgb_buf_we0 = ap_const_logic_1;
    end else begin
        rgb_buf_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st5_fsm_4 or tmp_231_cast_fu_268_p1 or tmp_230_cast_fu_332_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        y_buf_address0 = tmp_230_cast_fu_332_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        y_buf_address0 = tmp_231_cast_fu_268_p1;
    end else begin
        y_buf_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st5_fsm_4) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        y_buf_ce0 = ap_const_logic_1;
    end else begin
        y_buf_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        y_buf_ce1 = ap_const_logic_1;
    end else begin
        y_buf_ce1 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond_fu_238_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond_fu_238_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_CS_fsm) begin
    ap_sig_bdd_108 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_119 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_128 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_151 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_167 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_181 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_27 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_74 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_98 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign b_1_cast_fu_620_p1 = $signed(b_1_reg_777);

assign b_1_fu_571_p3 = ((tmp_21_fu_565_p2[0:0] === 1'b1) ? tmp_20_cast_fu_561_p1 : tmp_38_fu_417_p4);

assign exitcond_fu_238_p2 = (i_reg_157 == ap_const_lv7_40? 1'b1: 1'b0);

assign g_1_cast_fu_611_p1 = $signed(g_1_fu_605_p3);

assign g_1_fu_605_p3 = ((tmp_17_reg_772[0:0] === 1'b1) ? tmp_16_cast_fu_601_p1 : tmp_35_reg_761);

assign grp_fu_308_ce = ap_const_logic_1;

assign grp_fu_308_p0 = ap_const_lv32_167;

assign grp_fu_314_ce = ap_const_logic_1;

assign grp_fu_314_p0 = ap_const_lv32_FFFFFFA8;

assign grp_fu_320_ce = ap_const_logic_1;

assign grp_fu_320_p0 = ap_const_lv32_FFFFFF4A;

assign grp_fu_326_ce = ap_const_logic_1;

assign grp_fu_326_p0 = ap_const_lv32_1C6;

assign i_27_fu_244_p2 = (i_reg_157 + ap_const_lv7_1);

assign icmp12_fu_489_p2 = ($signed(tmp_203_fu_479_p4) > $signed(16'b0000000000000000)? 1'b1: 1'b0);

assign icmp13_fu_527_p2 = ($signed(tmp_206_fu_517_p4) > $signed(16'b0000000000000000)? 1'b1: 1'b0);

assign icmp_fu_427_p2 = ($signed(tmp_200_reg_750) > $signed(16'b0000000000000000)? 1'b1: 1'b0);

assign p_shl1_cast_fu_216_p1 = tmp_181_fu_208_p3;

assign r_1_cast_fu_466_p1 = $signed(r_1_fu_459_p3);

assign r_1_fu_459_p3 = ((tmp_13_fu_454_p2[0:0] === 1'b1) ? tmp_12_cast_fu_450_p1 : tmp_31_reg_725);

assign tmp1_fu_394_p2 = (tmp_33_reg_735 + tmp_32_reg_730);

assign tmp_11_cast_fu_440_p1 = $signed(tmp_191_fu_432_p4);

assign tmp_12_cast_fu_450_p1 = $signed(tmp_12_fu_444_p2);

assign tmp_12_fu_444_p2 = ($signed(ap_const_lv10_FF) + $signed(tmp_11_cast_fu_440_p1));

assign tmp_13_fu_454_p2 = (tmp_199_reg_745 | icmp_fu_427_p2);

assign tmp_15_cast_fu_591_p1 = $signed(tmp_192_fu_583_p4);

assign tmp_16_cast_fu_601_p1 = $signed(tmp_16_fu_595_p2);

assign tmp_16_fu_595_p2 = ($signed(ap_const_lv10_FF) + $signed(tmp_15_cast_fu_591_p1));

assign tmp_17_fu_503_p2 = (tmp_202_fu_471_p3 | icmp12_fu_489_p2);

assign tmp_180_fu_200_p3 = {{p}, {ap_const_lv8_0}};

assign tmp_181_fu_208_p3 = {{p}, {ap_const_lv6_0}};

assign tmp_182_fu_220_p2 = (tmp_180_fu_200_p3 - p_shl1_cast_fu_216_p1);

assign tmp_183_fu_226_p2 = (ap_const_lv11_40 + tmp_182_fu_220_p2);

assign tmp_184_fu_232_p2 = (ap_const_lv11_80 + tmp_182_fu_220_p2);

assign tmp_185_fu_258_p2 = (tmp_cast_fu_254_p1 + tmp_224_cast_reg_634);

assign tmp_186_fu_263_p2 = (tmp_cast_fu_254_p1 + tmp_222_cast_reg_629);

assign tmp_187_fu_273_p2 = (tmp_cast_fu_254_p1 + tmp_reg_624);

assign tmp_188_fu_283_p2 = (tmp_cast1_fu_250_p1 + tmp_182_reg_639);

assign tmp_189_fu_288_p2 = (tmp_cast1_fu_250_p1 + tmp_183_reg_644);

assign tmp_190_fu_293_p2 = (tmp_cast1_fu_250_p1 + tmp_184_reg_649);

assign tmp_191_fu_432_p4 = {{{tmp_201_reg_755}, {ap_const_lv7_0}}, {tmp_201_reg_755}};

assign tmp_192_fu_583_p4 = {{{tmp_204_reg_766}, {ap_const_lv7_0}}, {tmp_204_reg_766}};

assign tmp_193_fu_541_p4 = {{{tmp_207_fu_533_p3}, {ap_const_lv7_0}}, {tmp_207_fu_533_p3}};

assign tmp_197_fu_176_p1 = u_buf_offset[3:0];

assign tmp_198_fu_336_p2 = y_buf_q0 << ap_const_lv32_8;

assign tmp_19_cast_fu_551_p1 = $signed(tmp_193_fu_541_p4);

assign tmp_202_fu_471_p3 = tmp_34_fu_398_p2[ap_const_lv32_1F];

assign tmp_203_fu_479_p4 = {{tmp_34_fu_398_p2[ap_const_lv32_1F : ap_const_lv32_10]}};

assign tmp_205_fu_509_p3 = tmp_37_fu_413_p2[ap_const_lv32_1F];

assign tmp_206_fu_517_p4 = {{tmp_37_fu_413_p2[ap_const_lv32_1F : ap_const_lv32_10]}};

assign tmp_207_fu_533_p3 = tmp_37_fu_413_p2[ap_const_lv32_1F];

assign tmp_20_cast_fu_561_p1 = $signed(tmp_20_fu_555_p2);

assign tmp_20_fu_555_p2 = ($signed(ap_const_lv10_FF) + $signed(tmp_19_cast_fu_551_p1));

assign tmp_21_fu_565_p2 = (tmp_205_fu_509_p3 | icmp13_fu_527_p2);

assign tmp_222_cast_fu_180_p3 = {{tmp_197_fu_176_p1}, {ap_const_lv6_0}};

assign tmp_224_cast_fu_196_p1 = tmp_s_fu_188_p3;

assign tmp_230_cast_fu_332_p1 = tmp_185_reg_662;

assign tmp_231_cast_fu_268_p1 = tmp_186_fu_263_p2;

assign tmp_232_cast_fu_278_p1 = tmp_187_fu_273_p2;

assign tmp_233_cast_fu_390_p1 = $signed(tmp_188_reg_677);

assign tmp_234_cast_fu_579_p1 = $signed(tmp_189_reg_682);

assign tmp_235_cast_fu_616_p1 = $signed(tmp_190_reg_687);

assign tmp_29_fu_342_p2 = (tmp_198_fu_336_p2 | ap_const_lv32_80);

assign tmp_30_fu_348_p2 = (grp_fu_308_p2 + tmp_29_fu_342_p2);

assign tmp_34_fu_398_p2 = (tmp_29_reg_719 + tmp1_fu_394_p2);

assign tmp_37_fu_413_p2 = (tmp_36_reg_740 + tmp_29_reg_719);

assign tmp_38_fu_417_p4 = {{tmp_37_fu_413_p2[ap_const_lv32_1F : ap_const_lv32_8]}};

assign tmp_cast1_fu_250_p1 = i_reg_157;

assign tmp_cast_fu_254_p1 = i_reg_157;

assign tmp_fu_168_p3 = {{v_buf_offset}, {ap_const_lv6_0}};

assign tmp_s_fu_188_p3 = {{tmp_7}, {ap_const_lv6_0}};

assign u_fu_298_p2 = ($signed(ap_const_lv32_FFFFFF80) + $signed(v_buf_load_2_reg_692));

assign v_fu_303_p2 = ($signed(ap_const_lv32_FFFFFF80) + $signed(v_buf_load_reg_697));

assign y_buf_address1 = tmp_232_cast_fu_278_p1;
always @ (posedge ap_clk) begin
    tmp_reg_624[5:0] <= 6'b000000;
    tmp_222_cast_reg_629[5:0] <= 6'b000000;
    tmp_224_cast_reg_634[5:0] <= 6'b000000;
    tmp_224_cast_reg_634[9] <= 1'b0;
    tmp_182_reg_639[5:0] <= 6'b000000;
    tmp_183_reg_644[5:0] <= 6'b000000;
    tmp_184_reg_649[5:0] <= 6'b000000;
    tmp_29_reg_719[7:0] <= 8'b10000000;
end



endmodule //decode_start_YuvToRgb

