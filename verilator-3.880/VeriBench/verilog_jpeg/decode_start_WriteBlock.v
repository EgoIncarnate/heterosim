// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module decode_start_WriteBlock (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        store_address0,
        store_ce0,
        store_q0,
        tmp_4,
        p_out_vpos_read,
        p_out_hpos_read,
        p_out_buf_address0,
        p_out_buf_ce0,
        p_out_buf_we0,
        p_out_buf_d0,
        tmp_42,
        p_jinfo_image_height_s,
        p_jinfo_image_width_s,
        p_jinfo_MCUWidth_s,
        ap_return_0,
        ap_return_1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 2'b1;
parameter    ap_ST_st2_fsm_1 = 2'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] store_address0;
output   store_ce0;
input  [31:0] store_q0;
input  [3:0] tmp_4;
input  [31:0] p_out_vpos_read;
input  [31:0] p_out_hpos_read;
output  [13:0] p_out_buf_address0;
output   p_out_buf_ce0;
output   p_out_buf_we0;
output  [7:0] p_out_buf_d0;
input  [3:0] tmp_42;
input  [15:0] p_jinfo_image_height_s;
input  [15:0] p_jinfo_image_width_s;
input  [31:0] p_jinfo_MCUWidth_s;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg store_ce0;
reg p_out_buf_ce0;
reg p_out_buf_we0;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm = 2'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_20;
wire   [31:0] voffs_fu_100_p2;
reg   [31:0] voffs_reg_188;
wire   [31:0] hoffs_fu_107_p2;
reg   [31:0] hoffs_reg_193;
wire   [1:0] tmp_fu_114_p1;
reg   [1:0] tmp_reg_198;
wire   [1:0] tmp_1696_fu_119_p1;
reg   [1:0] tmp_1696_reg_203;
wire    grp_decode_start_WriteOneBlock_fu_82_ap_start;
wire    grp_decode_start_WriteOneBlock_fu_82_ap_done;
wire    grp_decode_start_WriteOneBlock_fu_82_ap_idle;
wire    grp_decode_start_WriteOneBlock_fu_82_ap_ready;
wire   [9:0] grp_decode_start_WriteOneBlock_fu_82_store_address0;
wire    grp_decode_start_WriteOneBlock_fu_82_store_ce0;
wire   [31:0] grp_decode_start_WriteOneBlock_fu_82_store_q0;
wire   [3:0] grp_decode_start_WriteOneBlock_fu_82_store_offset;
wire   [1:0] grp_decode_start_WriteOneBlock_fu_82_tmp_4;
wire   [13:0] grp_decode_start_WriteOneBlock_fu_82_out_buf_address0;
wire    grp_decode_start_WriteOneBlock_fu_82_out_buf_ce0;
wire    grp_decode_start_WriteOneBlock_fu_82_out_buf_we0;
wire   [7:0] grp_decode_start_WriteOneBlock_fu_82_out_buf_d0;
wire   [1:0] grp_decode_start_WriteOneBlock_fu_82_tmp_42;
wire   [15:0] grp_decode_start_WriteOneBlock_fu_82_width;
wire   [15:0] grp_decode_start_WriteOneBlock_fu_82_height;
wire   [31:0] grp_decode_start_WriteOneBlock_fu_82_voffs;
wire   [31:0] grp_decode_start_WriteOneBlock_fu_82_hoffs;
reg    grp_decode_start_WriteOneBlock_fu_82_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_94;
wire   [31:0] tmp_30_fu_124_p2;
wire   [0:0] tmp_32_fu_134_p2;
wire   [31:0] tmp_31_fu_129_p2;
wire   [31:0] p_out_vpos_read_assign_fu_140_p3;
wire   [31:0] p_out_hpos_fu_147_p3;
reg   [1:0] ap_NS_fsm;


decode_start_WriteOneBlock grp_decode_start_WriteOneBlock_fu_82(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_decode_start_WriteOneBlock_fu_82_ap_start ),
    .ap_done( grp_decode_start_WriteOneBlock_fu_82_ap_done ),
    .ap_idle( grp_decode_start_WriteOneBlock_fu_82_ap_idle ),
    .ap_ready( grp_decode_start_WriteOneBlock_fu_82_ap_ready ),
    .store_address0( grp_decode_start_WriteOneBlock_fu_82_store_address0 ),
    .store_ce0( grp_decode_start_WriteOneBlock_fu_82_store_ce0 ),
    .store_q0( grp_decode_start_WriteOneBlock_fu_82_store_q0 ),
    .store_offset( grp_decode_start_WriteOneBlock_fu_82_store_offset ),
    .tmp_4( grp_decode_start_WriteOneBlock_fu_82_tmp_4 ),
    .out_buf_address0( grp_decode_start_WriteOneBlock_fu_82_out_buf_address0 ),
    .out_buf_ce0( grp_decode_start_WriteOneBlock_fu_82_out_buf_ce0 ),
    .out_buf_we0( grp_decode_start_WriteOneBlock_fu_82_out_buf_we0 ),
    .out_buf_d0( grp_decode_start_WriteOneBlock_fu_82_out_buf_d0 ),
    .tmp_42( grp_decode_start_WriteOneBlock_fu_82_tmp_42 ),
    .width( grp_decode_start_WriteOneBlock_fu_82_width ),
    .height( grp_decode_start_WriteOneBlock_fu_82_height ),
    .voffs( grp_decode_start_WriteOneBlock_fu_82_voffs ),
    .hoffs( grp_decode_start_WriteOneBlock_fu_82_hoffs )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_decode_start_WriteOneBlock_fu_82_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_decode_start_WriteOneBlock_fu_82_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            grp_decode_start_WriteOneBlock_fu_82_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_decode_start_WriteOneBlock_fu_82_ap_ready)) begin
            grp_decode_start_WriteOneBlock_fu_82_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        hoffs_reg_193[31 : 3] <= hoffs_fu_107_p2[31 : 3];
        tmp_1696_reg_203 <= tmp_1696_fu_119_p1;
        tmp_reg_198 <= tmp_fu_114_p1;
        voffs_reg_188[31 : 3] <= voffs_fu_100_p2[31 : 3];
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or grp_decode_start_WriteOneBlock_fu_82_ap_done or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_logic_0 == grp_decode_start_WriteOneBlock_fu_82_ap_done)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (grp_decode_start_WriteOneBlock_fu_82_ap_done or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_logic_0 == grp_decode_start_WriteOneBlock_fu_82_ap_done))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_20) begin
    if (ap_sig_bdd_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_94) begin
    if (ap_sig_bdd_94) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (grp_decode_start_WriteOneBlock_fu_82_out_buf_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_out_buf_ce0 = grp_decode_start_WriteOneBlock_fu_82_out_buf_ce0;
    end else begin
        p_out_buf_ce0 = ap_const_logic_0;
    end
end

always @ (grp_decode_start_WriteOneBlock_fu_82_out_buf_we0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_out_buf_we0 = grp_decode_start_WriteOneBlock_fu_82_out_buf_we0;
    end else begin
        p_out_buf_we0 = ap_const_logic_0;
    end
end

always @ (grp_decode_start_WriteOneBlock_fu_82_store_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        store_ce0 = grp_decode_start_WriteOneBlock_fu_82_store_ce0;
    end else begin
        store_ce0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or grp_decode_start_WriteOneBlock_fu_82_ap_done) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_logic_0 == grp_decode_start_WriteOneBlock_fu_82_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_return_0 = p_out_vpos_read_assign_fu_140_p3;

assign ap_return_1 = p_out_hpos_fu_147_p3;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_20 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_94 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign grp_decode_start_WriteOneBlock_fu_82_ap_start = grp_decode_start_WriteOneBlock_fu_82_ap_start_ap_start_reg;

assign grp_decode_start_WriteOneBlock_fu_82_height = p_jinfo_image_height_s;

assign grp_decode_start_WriteOneBlock_fu_82_hoffs = hoffs_reg_193;

assign grp_decode_start_WriteOneBlock_fu_82_store_offset = ap_const_lv4_0;

assign grp_decode_start_WriteOneBlock_fu_82_store_q0 = store_q0;

assign grp_decode_start_WriteOneBlock_fu_82_tmp_4 = tmp_reg_198;

assign grp_decode_start_WriteOneBlock_fu_82_tmp_42 = tmp_1696_reg_203;

assign grp_decode_start_WriteOneBlock_fu_82_voffs = voffs_reg_188;

assign grp_decode_start_WriteOneBlock_fu_82_width = p_jinfo_image_width_s;

assign hoffs_fu_107_p2 = p_out_hpos_read << ap_const_lv32_3;

assign p_out_buf_address0 = grp_decode_start_WriteOneBlock_fu_82_out_buf_address0;

assign p_out_buf_d0 = grp_decode_start_WriteOneBlock_fu_82_out_buf_d0;

assign p_out_hpos_fu_147_p3 = ((tmp_32_fu_134_p2[0:0] === 1'b1) ? tmp_30_fu_124_p2 : ap_const_lv32_0);

assign p_out_vpos_read_assign_fu_140_p3 = ((tmp_32_fu_134_p2[0:0] === 1'b1) ? p_out_vpos_read : tmp_31_fu_129_p2);

assign store_address0 = grp_decode_start_WriteOneBlock_fu_82_store_address0;

assign tmp_1696_fu_119_p1 = tmp_42[1:0];

assign tmp_30_fu_124_p2 = (ap_const_lv32_1 + p_out_hpos_read);

assign tmp_31_fu_129_p2 = (ap_const_lv32_1 + p_out_vpos_read);

assign tmp_32_fu_134_p2 = ($signed(tmp_30_fu_124_p2) < $signed(p_jinfo_MCUWidth_s)? 1'b1: 1'b0);

assign tmp_fu_114_p1 = tmp_4[1:0];

assign voffs_fu_100_p2 = p_out_vpos_read << ap_const_lv32_3;
always @ (posedge ap_clk) begin
    voffs_reg_188[2:0] <= 3'b000;
    hoffs_reg_193[2:0] <= 3'b000;
end



endmodule //decode_start_WriteBlock

