// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module decode_start_Write4Blocks (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        store1_address0,
        store1_ce0,
        store1_q0,
        tmp_10,
        tmp_102,
        tmp_104,
        tmp_106,
        p_out_vpos_read,
        p_out_hpos_read,
        p_out_buf_address0,
        p_out_buf_ce0,
        p_out_buf_we0,
        p_out_buf_d0,
        tmp_108,
        p_jinfo_image_height_s,
        p_jinfo_image_width_s,
        p_jinfo_MCUWidth_s,
        ap_return_0,
        ap_return_1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 8'b1;
parameter    ap_ST_st2_fsm_1 = 8'b10;
parameter    ap_ST_st3_fsm_2 = 8'b100;
parameter    ap_ST_st4_fsm_3 = 8'b1000;
parameter    ap_ST_st5_fsm_4 = 8'b10000;
parameter    ap_ST_st6_fsm_5 = 8'b100000;
parameter    ap_ST_st7_fsm_6 = 8'b1000000;
parameter    ap_ST_st8_fsm_7 = 8'b10000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_2 = 4'b10;
parameter    ap_const_lv4_3 = 4'b11;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] store1_address0;
output   store1_ce0;
input  [31:0] store1_q0;
input  [3:0] tmp_10;
input  [3:0] tmp_102;
input  [3:0] tmp_104;
input  [3:0] tmp_106;
input  [31:0] p_out_vpos_read;
input  [31:0] p_out_hpos_read;
output  [13:0] p_out_buf_address0;
output   p_out_buf_ce0;
output   p_out_buf_we0;
output  [7:0] p_out_buf_d0;
input  [3:0] tmp_108;
input  [15:0] p_jinfo_image_height_s;
input  [15:0] p_jinfo_image_width_s;
input  [31:0] p_jinfo_MCUWidth_s;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg store1_ce0;
reg p_out_buf_ce0;
reg p_out_buf_we0;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm = 8'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_26;
wire   [31:0] voffs_fu_137_p2;
reg   [31:0] voffs_reg_250;
wire   [31:0] hoffs_fu_144_p2;
reg   [31:0] hoffs_reg_256;
wire   [1:0] tmp_fu_151_p1;
reg   [1:0] tmp_reg_262;
wire   [1:0] tmp_1697_fu_156_p1;
reg   [1:0] tmp_1697_reg_267;
wire   [31:0] hoffs_1_fu_161_p2;
reg   [31:0] hoffs_1_reg_272;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_83;
wire    grp_decode_start_WriteOneBlock_fu_116_ap_done;
wire   [1:0] tmp_1698_fu_166_p1;
reg   [1:0] tmp_1698_reg_277;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_96;
wire   [31:0] voffs_1_fu_171_p2;
reg   [31:0] voffs_1_reg_282;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_105;
wire   [1:0] tmp_1699_fu_176_p1;
reg   [1:0] tmp_1699_reg_287;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_115;
wire   [1:0] tmp_1700_fu_181_p1;
reg   [1:0] tmp_1700_reg_292;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_124;
wire    grp_decode_start_WriteOneBlock_fu_116_ap_start;
wire    grp_decode_start_WriteOneBlock_fu_116_ap_idle;
wire    grp_decode_start_WriteOneBlock_fu_116_ap_ready;
wire   [9:0] grp_decode_start_WriteOneBlock_fu_116_store_address0;
wire    grp_decode_start_WriteOneBlock_fu_116_store_ce0;
wire   [31:0] grp_decode_start_WriteOneBlock_fu_116_store_q0;
reg   [3:0] grp_decode_start_WriteOneBlock_fu_116_store_offset;
reg   [1:0] grp_decode_start_WriteOneBlock_fu_116_tmp_4;
wire   [13:0] grp_decode_start_WriteOneBlock_fu_116_out_buf_address0;
wire    grp_decode_start_WriteOneBlock_fu_116_out_buf_ce0;
wire    grp_decode_start_WriteOneBlock_fu_116_out_buf_we0;
wire   [7:0] grp_decode_start_WriteOneBlock_fu_116_out_buf_d0;
wire   [1:0] grp_decode_start_WriteOneBlock_fu_116_tmp_42;
wire   [15:0] grp_decode_start_WriteOneBlock_fu_116_width;
wire   [15:0] grp_decode_start_WriteOneBlock_fu_116_height;
reg   [31:0] grp_decode_start_WriteOneBlock_fu_116_voffs;
reg   [31:0] grp_decode_start_WriteOneBlock_fu_116_hoffs;
reg    grp_decode_start_WriteOneBlock_fu_116_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_156;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_164;
wire   [31:0] tmp_33_fu_186_p2;
wire   [0:0] tmp_35_fu_196_p2;
wire   [31:0] tmp_34_fu_191_p2;
wire   [31:0] p_out_vpos_read_assign_fu_202_p3;
wire   [31:0] p_out_hpos_fu_209_p3;
reg   [7:0] ap_NS_fsm;


decode_start_WriteOneBlock grp_decode_start_WriteOneBlock_fu_116(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_decode_start_WriteOneBlock_fu_116_ap_start ),
    .ap_done( grp_decode_start_WriteOneBlock_fu_116_ap_done ),
    .ap_idle( grp_decode_start_WriteOneBlock_fu_116_ap_idle ),
    .ap_ready( grp_decode_start_WriteOneBlock_fu_116_ap_ready ),
    .store_address0( grp_decode_start_WriteOneBlock_fu_116_store_address0 ),
    .store_ce0( grp_decode_start_WriteOneBlock_fu_116_store_ce0 ),
    .store_q0( grp_decode_start_WriteOneBlock_fu_116_store_q0 ),
    .store_offset( grp_decode_start_WriteOneBlock_fu_116_store_offset ),
    .tmp_4( grp_decode_start_WriteOneBlock_fu_116_tmp_4 ),
    .out_buf_address0( grp_decode_start_WriteOneBlock_fu_116_out_buf_address0 ),
    .out_buf_ce0( grp_decode_start_WriteOneBlock_fu_116_out_buf_ce0 ),
    .out_buf_we0( grp_decode_start_WriteOneBlock_fu_116_out_buf_we0 ),
    .out_buf_d0( grp_decode_start_WriteOneBlock_fu_116_out_buf_d0 ),
    .tmp_42( grp_decode_start_WriteOneBlock_fu_116_tmp_42 ),
    .width( grp_decode_start_WriteOneBlock_fu_116_width ),
    .height( grp_decode_start_WriteOneBlock_fu_116_height ),
    .voffs( grp_decode_start_WriteOneBlock_fu_116_voffs ),
    .hoffs( grp_decode_start_WriteOneBlock_fu_116_hoffs )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_decode_start_WriteOneBlock_fu_116_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_decode_start_WriteOneBlock_fu_116_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
            grp_decode_start_WriteOneBlock_fu_116_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_decode_start_WriteOneBlock_fu_116_ap_ready)) begin
            grp_decode_start_WriteOneBlock_fu_116_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_logic_0 == grp_decode_start_WriteOneBlock_fu_116_ap_done))) begin
        hoffs_1_reg_272[31 : 3] <= hoffs_1_fu_161_p2[31 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        hoffs_reg_256[31 : 3] <= hoffs_fu_144_p2[31 : 3];
        tmp_1697_reg_267 <= tmp_1697_fu_156_p1;
        tmp_reg_262 <= tmp_fu_151_p1;
        voffs_reg_250[31 : 3] <= voffs_fu_137_p2[31 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tmp_1698_reg_277 <= tmp_1698_fu_166_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_1699_reg_287 <= tmp_1699_fu_176_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tmp_1700_reg_292 <= tmp_1700_fu_181_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_const_logic_0 == grp_decode_start_WriteOneBlock_fu_116_ap_done) & (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        voffs_1_reg_282[31 : 3] <= voffs_1_fu_171_p2[31 : 3];
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or grp_decode_start_WriteOneBlock_fu_116_ap_done or ap_sig_cseq_ST_st8_fsm_7) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (~(ap_const_logic_0 == grp_decode_start_WriteOneBlock_fu_116_ap_done) & (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (grp_decode_start_WriteOneBlock_fu_116_ap_done or ap_sig_cseq_ST_st8_fsm_7) begin
    if ((~(ap_const_logic_0 == grp_decode_start_WriteOneBlock_fu_116_ap_done) & (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_26) begin
    if (ap_sig_bdd_26) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_83) begin
    if (ap_sig_bdd_83) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_96) begin
    if (ap_sig_bdd_96) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_105) begin
    if (ap_sig_bdd_105) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_115) begin
    if (ap_sig_bdd_115) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_156) begin
    if (ap_sig_bdd_156) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_124) begin
    if (ap_sig_bdd_124) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_164) begin
    if (ap_sig_bdd_164) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (hoffs_reg_256 or hoffs_1_reg_272 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st8_fsm_7) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        grp_decode_start_WriteOneBlock_fu_116_hoffs = hoffs_1_reg_272;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        grp_decode_start_WriteOneBlock_fu_116_hoffs = hoffs_reg_256;
    end else begin
        grp_decode_start_WriteOneBlock_fu_116_hoffs = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st8_fsm_7) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_decode_start_WriteOneBlock_fu_116_store_offset = ap_const_lv4_3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_decode_start_WriteOneBlock_fu_116_store_offset = ap_const_lv4_2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        grp_decode_start_WriteOneBlock_fu_116_store_offset = ap_const_lv4_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_decode_start_WriteOneBlock_fu_116_store_offset = ap_const_lv4_0;
    end else begin
        grp_decode_start_WriteOneBlock_fu_116_store_offset = 'bx;
    end
end

always @ (tmp_reg_262 or ap_sig_cseq_ST_st2_fsm_1 or tmp_1698_reg_277 or ap_sig_cseq_ST_st4_fsm_3 or tmp_1699_reg_287 or tmp_1700_reg_292 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st8_fsm_7) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_decode_start_WriteOneBlock_fu_116_tmp_4 = tmp_1700_reg_292;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_decode_start_WriteOneBlock_fu_116_tmp_4 = tmp_1699_reg_287;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        grp_decode_start_WriteOneBlock_fu_116_tmp_4 = tmp_1698_reg_277;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_decode_start_WriteOneBlock_fu_116_tmp_4 = tmp_reg_262;
    end else begin
        grp_decode_start_WriteOneBlock_fu_116_tmp_4 = 'bx;
    end
end

always @ (voffs_reg_250 or ap_sig_cseq_ST_st2_fsm_1 or voffs_1_reg_282 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st8_fsm_7) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        grp_decode_start_WriteOneBlock_fu_116_voffs = voffs_1_reg_282;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        grp_decode_start_WriteOneBlock_fu_116_voffs = voffs_reg_250;
    end else begin
        grp_decode_start_WriteOneBlock_fu_116_voffs = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or grp_decode_start_WriteOneBlock_fu_116_out_buf_ce0 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st8_fsm_7) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        p_out_buf_ce0 = grp_decode_start_WriteOneBlock_fu_116_out_buf_ce0;
    end else begin
        p_out_buf_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or grp_decode_start_WriteOneBlock_fu_116_out_buf_we0 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st8_fsm_7) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        p_out_buf_we0 = grp_decode_start_WriteOneBlock_fu_116_out_buf_we0;
    end else begin
        p_out_buf_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or grp_decode_start_WriteOneBlock_fu_116_store_ce0 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st8_fsm_7) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        store1_ce0 = grp_decode_start_WriteOneBlock_fu_116_store_ce0;
    end else begin
        store1_ce0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or grp_decode_start_WriteOneBlock_fu_116_ap_done) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_logic_0 == grp_decode_start_WriteOneBlock_fu_116_ap_done)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(ap_const_logic_0 == grp_decode_start_WriteOneBlock_fu_116_ap_done)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            if (~(ap_const_logic_0 == grp_decode_start_WriteOneBlock_fu_116_ap_done)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            if (~(ap_const_logic_0 == grp_decode_start_WriteOneBlock_fu_116_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_return_0 = p_out_vpos_read_assign_fu_202_p3;

assign ap_return_1 = p_out_hpos_fu_209_p3;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_105 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_115 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_124 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_156 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_164 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_26 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_83 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_96 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign grp_decode_start_WriteOneBlock_fu_116_ap_start = grp_decode_start_WriteOneBlock_fu_116_ap_start_ap_start_reg;

assign grp_decode_start_WriteOneBlock_fu_116_height = p_jinfo_image_height_s;

assign grp_decode_start_WriteOneBlock_fu_116_store_q0 = store1_q0;

assign grp_decode_start_WriteOneBlock_fu_116_tmp_42 = tmp_1697_reg_267;

assign grp_decode_start_WriteOneBlock_fu_116_width = p_jinfo_image_width_s;

assign hoffs_1_fu_161_p2 = (ap_const_lv32_8 + hoffs_reg_256);

assign hoffs_fu_144_p2 = p_out_hpos_read << ap_const_lv32_3;

assign p_out_buf_address0 = grp_decode_start_WriteOneBlock_fu_116_out_buf_address0;

assign p_out_buf_d0 = grp_decode_start_WriteOneBlock_fu_116_out_buf_d0;

assign p_out_hpos_fu_209_p3 = ((tmp_35_fu_196_p2[0:0] === 1'b1) ? tmp_33_fu_186_p2 : ap_const_lv32_0);

assign p_out_vpos_read_assign_fu_202_p3 = ((tmp_35_fu_196_p2[0:0] === 1'b1) ? p_out_vpos_read : tmp_34_fu_191_p2);

assign store1_address0 = grp_decode_start_WriteOneBlock_fu_116_store_address0;

assign tmp_1697_fu_156_p1 = tmp_108[1:0];

assign tmp_1698_fu_166_p1 = tmp_102[1:0];

assign tmp_1699_fu_176_p1 = tmp_104[1:0];

assign tmp_1700_fu_181_p1 = tmp_106[1:0];

assign tmp_33_fu_186_p2 = (ap_const_lv32_2 + p_out_hpos_read);

assign tmp_34_fu_191_p2 = (ap_const_lv32_2 + p_out_vpos_read);

assign tmp_35_fu_196_p2 = ($signed(tmp_33_fu_186_p2) < $signed(p_jinfo_MCUWidth_s)? 1'b1: 1'b0);

assign tmp_fu_151_p1 = tmp_10[1:0];

assign voffs_1_fu_171_p2 = (ap_const_lv32_8 + voffs_reg_250);

assign voffs_fu_137_p2 = p_out_vpos_read << ap_const_lv32_3;
always @ (posedge ap_clk) begin
    voffs_reg_250[2:0] <= 3'b000;
    hoffs_reg_256[2:0] <= 3'b000;
    hoffs_1_reg_272[2:0] <= 3'b000;
    voffs_1_reg_282[2:0] <= 3'b000;
end



endmodule //decode_start_Write4Blocks

