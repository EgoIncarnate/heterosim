###############################################
# Configurations that you may want to change:
###############################################

# target FPGA device family
FAMILY = CycloneII
#FAMILY = StratixIV

# default period constraints in ns
ifeq ($(LEGUP_SDC_PERIOD),)
ifeq ($(FAMILY),CycloneII)
	export LEGUP_SDC_PERIOD = 15
endif
ifeq ($(FAMILY),StratixIV)
	export LEGUP_SDC_PERIOD = 5
endif
endif

# set the FPGA board
ifeq ($(FAMILY),CycloneII)
	FPGA_BOARD = DE2
	DEVICE_FAMILY="Cyclone II" 	
	DEVICE=EP2C35F672C6 
endif
ifeq ($(FAMILY),StratixIV)
	FPGA_BOARD = DE4
	DEVICE_FAMILY="Stratix IV" 	
	DEVICE=EP4SGX530KH40C2
endif

# unroll flags
#UNROLL = -unroll-threshold=192 -debug 
#UNROLL = -unroll-allow-partial -unroll-threshold=192 -debug 
#UNROLL = -unroll-threshold=50000 -debug 
#UNROLL = -unroll-allow-partial -unroll-threshold=1000

# inline flags
#CFLAG += -mllvm -inline-threshold=10000

# local config.tcl file for benchmark specific parameters
#LOCAL_CONFIG = -legup-config=config.tcl

# suppresses harmless warning:
# ** Warning: (vopt-2009) At least one design unit was compiled with optimization level -O0 or -O1.
#VSIMFLAG += -note 2009

VSIM_WAVE_CONFIG = configure wave -signalnamewidth 2; \
                   configure wave -namecolwidth 300; \
                   configure wave -gridoffset 10000; \
                   update; WaveRestoreZoom {0 ps} {400 ns}; 

# if running on Scinet, set path to Scinet directory
ifdef USE_SCINET
	#LEVEL=$(SCINET_EXAMPLES_DIR)
	#EXPECT := /home/j/janders/jchoi/expect5.45/expect
	EXPECT := /home/j/janders/jchoi/tcl8.5.8/bin/expect

	# for gnu/stubs-32.h
	CFLAG += -I/home/j/janders/jchoi/legup_binaries/
endif

# whether using Release or Debug LLVM build
ifndef LLVM_BUILD
	LLVM_BUILD = Release+Asserts
#	LLVM_BUILD = Debug+Asserts
endif

# path to front-end, such as llvm-gcc, clang or llvm-g++
ifndef FRONT_END
	FRONT_END = clang
endif

# prefix of mipsel gcc
MIPS_PREFIX = $(LEVEL)/../mips-binutils/bin/mipsel-elf-

# use oldtestmips if using gxemul 0.6, testmips if using gxemul 0.4.7.2
ifndef GXEMUL_OPT
	GXEMUL_OPT = oldtestmips
endif

# make sure for loops fail properly in the makefile
SHELL := /bin/bash -e

ifndef EXPECT
	EXPECT := /usr/bin/expect
endif

###############################################
# Configurations that shouldn't change:
###############################################

# suppress warnings like:
# sha.c:52: warning: conflicting types for built-in function ‘memset’
CFLAG += -fno-builtin -m32 -I $(LEVEL)/lib/include/

# for ubuntu 11.10 header files
CFLAG += -I/usr/include/i386-linux-gnu

# location of mips libraries
MIPS_LIB = $(LEVEL)/../tiger/linux_tools/lib

# location of profiling code - marks's -- not used in current version
PROF_LIB = $(LEVEL)/../tiger/tool_source/Profiling

# location of profiling tools
PROF_TOOLS = $(LEVEL)/../tiger/tool_source/profiling_tools

# enable profiling
#PROFILER_ON = true

# parameters for profiling in simulation
# default: hierarchical profiling of execution cycle
CNT_INC = 00010
DO_HIER = 1
# parameters for profiling on board
# sof file to program the board in pure sw mode
PGM_SOF = $(PROF_TOOLS)/tiger_leap.sof
# profiling target
INSTR_PROF  = 0x00000001
CYCLE_PROF  = 0x00000002
STALL_PROF  = 0x00000004
ISTALL_PROF = 0x00000008
DSTALL_PROF = 0x00000010
# profiling type
HIER_PROF = 0x00000001
FLAT_PROF = 0x00000000

# Functions that have percentage greater than this number will be predicted
MIN_PERCENTAGE_TO_PREDICT = 5
# Name of the accelerating function
ACCELERATOR_NAME = `grep '^set_accelerator_function "' config.tcl | sed 's/set_accelerator_function //' | sed 's/"//g'`

# parameters for profiling - by mark.. not used in current version
NUM_FUNCTIONS = 16
LOG_NUM_FUNCTIONS = 4
RESULTS_CONVERT = convertPowerResults #convertFuncResults		# convertFuncResults or convertPowerResults
COUNTER_WIDTH = 32

# ie. for chstone/jpeg this would be jpeg
PWD = $(shell pwd)

# location of tiger mips processor
# PROC_PROF_DIR = $(LEVEL)/../tiger/processor/tiger_hybrid_pipelined_with_leap
PROC_HY_PROF_DIR = $(LEVEL)/../tiger/processor/tiger_hybrid/simulation

#processor locations
ifeq ($(FPGA_BOARD),DE2)
	# location of tiger mips processor
	PROC_DIR = $(LEVEL)/../tiger/processor/tiger_DE2
	# location of hybrid processor
	HYBRID_PROC = $(LEVEL)/../tiger/processor/tiger_DE2
endif
ifeq ($(FPGA_BOARD),DE4)
	# location of tiger mips processor
	PROC_DIR = $(LEVEL)/../tiger/processor/tiger_DE4
	# location of hybrid processor
	HYBRID_PROC = $(LEVEL)/../tiger/processor/tiger_DE4
endif

# set the binaries according to FPGA baord
ifeq ($(FPGA_BOARD),DE2)
	PROG_LINK = prog_link.ld
	PERF_COUNTER = altera_avalon_performance_counter.o
	ELF2SDRAM = elf2sdram
	SIMFILE = sdram.dat
endif
ifeq ($(FPGA_BOARD),DE4)
	PROG_LINK = prog_link_DE4.ld
	PERF_COUNTER = performance_counter_DE4.o
	ELF2SDRAM = elf2sdram_DE4
	SIMFILE = ddr2.dat
endif

# location of pcie code
PCIE_DIR = $(LEVEL)/../pcie/

# location of hybrid circuits
HYBRID_DIR = $(LEVEL)/../tiger/hybrid/

# ie. for chstone/jpeg this would be jpeg
BASENAME = $(shell basename $(PWD))

# directory of files that Quartus should include
VERILOG_LIB_DIR = $(PROC_DIR)/../altera_libs/

# files that modelsim should include
VERILOG_LIBS = $(VERILOG_LIB_DIR)/altera_mf.v $(VERILOG_LIB_DIR)/220model.v \
		$(VERILOG_LIB_DIR)/altfp_adder.v \
		$(VERILOG_LIB_DIR)/altfp_subtractor.v \
		$(VERILOG_LIB_DIR)/altfp_multiplier.v \
		$(VERILOG_LIB_DIR)/altfp_divider.v \
		$(VERILOG_LIB_DIR)/altfp_adder64.v \
		$(VERILOG_LIB_DIR)/altfp_subtractor64.v \
		$(VERILOG_LIB_DIR)/altfp_multiplier64.v \
		$(VERILOG_LIB_DIR)/altfp_divider64.v \
		$(VERILOG_LIB_DIR)/altfp_compare32.v \
		$(VERILOG_LIB_DIR)/altfp_compare64.v \
		$(VERILOG_LIB_DIR)/altfp_truncate.v \
		$(VERILOG_LIB_DIR)/altfp_extend.v \
		$(VERILOG_LIB_DIR)/altfp_sitofp32.v \
		$(VERILOG_LIB_DIR)/altfp_sitofp64.v \
		$(VERILOG_LIB_DIR)/altfp_fptosi32.v \
		$(VERILOG_LIB_DIR)/altfp_fptosi64.v

# define modelsim base directory
MODEL_HOME = ${shell which vsim}/../..

# path to llvm executables such as opt and llc (keep trailing /)
LLVM_HOME = $(LEVEL)/../llvm/$(LLVM_BUILD)/bin/

# path to llvm libraries such as shared libraries used for opt (keep trailing /)
LIB_DIR = $(LEVEL)/../llvm/$(LLVM_BUILD)/lib/

POLLY_LIB_DIR = $(LEVEL)/../llvm/tools/polly/$(LLVM_BUILD)/lib/
CLOOG_DIR = $(LEVEL)/../cloog/install/lib/

# include polly libraries, LLVM libraries, and global configuration
#OPT_FLAGS = -load=$(CLOOG_DIR)libisl.so -load=$(CLOOG_DIR)libcloog-isl.so \
#            -load=$(POLLY_LIB_DIR)LLVMPolly.so -load=$(LIB_DIR)LLVMLegUp.so 
OPT_FLAGS = -load=$(LIB_DIR)LLVMLegUp.so \
			-legup-config=$(LEVEL)/../hwtest/$(FAMILY).tcl \
            -legup-config=$(LEVEL)/legup.tcl \
			$(LOCAL_CONFIG)

# path to llvm-ar libraries, such as LLVM intrinsics
AR_DIR = $(LEVEL)/lib/llvm

# include area information and global settings
LLC_FLAGS = -legup-config=$(LEVEL)/../hwtest/$(FAMILY).tcl \
            -legup-config=$(LEVEL)/legup.tcl \
			$(LOCAL_CONFIG)

# name of Verilog file
VFILE = $(NAME).v

# name of Verilog file
VFILE = $(NAME).v

# create work directory if necessary
ifeq ($(wildcard work),) 
	VLIB = vsim $(VSIMFLAG) -c -do "vlib work; exit;" 
else
	VLIB =
endif

# CFLAG optimization level switch
ifeq ($(NO_OPT),1) 
	CFLAG += -O0
else
	CFLAG += -O3
endif

# link time optimization switch
ifeq ($(NO_INLINE),1)
	LDFLAG += -disable-inlining -disable-opt
	CFLAG += -mllvm -inline-threshold=-100
endif

# targets to make
TARGETS = all watch v p q f tiger tiger_prof tigersim tigersim_prof gprof emul emulwatch emultest emultrace hierarchy cleantiger clean cleanall functionslist hybrid
