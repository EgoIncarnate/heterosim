//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Target Instruction Enum Values
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace PPC {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    PROLOG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    ADD4	= 14,
    ADD8	= 15,
    ADDC	= 16,
    ADDC8	= 17,
    ADDE	= 18,
    ADDE8	= 19,
    ADDI	= 20,
    ADDI8	= 21,
    ADDIC	= 22,
    ADDIC8	= 23,
    ADDICo	= 24,
    ADDIS	= 25,
    ADDIS8	= 26,
    ADDME	= 27,
    ADDME8	= 28,
    ADDZE	= 29,
    ADDZE8	= 30,
    ADJCALLSTACKDOWN	= 31,
    ADJCALLSTACKUP	= 32,
    AND	= 33,
    AND8	= 34,
    ANDC	= 35,
    ANDC8	= 36,
    ANDISo	= 37,
    ANDISo8	= 38,
    ANDIo	= 39,
    ANDIo8	= 40,
    ATOMIC_CMP_SWAP_I16	= 41,
    ATOMIC_CMP_SWAP_I32	= 42,
    ATOMIC_CMP_SWAP_I64	= 43,
    ATOMIC_CMP_SWAP_I8	= 44,
    ATOMIC_LOAD_ADD_I16	= 45,
    ATOMIC_LOAD_ADD_I32	= 46,
    ATOMIC_LOAD_ADD_I64	= 47,
    ATOMIC_LOAD_ADD_I8	= 48,
    ATOMIC_LOAD_AND_I16	= 49,
    ATOMIC_LOAD_AND_I32	= 50,
    ATOMIC_LOAD_AND_I64	= 51,
    ATOMIC_LOAD_AND_I8	= 52,
    ATOMIC_LOAD_NAND_I16	= 53,
    ATOMIC_LOAD_NAND_I32	= 54,
    ATOMIC_LOAD_NAND_I64	= 55,
    ATOMIC_LOAD_NAND_I8	= 56,
    ATOMIC_LOAD_OR_I16	= 57,
    ATOMIC_LOAD_OR_I32	= 58,
    ATOMIC_LOAD_OR_I64	= 59,
    ATOMIC_LOAD_OR_I8	= 60,
    ATOMIC_LOAD_SUB_I16	= 61,
    ATOMIC_LOAD_SUB_I32	= 62,
    ATOMIC_LOAD_SUB_I64	= 63,
    ATOMIC_LOAD_SUB_I8	= 64,
    ATOMIC_LOAD_XOR_I16	= 65,
    ATOMIC_LOAD_XOR_I32	= 66,
    ATOMIC_LOAD_XOR_I64	= 67,
    ATOMIC_LOAD_XOR_I8	= 68,
    ATOMIC_SWAP_I16	= 69,
    ATOMIC_SWAP_I32	= 70,
    ATOMIC_SWAP_I64	= 71,
    ATOMIC_SWAP_I8	= 72,
    B	= 73,
    BCC	= 74,
    BCTR	= 75,
    BCTR8	= 76,
    BCTRL8_Darwin	= 77,
    BCTRL8_ELF	= 78,
    BCTRL_Darwin	= 79,
    BCTRL_SVR4	= 80,
    BL8_Darwin	= 81,
    BL8_ELF	= 82,
    BLA8_Darwin	= 83,
    BLA8_ELF	= 84,
    BLA_Darwin	= 85,
    BLA_SVR4	= 86,
    BLR	= 87,
    BL_Darwin	= 88,
    BL_SVR4	= 89,
    CMPD	= 90,
    CMPDI	= 91,
    CMPLD	= 92,
    CMPLDI	= 93,
    CMPLW	= 94,
    CMPLWI	= 95,
    CMPW	= 96,
    CMPWI	= 97,
    CNTLZD	= 98,
    CNTLZW	= 99,
    CREQV	= 100,
    CROR	= 101,
    CRSET	= 102,
    DCBA	= 103,
    DCBF	= 104,
    DCBI	= 105,
    DCBST	= 106,
    DCBT	= 107,
    DCBTST	= 108,
    DCBZ	= 109,
    DCBZL	= 110,
    DIVD	= 111,
    DIVDU	= 112,
    DIVW	= 113,
    DIVWU	= 114,
    DSS	= 115,
    DSSALL	= 116,
    DST	= 117,
    DST64	= 118,
    DSTST	= 119,
    DSTST64	= 120,
    DSTSTT	= 121,
    DSTSTT64	= 122,
    DSTT	= 123,
    DSTT64	= 124,
    DYNALLOC	= 125,
    DYNALLOC8	= 126,
    EQV	= 127,
    EQV8	= 128,
    EXTSB	= 129,
    EXTSB8	= 130,
    EXTSH	= 131,
    EXTSH8	= 132,
    EXTSW	= 133,
    EXTSW_32	= 134,
    EXTSW_32_64	= 135,
    FABSD	= 136,
    FABSS	= 137,
    FADD	= 138,
    FADDS	= 139,
    FADDrtz	= 140,
    FCFID	= 141,
    FCMPUD	= 142,
    FCMPUS	= 143,
    FCTIDZ	= 144,
    FCTIWZ	= 145,
    FDIV	= 146,
    FDIVS	= 147,
    FMADD	= 148,
    FMADDS	= 149,
    FMR	= 150,
    FMSUB	= 151,
    FMSUBS	= 152,
    FMUL	= 153,
    FMULS	= 154,
    FNABSD	= 155,
    FNABSS	= 156,
    FNEGD	= 157,
    FNEGS	= 158,
    FNMADD	= 159,
    FNMADDS	= 160,
    FNMSUB	= 161,
    FNMSUBS	= 162,
    FRSP	= 163,
    FSELD	= 164,
    FSELS	= 165,
    FSQRT	= 166,
    FSQRTS	= 167,
    FSUB	= 168,
    FSUBS	= 169,
    LA	= 170,
    LBZ	= 171,
    LBZ8	= 172,
    LBZU	= 173,
    LBZU8	= 174,
    LBZX	= 175,
    LBZX8	= 176,
    LD	= 177,
    LDARX	= 178,
    LDU	= 179,
    LDX	= 180,
    LDinto_toc	= 181,
    LDtoc	= 182,
    LDtoc_restore	= 183,
    LFD	= 184,
    LFDU	= 185,
    LFDX	= 186,
    LFS	= 187,
    LFSU	= 188,
    LFSX	= 189,
    LHA	= 190,
    LHA8	= 191,
    LHAU	= 192,
    LHAU8	= 193,
    LHAX	= 194,
    LHAX8	= 195,
    LHBRX	= 196,
    LHZ	= 197,
    LHZ8	= 198,
    LHZU	= 199,
    LHZU8	= 200,
    LHZX	= 201,
    LHZX8	= 202,
    LI	= 203,
    LI8	= 204,
    LIS	= 205,
    LIS8	= 206,
    LVEBX	= 207,
    LVEHX	= 208,
    LVEWX	= 209,
    LVSL	= 210,
    LVSR	= 211,
    LVX	= 212,
    LVXL	= 213,
    LWA	= 214,
    LWARX	= 215,
    LWAX	= 216,
    LWBRX	= 217,
    LWZ	= 218,
    LWZ8	= 219,
    LWZU	= 220,
    LWZU8	= 221,
    LWZX	= 222,
    LWZX8	= 223,
    MCRF	= 224,
    MFCR	= 225,
    MFCRpseud	= 226,
    MFCTR	= 227,
    MFCTR8	= 228,
    MFFS	= 229,
    MFLR	= 230,
    MFLR8	= 231,
    MFOCRF	= 232,
    MFVRSAVE	= 233,
    MFVSCR	= 234,
    MTCRF	= 235,
    MTCTR	= 236,
    MTCTR8	= 237,
    MTFSB0	= 238,
    MTFSB1	= 239,
    MTFSF	= 240,
    MTLR	= 241,
    MTLR8	= 242,
    MTVRSAVE	= 243,
    MTVSCR	= 244,
    MULHD	= 245,
    MULHDU	= 246,
    MULHW	= 247,
    MULHWU	= 248,
    MULLD	= 249,
    MULLI	= 250,
    MULLW	= 251,
    MovePCtoLR	= 252,
    MovePCtoLR8	= 253,
    NAND	= 254,
    NAND8	= 255,
    NEG	= 256,
    NEG8	= 257,
    NOP	= 258,
    NOR	= 259,
    NOR8	= 260,
    OR	= 261,
    OR4To8	= 262,
    OR8	= 263,
    OR8To4	= 264,
    ORC	= 265,
    ORC8	= 266,
    ORI	= 267,
    ORI8	= 268,
    ORIS	= 269,
    ORIS8	= 270,
    RLDCL	= 271,
    RLDICL	= 272,
    RLDICR	= 273,
    RLDIMI	= 274,
    RLWIMI	= 275,
    RLWINM	= 276,
    RLWINMo	= 277,
    RLWNM	= 278,
    SELECT_CC_F4	= 279,
    SELECT_CC_F8	= 280,
    SELECT_CC_I4	= 281,
    SELECT_CC_I8	= 282,
    SELECT_CC_VRRC	= 283,
    SLD	= 284,
    SLW	= 285,
    SPILL_CR	= 286,
    SRAD	= 287,
    SRADI	= 288,
    SRAW	= 289,
    SRAWI	= 290,
    SRD	= 291,
    SRW	= 292,
    STB	= 293,
    STB8	= 294,
    STBU	= 295,
    STBU8	= 296,
    STBX	= 297,
    STBX8	= 298,
    STD	= 299,
    STDCX	= 300,
    STDU	= 301,
    STDUX	= 302,
    STDX	= 303,
    STDX_32	= 304,
    STD_32	= 305,
    STFD	= 306,
    STFDU	= 307,
    STFDX	= 308,
    STFIWX	= 309,
    STFS	= 310,
    STFSU	= 311,
    STFSX	= 312,
    STH	= 313,
    STH8	= 314,
    STHBRX	= 315,
    STHU	= 316,
    STHU8	= 317,
    STHX	= 318,
    STHX8	= 319,
    STVEBX	= 320,
    STVEHX	= 321,
    STVEWX	= 322,
    STVX	= 323,
    STVXL	= 324,
    STW	= 325,
    STW8	= 326,
    STWBRX	= 327,
    STWCX	= 328,
    STWU	= 329,
    STWUX	= 330,
    STWX	= 331,
    STWX8	= 332,
    SUBF	= 333,
    SUBF8	= 334,
    SUBFC	= 335,
    SUBFC8	= 336,
    SUBFE	= 337,
    SUBFE8	= 338,
    SUBFIC	= 339,
    SUBFIC8	= 340,
    SUBFME	= 341,
    SUBFME8	= 342,
    SUBFZE	= 343,
    SUBFZE8	= 344,
    SYNC	= 345,
    TAILB	= 346,
    TAILB8	= 347,
    TAILBA	= 348,
    TAILBA8	= 349,
    TAILBCTR	= 350,
    TAILBCTR8	= 351,
    TCRETURNai	= 352,
    TCRETURNai8	= 353,
    TCRETURNdi	= 354,
    TCRETURNdi8	= 355,
    TCRETURNri	= 356,
    TCRETURNri8	= 357,
    TRAP	= 358,
    UPDATE_VRSAVE	= 359,
    VADDCUW	= 360,
    VADDFP	= 361,
    VADDSBS	= 362,
    VADDSHS	= 363,
    VADDSWS	= 364,
    VADDUBM	= 365,
    VADDUBS	= 366,
    VADDUHM	= 367,
    VADDUHS	= 368,
    VADDUWM	= 369,
    VADDUWS	= 370,
    VAND	= 371,
    VANDC	= 372,
    VAVGSB	= 373,
    VAVGSH	= 374,
    VAVGSW	= 375,
    VAVGUB	= 376,
    VAVGUH	= 377,
    VAVGUW	= 378,
    VCFSX	= 379,
    VCFUX	= 380,
    VCMPBFP	= 381,
    VCMPBFPo	= 382,
    VCMPEQFP	= 383,
    VCMPEQFPo	= 384,
    VCMPEQUB	= 385,
    VCMPEQUBo	= 386,
    VCMPEQUH	= 387,
    VCMPEQUHo	= 388,
    VCMPEQUW	= 389,
    VCMPEQUWo	= 390,
    VCMPGEFP	= 391,
    VCMPGEFPo	= 392,
    VCMPGTFP	= 393,
    VCMPGTFPo	= 394,
    VCMPGTSB	= 395,
    VCMPGTSBo	= 396,
    VCMPGTSH	= 397,
    VCMPGTSHo	= 398,
    VCMPGTSW	= 399,
    VCMPGTSWo	= 400,
    VCMPGTUB	= 401,
    VCMPGTUBo	= 402,
    VCMPGTUH	= 403,
    VCMPGTUHo	= 404,
    VCMPGTUW	= 405,
    VCMPGTUWo	= 406,
    VCTSXS	= 407,
    VCTUXS	= 408,
    VEXPTEFP	= 409,
    VLOGEFP	= 410,
    VMADDFP	= 411,
    VMAXFP	= 412,
    VMAXSB	= 413,
    VMAXSH	= 414,
    VMAXSW	= 415,
    VMAXUB	= 416,
    VMAXUH	= 417,
    VMAXUW	= 418,
    VMHADDSHS	= 419,
    VMHRADDSHS	= 420,
    VMINFP	= 421,
    VMINSB	= 422,
    VMINSH	= 423,
    VMINSW	= 424,
    VMINUB	= 425,
    VMINUH	= 426,
    VMINUW	= 427,
    VMLADDUHM	= 428,
    VMRGHB	= 429,
    VMRGHH	= 430,
    VMRGHW	= 431,
    VMRGLB	= 432,
    VMRGLH	= 433,
    VMRGLW	= 434,
    VMSUMMBM	= 435,
    VMSUMSHM	= 436,
    VMSUMSHS	= 437,
    VMSUMUBM	= 438,
    VMSUMUHM	= 439,
    VMSUMUHS	= 440,
    VMULESB	= 441,
    VMULESH	= 442,
    VMULEUB	= 443,
    VMULEUH	= 444,
    VMULOSB	= 445,
    VMULOSH	= 446,
    VMULOUB	= 447,
    VMULOUH	= 448,
    VNMSUBFP	= 449,
    VNOR	= 450,
    VOR	= 451,
    VPERM	= 452,
    VPKPX	= 453,
    VPKSHSS	= 454,
    VPKSHUS	= 455,
    VPKSWSS	= 456,
    VPKSWUS	= 457,
    VPKUHUM	= 458,
    VPKUHUS	= 459,
    VPKUWUM	= 460,
    VPKUWUS	= 461,
    VREFP	= 462,
    VRFIM	= 463,
    VRFIN	= 464,
    VRFIP	= 465,
    VRFIZ	= 466,
    VRLB	= 467,
    VRLH	= 468,
    VRLW	= 469,
    VRSQRTEFP	= 470,
    VSEL	= 471,
    VSL	= 472,
    VSLB	= 473,
    VSLDOI	= 474,
    VSLH	= 475,
    VSLO	= 476,
    VSLW	= 477,
    VSPLTB	= 478,
    VSPLTH	= 479,
    VSPLTISB	= 480,
    VSPLTISH	= 481,
    VSPLTISW	= 482,
    VSPLTW	= 483,
    VSR	= 484,
    VSRAB	= 485,
    VSRAH	= 486,
    VSRAW	= 487,
    VSRB	= 488,
    VSRH	= 489,
    VSRO	= 490,
    VSRW	= 491,
    VSUBCUW	= 492,
    VSUBFP	= 493,
    VSUBSBS	= 494,
    VSUBSHS	= 495,
    VSUBSWS	= 496,
    VSUBUBM	= 497,
    VSUBUBS	= 498,
    VSUBUHM	= 499,
    VSUBUHS	= 500,
    VSUBUWM	= 501,
    VSUBUWS	= 502,
    VSUM2SWS	= 503,
    VSUM4SBS	= 504,
    VSUM4SHS	= 505,
    VSUM4UBS	= 506,
    VSUMSWS	= 507,
    VUPKHPX	= 508,
    VUPKHSB	= 509,
    VUPKHSH	= 510,
    VUPKLPX	= 511,
    VUPKLSB	= 512,
    VUPKLSH	= 513,
    VXOR	= 514,
    V_SET0	= 515,
    XOR	= 516,
    XOR8	= 517,
    XORI	= 518,
    XORI8	= 519,
    XORIS	= 520,
    XORIS8	= 521,
    INSTRUCTION_LIST_END = 522
  };
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Target Instruction Descriptors
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const unsigned ImplicitList1[] = { PPC::CARRY, 0 };
static const unsigned ImplicitList2[] = { PPC::R1, 0 };
static const unsigned ImplicitList3[] = { PPC::CR0, 0 };
static const unsigned ImplicitList4[] = { PPC::CTR, 0 };
static const unsigned ImplicitList5[] = { PPC::CTR8, PPC::RM, 0 };
static const unsigned ImplicitList6[] = { PPC::X0, PPC::X2, PPC::X3, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::F0, PPC::F1, PPC::F2, PPC::F3, PPC::F4, PPC::F5, PPC::F6, PPC::F7, PPC::F8, PPC::F9, PPC::F10, PPC::F11, PPC::F12, PPC::F13, PPC::V0, PPC::V1, PPC::V2, PPC::V3, PPC::V4, PPC::V5, PPC::V6, PPC::V7, PPC::V8, PPC::V9, PPC::V10, PPC::V11, PPC::V12, PPC::V13, PPC::V14, PPC::V15, PPC::V16, PPC::V17, PPC::V18, PPC::V19, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, PPC::CARRY, 0 };
static const unsigned ImplicitList7[] = { PPC::CTR, PPC::RM, 0 };
static const unsigned ImplicitList8[] = { PPC::R0, PPC::R2, PPC::R3, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::F0, PPC::F1, PPC::F2, PPC::F3, PPC::F4, PPC::F5, PPC::F6, PPC::F7, PPC::F8, PPC::F9, PPC::F10, PPC::F11, PPC::F12, PPC::F13, PPC::V0, PPC::V1, PPC::V2, PPC::V3, PPC::V4, PPC::V5, PPC::V6, PPC::V7, PPC::V8, PPC::V9, PPC::V10, PPC::V11, PPC::V12, PPC::V13, PPC::V14, PPC::V15, PPC::V16, PPC::V17, PPC::V18, PPC::V19, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, PPC::CARRY, 0 };
static const unsigned ImplicitList9[] = { PPC::R0, PPC::R3, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::F0, PPC::F1, PPC::F2, PPC::F3, PPC::F4, PPC::F5, PPC::F6, PPC::F7, PPC::F8, PPC::F9, PPC::F10, PPC::F11, PPC::F12, PPC::F13, PPC::V0, PPC::V1, PPC::V2, PPC::V3, PPC::V4, PPC::V5, PPC::V6, PPC::V7, PPC::V8, PPC::V9, PPC::V10, PPC::V11, PPC::V12, PPC::V13, PPC::V14, PPC::V15, PPC::V16, PPC::V17, PPC::V18, PPC::V19, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, PPC::CARRY, 0 };
static const unsigned ImplicitList10[] = { PPC::RM, 0 };
static const unsigned ImplicitList11[] = { PPC::LR, PPC::RM, 0 };
static const unsigned ImplicitList12[] = { PPC::X1, 0 };
static const unsigned ImplicitList13[] = { PPC::CTR8, 0 };
static const unsigned ImplicitList14[] = { PPC::LR, 0 };
static const unsigned ImplicitList15[] = { PPC::LR8, 0 };
static const unsigned ImplicitList16[] = { PPC::CR6, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo8[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo9[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo10[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo11[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo12[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo13[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo14[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo15[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo16[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo17[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0|(1<<MCOI::Predicate), 0, MCOI::OPERAND_UNKNOWN }, { PPC::CRRCRegClassID, 0|(1<<MCOI::Predicate), 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0|(1<<MCOI::Predicate), 0, MCOI::OPERAND_UNKNOWN }, { PPC::CRRCRegClassID, 0|(1<<MCOI::Predicate), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo20[] = { { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo21[] = { { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo22[] = { { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo23[] = { { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo24[] = { { PPC::CRBITRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::CRBITRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::CRBITRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo25[] = { { PPC::CRBITRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo26[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo28[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo30[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo31[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo32[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo33[] = { { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo34[] = { { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo35[] = { { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo36[] = { { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo37[] = { { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo38[] = { { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo39[] = { { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo40[] = { { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo41[] = { { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo42[] = { { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo43[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo44[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo45[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), ((1 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo46[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), ((1 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo47[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo48[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo49[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo50[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo51[] = { { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo52[] = { { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), ((1 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo53[] = { { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo54[] = { { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo55[] = { { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), ((1 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo56[] = { { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo57[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo58[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo59[] = { { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo60[] = { { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo61[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo62[] = { { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo63[] = { { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo64[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo65[] = { { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo66[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo67[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo68[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo69[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo70[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo71[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo72[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo73[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo74[] = { { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo75[] = { { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo76[] = { { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo77[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo78[] = { { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::CRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo79[] = { { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo80[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { PPC::GPRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo81[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { PPC::G8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo82[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { PPC::F8RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo83[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), 0, MCOI::OPERAND_UNKNOWN }, { PPC::F4RCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { 0, 0|(1<<MCOI::LookupPtrRegClass), ((0 << 16) | (1 << MCOI::TIED_TO)), MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo84[] = { { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo85[] = { { PPC::CTRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo86[] = { { PPC::CTRRC8RegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_IMMEDIATE }, };
static const MCOperandInfo OperandInfo87[] = { { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo88[] = { { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo89[] = { { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo90[] = { { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, };
static const MCOperandInfo OperandInfo91[] = { { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };
static const MCOperandInfo OperandInfo92[] = { { PPC::VRRCRegClassID, 0, 0, MCOI::OPERAND_REGISTER }, { -1, 0, 0, MCOI::OPERAND_UNKNOWN }, };

MCInstrDesc PPCInsts[] = {
  { 0,	0,	0,	52,	0,	"PHI", 0|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #0 = PHI
  { 1,	0,	0,	52,	0,	"INLINEASM", 0|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #1 = INLINEASM
  { 2,	1,	0,	52,	0,	"PROLOG_LABEL", 0|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #2 = PROLOG_LABEL
  { 3,	1,	0,	52,	0,	"EH_LABEL", 0|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	52,	0,	"GC_LABEL", 0|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	52,	0,	"KILL", 0|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #5 = KILL
  { 6,	3,	1,	52,	0,	"EXTRACT_SUBREG", 0, 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	52,	0,	"INSERT_SUBREG", 0, 0x0ULL, NULL, NULL, OperandInfo4 },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	52,	0,	"IMPLICIT_DEF", 0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	52,	0,	"SUBREG_TO_REG", 0, 0x0ULL, NULL, NULL, OperandInfo6 },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	52,	0,	"COPY_TO_REGCLASS", 0|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	52,	0,	"DBG_VALUE", 0|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	52,	0,	"REG_SEQUENCE", 0|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	52,	0,	"COPY", 0|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo7 },  // Inst #13 = COPY
  { 14,	3,	1,	14,	0,	"ADD4", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #14 = ADD4
  { 15,	3,	1,	14,	0,	"ADD8", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #15 = ADD8
  { 16,	3,	1,	14,	0,	"ADDC", 0, 0xcULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #16 = ADDC
  { 17,	3,	1,	14,	0,	"ADDC8", 0, 0xcULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #17 = ADDC8
  { 18,	3,	1,	14,	0,	"ADDE", 0, 0x8ULL, ImplicitList1, ImplicitList1, OperandInfo8 },  // Inst #18 = ADDE
  { 19,	3,	1,	14,	0,	"ADDE8", 0, 0x8ULL, ImplicitList1, ImplicitList1, OperandInfo9 },  // Inst #19 = ADDE8
  { 20,	3,	1,	14,	0,	"ADDI", 0, 0x8ULL, NULL, NULL, OperandInfo10 },  // Inst #20 = ADDI
  { 21,	3,	1,	14,	0,	"ADDI8", 0, 0x8ULL, NULL, NULL, OperandInfo11 },  // Inst #21 = ADDI8
  { 22,	3,	1,	14,	0,	"ADDIC", 0, 0xcULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #22 = ADDIC
  { 23,	3,	1,	14,	0,	"ADDIC8", 0, 0x8ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #23 = ADDIC8
  { 24,	3,	1,	14,	0,	"ADDICo", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #24 = ADDICo
  { 25,	3,	1,	14,	0,	"ADDIS", 0, 0x8ULL, NULL, NULL, OperandInfo10 },  // Inst #25 = ADDIS
  { 26,	3,	1,	14,	0,	"ADDIS8", 0, 0x8ULL, NULL, NULL, OperandInfo11 },  // Inst #26 = ADDIS8
  { 27,	2,	1,	14,	0,	"ADDME", 0, 0x8ULL, ImplicitList1, ImplicitList1, OperandInfo12 },  // Inst #27 = ADDME
  { 28,	2,	1,	14,	0,	"ADDME8", 0, 0x8ULL, ImplicitList1, ImplicitList1, OperandInfo13 },  // Inst #28 = ADDME8
  { 29,	2,	1,	14,	0,	"ADDZE", 0, 0x8ULL, ImplicitList1, ImplicitList1, OperandInfo12 },  // Inst #29 = ADDZE
  { 30,	2,	1,	14,	0,	"ADDZE8", 0, 0x8ULL, ImplicitList1, ImplicitList1, OperandInfo13 },  // Inst #30 = ADDZE8
  { 31,	1,	0,	52,	0,	"ADJCALLSTACKDOWN", 0, 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo5 },  // Inst #31 = ADJCALLSTACKDOWN
  { 32,	2,	0,	52,	0,	"ADJCALLSTACKUP", 0, 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo7 },  // Inst #32 = ADJCALLSTACKUP
  { 33,	3,	1,	14,	0,	"AND", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #33 = AND
  { 34,	3,	1,	14,	0,	"AND8", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #34 = AND8
  { 35,	3,	1,	14,	0,	"ANDC", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #35 = ANDC
  { 36,	3,	1,	14,	0,	"ANDC8", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #36 = ANDC8
  { 37,	3,	1,	14,	0,	"ANDISo", 0, 0x8ULL, NULL, ImplicitList3, OperandInfo10 },  // Inst #37 = ANDISo
  { 38,	3,	1,	14,	0,	"ANDISo8", 0, 0x8ULL, NULL, ImplicitList3, OperandInfo11 },  // Inst #38 = ANDISo8
  { 39,	3,	1,	14,	0,	"ANDIo", 0, 0x8ULL, NULL, ImplicitList3, OperandInfo10 },  // Inst #39 = ANDIo
  { 40,	3,	1,	14,	0,	"ANDIo8", 0, 0x8ULL, NULL, ImplicitList3, OperandInfo11 },  // Inst #40 = ANDIo8
  { 41,	5,	1,	52,	0,	"ATOMIC_CMP_SWAP_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo14 },  // Inst #41 = ATOMIC_CMP_SWAP_I16
  { 42,	5,	1,	52,	0,	"ATOMIC_CMP_SWAP_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo14 },  // Inst #42 = ATOMIC_CMP_SWAP_I32
  { 43,	5,	1,	52,	0,	"ATOMIC_CMP_SWAP_I64", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo15 },  // Inst #43 = ATOMIC_CMP_SWAP_I64
  { 44,	5,	1,	52,	0,	"ATOMIC_CMP_SWAP_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo14 },  // Inst #44 = ATOMIC_CMP_SWAP_I8
  { 45,	4,	1,	52,	0,	"ATOMIC_LOAD_ADD_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #45 = ATOMIC_LOAD_ADD_I16
  { 46,	4,	1,	52,	0,	"ATOMIC_LOAD_ADD_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #46 = ATOMIC_LOAD_ADD_I32
  { 47,	4,	1,	52,	0,	"ATOMIC_LOAD_ADD_I64", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #47 = ATOMIC_LOAD_ADD_I64
  { 48,	4,	1,	52,	0,	"ATOMIC_LOAD_ADD_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #48 = ATOMIC_LOAD_ADD_I8
  { 49,	4,	1,	52,	0,	"ATOMIC_LOAD_AND_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #49 = ATOMIC_LOAD_AND_I16
  { 50,	4,	1,	52,	0,	"ATOMIC_LOAD_AND_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #50 = ATOMIC_LOAD_AND_I32
  { 51,	4,	1,	52,	0,	"ATOMIC_LOAD_AND_I64", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #51 = ATOMIC_LOAD_AND_I64
  { 52,	4,	1,	52,	0,	"ATOMIC_LOAD_AND_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #52 = ATOMIC_LOAD_AND_I8
  { 53,	4,	1,	52,	0,	"ATOMIC_LOAD_NAND_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #53 = ATOMIC_LOAD_NAND_I16
  { 54,	4,	1,	52,	0,	"ATOMIC_LOAD_NAND_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #54 = ATOMIC_LOAD_NAND_I32
  { 55,	4,	1,	52,	0,	"ATOMIC_LOAD_NAND_I64", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #55 = ATOMIC_LOAD_NAND_I64
  { 56,	4,	1,	52,	0,	"ATOMIC_LOAD_NAND_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #56 = ATOMIC_LOAD_NAND_I8
  { 57,	4,	1,	52,	0,	"ATOMIC_LOAD_OR_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #57 = ATOMIC_LOAD_OR_I16
  { 58,	4,	1,	52,	0,	"ATOMIC_LOAD_OR_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #58 = ATOMIC_LOAD_OR_I32
  { 59,	4,	1,	52,	0,	"ATOMIC_LOAD_OR_I64", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #59 = ATOMIC_LOAD_OR_I64
  { 60,	4,	1,	52,	0,	"ATOMIC_LOAD_OR_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #60 = ATOMIC_LOAD_OR_I8
  { 61,	4,	1,	52,	0,	"ATOMIC_LOAD_SUB_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #61 = ATOMIC_LOAD_SUB_I16
  { 62,	4,	1,	52,	0,	"ATOMIC_LOAD_SUB_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #62 = ATOMIC_LOAD_SUB_I32
  { 63,	4,	1,	52,	0,	"ATOMIC_LOAD_SUB_I64", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #63 = ATOMIC_LOAD_SUB_I64
  { 64,	4,	1,	52,	0,	"ATOMIC_LOAD_SUB_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #64 = ATOMIC_LOAD_SUB_I8
  { 65,	4,	1,	52,	0,	"ATOMIC_LOAD_XOR_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #65 = ATOMIC_LOAD_XOR_I16
  { 66,	4,	1,	52,	0,	"ATOMIC_LOAD_XOR_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #66 = ATOMIC_LOAD_XOR_I32
  { 67,	4,	1,	52,	0,	"ATOMIC_LOAD_XOR_I64", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #67 = ATOMIC_LOAD_XOR_I64
  { 68,	4,	1,	52,	0,	"ATOMIC_LOAD_XOR_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #68 = ATOMIC_LOAD_XOR_I8
  { 69,	4,	1,	52,	0,	"ATOMIC_SWAP_I16", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #69 = ATOMIC_SWAP_I16
  { 70,	4,	1,	52,	0,	"ATOMIC_SWAP_I32", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #70 = ATOMIC_SWAP_I32
  { 71,	4,	1,	52,	0,	"ATOMIC_SWAP_I64", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo17 },  // Inst #71 = ATOMIC_SWAP_I64
  { 72,	4,	1,	52,	0,	"ATOMIC_SWAP_I8", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList3, OperandInfo16 },  // Inst #72 = ATOMIC_SWAP_I8
  { 73,	1,	0,	0,	0,	"B", 0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x38ULL, NULL, NULL, OperandInfo5 },  // Inst #73 = B
  { 74,	3,	0,	0,	0,	"BCC", 0|(1<<MCID::Branch)|(1<<MCID::Predicable)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, NULL, NULL, OperandInfo18 },  // Inst #74 = BCC
  { 75,	0,	0,	0,	0,	"BCTR", 0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList4, NULL, 0 },  // Inst #75 = BCTR
  { 76,	0,	0,	0,	0,	"BCTR8", 0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList5, NULL, 0 },  // Inst #76 = BCTR8
  { 77,	0,	0,	0,	0,	"BCTRL8_Darwin", 0|(1<<MCID::Call)|(1<<MCID::Variadic), 0x38ULL, ImplicitList5, ImplicitList6, 0 },  // Inst #77 = BCTRL8_Darwin
  { 78,	0,	0,	0,	0,	"BCTRL8_ELF", 0|(1<<MCID::Call)|(1<<MCID::Variadic), 0x38ULL, ImplicitList5, ImplicitList6, 0 },  // Inst #78 = BCTRL8_ELF
  { 79,	0,	0,	0,	0,	"BCTRL_Darwin", 0|(1<<MCID::Call)|(1<<MCID::Variadic), 0x38ULL, ImplicitList7, ImplicitList8, 0 },  // Inst #79 = BCTRL_Darwin
  { 80,	0,	0,	0,	0,	"BCTRL_SVR4", 0|(1<<MCID::Call)|(1<<MCID::Variadic), 0x38ULL, ImplicitList7, ImplicitList9, 0 },  // Inst #80 = BCTRL_SVR4
  { 81,	1,	0,	0,	0,	"BL8_Darwin", 0|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList10, ImplicitList6, OperandInfo5 },  // Inst #81 = BL8_Darwin
  { 82,	1,	0,	0,	0,	"BL8_ELF", 0|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList10, ImplicitList6, OperandInfo5 },  // Inst #82 = BL8_ELF
  { 83,	1,	0,	0,	0,	"BLA8_Darwin", 0|(1<<MCID::Call)|(1<<MCID::Variadic), 0x38ULL, ImplicitList10, ImplicitList6, OperandInfo5 },  // Inst #83 = BLA8_Darwin
  { 84,	1,	0,	0,	0,	"BLA8_ELF", 0|(1<<MCID::Call)|(1<<MCID::Variadic), 0x38ULL, ImplicitList10, ImplicitList6, OperandInfo5 },  // Inst #84 = BLA8_ELF
  { 85,	1,	0,	0,	0,	"BLA_Darwin", 0|(1<<MCID::Call)|(1<<MCID::Variadic), 0x38ULL, ImplicitList10, ImplicitList8, OperandInfo5 },  // Inst #85 = BLA_Darwin
  { 86,	1,	0,	0,	0,	"BLA_SVR4", 0|(1<<MCID::Call)|(1<<MCID::Variadic), 0x38ULL, ImplicitList10, ImplicitList9, OperandInfo5 },  // Inst #86 = BLA_SVR4
  { 87,	2,	0,	0,	0,	"BLR", 0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Predicable)|(1<<MCID::Terminator)|(1<<MCID::Variadic), 0x38ULL, ImplicitList11, NULL, OperandInfo19 },  // Inst #87 = BLR
  { 88,	1,	0,	0,	0,	"BL_Darwin", 0|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList10, ImplicitList8, OperandInfo5 },  // Inst #88 = BL_Darwin
  { 89,	1,	0,	0,	0,	"BL_SVR4", 0|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList10, ImplicitList9, OperandInfo5 },  // Inst #89 = BL_SVR4
  { 90,	3,	1,	11,	0,	"CMPD", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo20 },  // Inst #90 = CMPD
  { 91,	3,	1,	11,	0,	"CMPDI", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo21 },  // Inst #91 = CMPDI
  { 92,	3,	1,	11,	0,	"CMPLD", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo20 },  // Inst #92 = CMPLD
  { 93,	3,	1,	11,	0,	"CMPLDI", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo21 },  // Inst #93 = CMPLDI
  { 94,	3,	1,	11,	0,	"CMPLW", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo22 },  // Inst #94 = CMPLW
  { 95,	3,	1,	11,	0,	"CMPLWI", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo23 },  // Inst #95 = CMPLWI
  { 96,	3,	1,	11,	0,	"CMPW", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo22 },  // Inst #96 = CMPW
  { 97,	3,	1,	11,	0,	"CMPWI", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo23 },  // Inst #97 = CMPWI
  { 98,	2,	1,	14,	0,	"CNTLZD", 0, 0x8ULL, NULL, NULL, OperandInfo13 },  // Inst #98 = CNTLZD
  { 99,	2,	1,	14,	0,	"CNTLZW", 0, 0x8ULL, NULL, NULL, OperandInfo12 },  // Inst #99 = CNTLZW
  { 100,	3,	1,	1,	0,	"CREQV", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #100 = CREQV
  { 101,	3,	1,	1,	0,	"CROR", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #101 = CROR
  { 102,	1,	1,	1,	0,	"CRSET", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #102 = CRSET
  { 103,	2,	0,	30,	0,	"DCBA", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo26 },  // Inst #103 = DCBA
  { 104,	2,	0,	30,	0,	"DCBF", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo26 },  // Inst #104 = DCBF
  { 105,	2,	0,	30,	0,	"DCBI", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo26 },  // Inst #105 = DCBI
  { 106,	2,	0,	30,	0,	"DCBST", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo26 },  // Inst #106 = DCBST
  { 107,	2,	0,	30,	0,	"DCBT", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo26 },  // Inst #107 = DCBT
  { 108,	2,	0,	30,	0,	"DCBTST", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo26 },  // Inst #108 = DCBTST
  { 109,	2,	0,	30,	0,	"DCBZ", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo26 },  // Inst #109 = DCBZ
  { 110,	2,	0,	30,	0,	"DCBZL", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo26 },  // Inst #110 = DCBZL
  { 111,	3,	1,	12,	0,	"DIVD", 0, 0xdULL, NULL, NULL, OperandInfo9 },  // Inst #111 = DIVD
  { 112,	3,	1,	12,	0,	"DIVDU", 0, 0xdULL, NULL, NULL, OperandInfo9 },  // Inst #112 = DIVDU
  { 113,	3,	1,	13,	0,	"DIVW", 0, 0xdULL, NULL, NULL, OperandInfo8 },  // Inst #113 = DIVW
  { 114,	3,	1,	13,	0,	"DIVWU", 0, 0xdULL, NULL, NULL, OperandInfo8 },  // Inst #114 = DIVWU
  { 115,	4,	0,	33,	0,	"DSS", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo27 },  // Inst #115 = DSS
  { 116,	4,	0,	33,	0,	"DSSALL", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo27 },  // Inst #116 = DSSALL
  { 117,	4,	0,	33,	0,	"DST", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #117 = DST
  { 118,	4,	0,	33,	0,	"DST64", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #118 = DST64
  { 119,	4,	0,	33,	0,	"DSTST", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #119 = DSTST
  { 120,	4,	0,	33,	0,	"DSTST64", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #120 = DSTST64
  { 121,	4,	0,	33,	0,	"DSTSTT", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #121 = DSTSTT
  { 122,	4,	0,	33,	0,	"DSTSTT64", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #122 = DSTSTT64
  { 123,	4,	0,	33,	0,	"DSTT", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #123 = DSTT
  { 124,	4,	0,	33,	0,	"DSTT64", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo29 },  // Inst #124 = DSTT64
  { 125,	4,	1,	52,	0,	"DYNALLOC", 0, 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo30 },  // Inst #125 = DYNALLOC
  { 126,	4,	1,	52,	0,	"DYNALLOC8", 0, 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo31 },  // Inst #126 = DYNALLOC8
  { 127,	3,	1,	14,	0,	"EQV", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #127 = EQV
  { 128,	3,	1,	14,	0,	"EQV8", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #128 = EQV8
  { 129,	2,	1,	14,	0,	"EXTSB", 0, 0x8ULL, NULL, NULL, OperandInfo12 },  // Inst #129 = EXTSB
  { 130,	2,	1,	14,	0,	"EXTSB8", 0, 0x8ULL, NULL, NULL, OperandInfo13 },  // Inst #130 = EXTSB8
  { 131,	2,	1,	14,	0,	"EXTSH", 0, 0x8ULL, NULL, NULL, OperandInfo12 },  // Inst #131 = EXTSH
  { 132,	2,	1,	14,	0,	"EXTSH8", 0, 0x8ULL, NULL, NULL, OperandInfo13 },  // Inst #132 = EXTSH8
  { 133,	2,	1,	14,	0,	"EXTSW", 0, 0x8ULL, NULL, NULL, OperandInfo13 },  // Inst #133 = EXTSW
  { 134,	2,	1,	14,	0,	"EXTSW_32", 0, 0x8ULL, NULL, NULL, OperandInfo12 },  // Inst #134 = EXTSW_32
  { 135,	2,	1,	14,	0,	"EXTSW_32_64", 0, 0x8ULL, NULL, NULL, OperandInfo32 },  // Inst #135 = EXTSW_32_64
  { 136,	2,	1,	8,	0,	"FABSD", 0, 0x18ULL, NULL, NULL, OperandInfo33 },  // Inst #136 = FABSD
  { 137,	2,	1,	8,	0,	"FABSS", 0, 0x18ULL, NULL, NULL, OperandInfo34 },  // Inst #137 = FABSS
  { 138,	3,	1,	8,	0,	"FADD", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo35 },  // Inst #138 = FADD
  { 139,	3,	1,	8,	0,	"FADDS", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo36 },  // Inst #139 = FADDS
  { 140,	3,	1,	8,	0,	"FADDrtz", 0, 0x1aULL, ImplicitList10, NULL, OperandInfo35 },  // Inst #140 = FADDrtz
  { 141,	2,	1,	8,	0,	"FCFID", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo33 },  // Inst #141 = FCFID
  { 142,	3,	1,	4,	0,	"FCMPUD", 0|(1<<MCID::UnmodeledSideEffects), 0x18ULL, NULL, NULL, OperandInfo37 },  // Inst #142 = FCMPUD
  { 143,	3,	1,	4,	0,	"FCMPUS", 0|(1<<MCID::UnmodeledSideEffects), 0x18ULL, NULL, NULL, OperandInfo38 },  // Inst #143 = FCMPUS
  { 144,	2,	1,	8,	0,	"FCTIDZ", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo33 },  // Inst #144 = FCTIDZ
  { 145,	2,	1,	8,	0,	"FCTIWZ", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo33 },  // Inst #145 = FCTIWZ
  { 146,	3,	1,	5,	0,	"FDIV", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo35 },  // Inst #146 = FDIV
  { 147,	3,	1,	6,	0,	"FDIVS", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo36 },  // Inst #147 = FDIVS
  { 148,	4,	1,	7,	0,	"FMADD", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo39 },  // Inst #148 = FMADD
  { 149,	4,	1,	8,	0,	"FMADDS", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo40 },  // Inst #149 = FMADDS
  { 150,	2,	1,	8,	0,	"FMR", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #150 = FMR
  { 151,	4,	1,	7,	0,	"FMSUB", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo39 },  // Inst #151 = FMSUB
  { 152,	4,	1,	8,	0,	"FMSUBS", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo40 },  // Inst #152 = FMSUBS
  { 153,	3,	1,	7,	0,	"FMUL", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo35 },  // Inst #153 = FMUL
  { 154,	3,	1,	8,	0,	"FMULS", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo36 },  // Inst #154 = FMULS
  { 155,	2,	1,	8,	0,	"FNABSD", 0, 0x18ULL, NULL, NULL, OperandInfo33 },  // Inst #155 = FNABSD
  { 156,	2,	1,	8,	0,	"FNABSS", 0, 0x18ULL, NULL, NULL, OperandInfo34 },  // Inst #156 = FNABSS
  { 157,	2,	1,	8,	0,	"FNEGD", 0, 0x18ULL, NULL, NULL, OperandInfo33 },  // Inst #157 = FNEGD
  { 158,	2,	1,	8,	0,	"FNEGS", 0, 0x18ULL, NULL, NULL, OperandInfo34 },  // Inst #158 = FNEGS
  { 159,	4,	1,	7,	0,	"FNMADD", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo39 },  // Inst #159 = FNMADD
  { 160,	4,	1,	8,	0,	"FNMADDS", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo40 },  // Inst #160 = FNMADDS
  { 161,	4,	1,	7,	0,	"FNMSUB", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo39 },  // Inst #161 = FNMSUB
  { 162,	4,	1,	8,	0,	"FNMSUBS", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo40 },  // Inst #162 = FNMSUBS
  { 163,	2,	1,	8,	0,	"FRSP", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo41 },  // Inst #163 = FRSP
  { 164,	4,	1,	8,	0,	"FSELD", 0, 0x18ULL, NULL, NULL, OperandInfo39 },  // Inst #164 = FSELD
  { 165,	4,	1,	8,	0,	"FSELS", 0, 0x18ULL, NULL, NULL, OperandInfo42 },  // Inst #165 = FSELS
  { 166,	2,	1,	10,	0,	"FSQRT", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo33 },  // Inst #166 = FSQRT
  { 167,	2,	1,	10,	0,	"FSQRTS", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo34 },  // Inst #167 = FSQRTS
  { 168,	3,	1,	8,	0,	"FSUB", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo35 },  // Inst #168 = FSUB
  { 169,	3,	1,	8,	0,	"FSUBS", 0, 0x18ULL, ImplicitList10, NULL, OperandInfo36 },  // Inst #169 = FSUBS
  { 170,	3,	1,	14,	0,	"LA", 0, 0x8ULL, NULL, NULL, OperandInfo10 },  // Inst #170 = LA
  { 171,	3,	1,	33,	0,	"LBZ", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo43 },  // Inst #171 = LBZ
  { 172,	3,	1,	33,	0,	"LBZ8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo44 },  // Inst #172 = LBZ8
  { 173,	4,	2,	33,	0,	"LBZU", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo45 },  // Inst #173 = LBZU
  { 174,	4,	2,	33,	0,	"LBZU8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo46 },  // Inst #174 = LBZU8
  { 175,	3,	1,	33,	0,	"LBZX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo47 },  // Inst #175 = LBZX
  { 176,	3,	1,	33,	0,	"LBZX8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo48 },  // Inst #176 = LBZX8
  { 177,	3,	1,	35,	0,	"LD", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo44 },  // Inst #177 = LD
  { 178,	3,	1,	36,	0,	"LDARX", 0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo48 },  // Inst #178 = LDARX
  { 179,	4,	2,	35,	0,	"LDU", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo46 },  // Inst #179 = LDU
  { 180,	3,	1,	35,	0,	"LDX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo48 },  // Inst #180 = LDX
  { 181,	1,	0,	35,	0,	"LDinto_toc", 0|(1<<MCID::FoldableAsLoad), 0x10ULL, NULL, NULL, OperandInfo49 },  // Inst #181 = LDinto_toc
  { 182,	3,	1,	52,	0,	"LDtoc", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo50 },  // Inst #182 = LDtoc
  { 183,	0,	0,	35,	0,	"LDtoc_restore", 0|(1<<MCID::FoldableAsLoad), 0x10ULL, NULL, NULL, 0 },  // Inst #183 = LDtoc_restore
  { 184,	3,	1,	37,	0,	"LFD", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo51 },  // Inst #184 = LFD
  { 185,	4,	2,	37,	0,	"LFDU", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo52 },  // Inst #185 = LFDU
  { 186,	3,	1,	38,	0,	"LFDX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo53 },  // Inst #186 = LFDX
  { 187,	3,	1,	38,	0,	"LFS", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo54 },  // Inst #187 = LFS
  { 188,	4,	2,	38,	0,	"LFSU", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo55 },  // Inst #188 = LFSU
  { 189,	3,	1,	38,	0,	"LFSX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo56 },  // Inst #189 = LFSX
  { 190,	3,	1,	39,	0,	"LHA", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x14ULL, NULL, NULL, OperandInfo43 },  // Inst #190 = LHA
  { 191,	3,	1,	39,	0,	"LHA8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x14ULL, NULL, NULL, OperandInfo44 },  // Inst #191 = LHA8
  { 192,	4,	2,	33,	0,	"LHAU", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo45 },  // Inst #192 = LHAU
  { 193,	4,	2,	33,	0,	"LHAU8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo46 },  // Inst #193 = LHAU8
  { 194,	3,	1,	39,	0,	"LHAX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x14ULL, NULL, NULL, OperandInfo47 },  // Inst #194 = LHAX
  { 195,	3,	1,	39,	0,	"LHAX8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x14ULL, NULL, NULL, OperandInfo48 },  // Inst #195 = LHAX8
  { 196,	3,	1,	33,	0,	"LHBRX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo47 },  // Inst #196 = LHBRX
  { 197,	3,	1,	33,	0,	"LHZ", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo43 },  // Inst #197 = LHZ
  { 198,	3,	1,	33,	0,	"LHZ8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo44 },  // Inst #198 = LHZ8
  { 199,	4,	2,	33,	0,	"LHZU", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo45 },  // Inst #199 = LHZU
  { 200,	4,	2,	33,	0,	"LHZU8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo46 },  // Inst #200 = LHZU8
  { 201,	3,	1,	33,	0,	"LHZX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo47 },  // Inst #201 = LHZX
  { 202,	3,	1,	33,	0,	"LHZX8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo48 },  // Inst #202 = LHZX8
  { 203,	2,	1,	14,	0,	"LI", 0|(1<<MCID::Rematerializable), 0x8ULL, NULL, NULL, OperandInfo57 },  // Inst #203 = LI
  { 204,	2,	1,	14,	0,	"LI8", 0, 0x8ULL, NULL, NULL, OperandInfo58 },  // Inst #204 = LI8
  { 205,	2,	1,	14,	0,	"LIS", 0|(1<<MCID::Rematerializable), 0x8ULL, NULL, NULL, OperandInfo57 },  // Inst #205 = LIS
  { 206,	2,	1,	14,	0,	"LIS8", 0, 0x8ULL, NULL, NULL, OperandInfo58 },  // Inst #206 = LIS8
  { 207,	3,	1,	33,	0,	"LVEBX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo59 },  // Inst #207 = LVEBX
  { 208,	3,	1,	33,	0,	"LVEHX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo59 },  // Inst #208 = LVEHX
  { 209,	3,	1,	33,	0,	"LVEWX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo59 },  // Inst #209 = LVEWX
  { 210,	3,	1,	33,	0,	"LVSL", 0, 0x10ULL, NULL, NULL, OperandInfo59 },  // Inst #210 = LVSL
  { 211,	3,	1,	33,	0,	"LVSR", 0, 0x10ULL, NULL, NULL, OperandInfo59 },  // Inst #211 = LVSR
  { 212,	3,	1,	33,	0,	"LVX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo59 },  // Inst #212 = LVX
  { 213,	3,	1,	33,	0,	"LVXL", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo59 },  // Inst #213 = LVXL
  { 214,	3,	1,	42,	0,	"LWA", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x14ULL, NULL, NULL, OperandInfo44 },  // Inst #214 = LWA
  { 215,	3,	1,	43,	0,	"LWARX", 0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo47 },  // Inst #215 = LWARX
  { 216,	3,	1,	39,	0,	"LWAX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x14ULL, NULL, NULL, OperandInfo48 },  // Inst #216 = LWAX
  { 217,	3,	1,	33,	0,	"LWBRX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo47 },  // Inst #217 = LWBRX
  { 218,	3,	1,	33,	0,	"LWZ", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo43 },  // Inst #218 = LWZ
  { 219,	3,	1,	33,	0,	"LWZ8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo44 },  // Inst #219 = LWZ8
  { 220,	4,	2,	33,	0,	"LWZU", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo45 },  // Inst #220 = LWZU
  { 221,	4,	2,	33,	0,	"LWZU8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo46 },  // Inst #221 = LWZU8
  { 222,	3,	1,	33,	0,	"LWZX", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo47 },  // Inst #222 = LWZX
  { 223,	3,	1,	33,	0,	"LWZX8", 0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x10ULL, NULL, NULL, OperandInfo48 },  // Inst #223 = LWZX8
  { 224,	2,	1,	2,	0,	"MCRF", 0|(1<<MCID::UnmodeledSideEffects), 0x21ULL, NULL, NULL, OperandInfo60 },  // Inst #224 = MCRF
  { 225,	1,	1,	54,	0,	"MFCR", 0|(1<<MCID::UnmodeledSideEffects), 0x20ULL, NULL, NULL, OperandInfo61 },  // Inst #225 = MFCR
  { 226,	2,	1,	54,	0,	"MFCRpseud", 0|(1<<MCID::UnmodeledSideEffects), 0x20ULL, NULL, NULL, OperandInfo57 },  // Inst #226 = MFCRpseud
  { 227,	1,	1,	56,	0,	"MFCTR", 0|(1<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList4, NULL, OperandInfo61 },  // Inst #227 = MFCTR
  { 228,	1,	1,	56,	0,	"MFCTR8", 0|(1<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList13, NULL, OperandInfo49 },  // Inst #228 = MFCTR8
  { 229,	1,	1,	15,	0,	"MFFS", 0, 0x1aULL, ImplicitList10, NULL, OperandInfo62 },  // Inst #229 = MFFS
  { 230,	1,	1,	56,	0,	"MFLR", 0|(1<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList14, NULL, OperandInfo61 },  // Inst #230 = MFLR
  { 231,	1,	1,	56,	0,	"MFLR8", 0|(1<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList15, NULL, OperandInfo49 },  // Inst #231 = MFLR8
  { 232,	2,	1,	54,	0,	"MFOCRF", 0|(1<<MCID::UnmodeledSideEffects), 0x21ULL, NULL, NULL, OperandInfo57 },  // Inst #232 = MFOCRF
  { 233,	1,	1,	14,	0,	"MFVRSAVE", 0|(1<<MCID::UnmodeledSideEffects), 0x9ULL, NULL, NULL, OperandInfo61 },  // Inst #233 = MFVRSAVE
  { 234,	1,	1,	33,	0,	"MFVSCR", 0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo63 },  // Inst #234 = MFVSCR
  { 235,	2,	0,	3,	0,	"MTCRF", 0|(1<<MCID::UnmodeledSideEffects), 0x20ULL, NULL, NULL, OperandInfo64 },  // Inst #235 = MTCRF
  { 236,	1,	0,	60,	0,	"MTCTR", 0, 0x9ULL, NULL, ImplicitList4, OperandInfo61 },  // Inst #236 = MTCTR
  { 237,	1,	0,	60,	0,	"MTCTR8", 0, 0x9ULL, NULL, ImplicitList13, OperandInfo49 },  // Inst #237 = MTCTR8
  { 238,	1,	0,	17,	0,	"MTFSB0", 0, 0x1aULL, ImplicitList10, ImplicitList10, OperandInfo5 },  // Inst #238 = MTFSB0
  { 239,	1,	0,	17,	0,	"MTFSB1", 0, 0x1aULL, ImplicitList10, ImplicitList10, OperandInfo5 },  // Inst #239 = MTFSB1
  { 240,	4,	1,	17,	0,	"MTFSF", 0, 0x1aULL, ImplicitList10, ImplicitList10, OperandInfo65 },  // Inst #240 = MTFSF
  { 241,	1,	0,	60,	0,	"MTLR", 0|(1<<MCID::UnmodeledSideEffects), 0x9ULL, NULL, ImplicitList14, OperandInfo61 },  // Inst #241 = MTLR
  { 242,	1,	0,	60,	0,	"MTLR8", 0|(1<<MCID::UnmodeledSideEffects), 0x9ULL, NULL, ImplicitList15, OperandInfo49 },  // Inst #242 = MTLR8
  { 243,	1,	0,	14,	0,	"MTVRSAVE", 0|(1<<MCID::UnmodeledSideEffects), 0xaULL, NULL, NULL, OperandInfo61 },  // Inst #243 = MTVRSAVE
  { 244,	1,	0,	33,	0,	"MTVSCR", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo63 },  // Inst #244 = MTVSCR
  { 245,	3,	1,	20,	0,	"MULHD", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #245 = MULHD
  { 246,	3,	1,	21,	0,	"MULHDU", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #246 = MULHDU
  { 247,	3,	1,	20,	0,	"MULHW", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #247 = MULHW
  { 248,	3,	1,	21,	0,	"MULHWU", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #248 = MULHWU
  { 249,	3,	1,	19,	0,	"MULLD", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #249 = MULLD
  { 250,	3,	1,	22,	0,	"MULLI", 0, 0x8ULL, NULL, NULL, OperandInfo10 },  // Inst #250 = MULLI
  { 251,	3,	1,	20,	0,	"MULLW", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #251 = MULLW
  { 252,	0,	0,	52,	0,	"MovePCtoLR", 0|(1<<MCID::UnmodeledSideEffects), 0x38ULL, NULL, ImplicitList14, 0 },  // Inst #252 = MovePCtoLR
  { 253,	0,	0,	52,	0,	"MovePCtoLR8", 0|(1<<MCID::UnmodeledSideEffects), 0x38ULL, NULL, ImplicitList15, 0 },  // Inst #253 = MovePCtoLR8
  { 254,	3,	1,	14,	0,	"NAND", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #254 = NAND
  { 255,	3,	1,	14,	0,	"NAND8", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #255 = NAND8
  { 256,	2,	1,	14,	0,	"NEG", 0, 0x8ULL, NULL, NULL, OperandInfo12 },  // Inst #256 = NEG
  { 257,	2,	1,	14,	0,	"NEG8", 0, 0x8ULL, NULL, NULL, OperandInfo13 },  // Inst #257 = NEG8
  { 258,	0,	0,	14,	0,	"NOP", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, 0 },  // Inst #258 = NOP
  { 259,	3,	1,	14,	0,	"NOR", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #259 = NOR
  { 260,	3,	1,	14,	0,	"NOR8", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #260 = NOR8
  { 261,	3,	1,	14,	0,	"OR", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #261 = OR
  { 262,	3,	1,	14,	0,	"OR4To8", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo66 },  // Inst #262 = OR4To8
  { 263,	3,	1,	14,	0,	"OR8", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #263 = OR8
  { 264,	3,	1,	14,	0,	"OR8To4", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo67 },  // Inst #264 = OR8To4
  { 265,	3,	1,	14,	0,	"ORC", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #265 = ORC
  { 266,	3,	1,	14,	0,	"ORC8", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #266 = ORC8
  { 267,	3,	1,	14,	0,	"ORI", 0, 0x8ULL, NULL, NULL, OperandInfo10 },  // Inst #267 = ORI
  { 268,	3,	1,	14,	0,	"ORI8", 0, 0x8ULL, NULL, NULL, OperandInfo11 },  // Inst #268 = ORI8
  { 269,	3,	1,	14,	0,	"ORIS", 0, 0x8ULL, NULL, NULL, OperandInfo10 },  // Inst #269 = ORIS
  { 270,	3,	1,	14,	0,	"ORIS8", 0, 0x8ULL, NULL, NULL, OperandInfo11 },  // Inst #270 = ORIS8
  { 271,	4,	1,	25,	0,	"RLDCL", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo68 },  // Inst #271 = RLDCL
  { 272,	4,	1,	25,	0,	"RLDICL", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo69 },  // Inst #272 = RLDICL
  { 273,	4,	1,	25,	0,	"RLDICR", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo69 },  // Inst #273 = RLDICR
  { 274,	5,	1,	25,	0,	"RLDIMI", 0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo70 },  // Inst #274 = RLDIMI
  { 275,	6,	1,	24,	0,	"RLWIMI", 0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0xcULL, NULL, NULL, OperandInfo71 },  // Inst #275 = RLWIMI
  { 276,	5,	1,	14,	0,	"RLWINM", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo72 },  // Inst #276 = RLWINM
  { 277,	5,	1,	14,	0,	"RLWINMo", 0|(1<<MCID::UnmodeledSideEffects), 0xcULL, NULL, ImplicitList3, OperandInfo72 },  // Inst #277 = RLWINMo
  { 278,	5,	1,	14,	0,	"RLWNM", 0|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo73 },  // Inst #278 = RLWNM
  { 279,	5,	1,	52,	0,	"SELECT_CC_F4", 0|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo74 },  // Inst #279 = SELECT_CC_F4
  { 280,	5,	1,	52,	0,	"SELECT_CC_F8", 0|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo75 },  // Inst #280 = SELECT_CC_F8
  { 281,	5,	1,	52,	0,	"SELECT_CC_I4", 0|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo76 },  // Inst #281 = SELECT_CC_I4
  { 282,	5,	1,	52,	0,	"SELECT_CC_I8", 0|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo77 },  // Inst #282 = SELECT_CC_I8
  { 283,	5,	1,	52,	0,	"SELECT_CC_VRRC", 0|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo78 },  // Inst #283 = SELECT_CC_VRRC
  { 284,	3,	1,	25,	0,	"SLD", 0, 0x8ULL, NULL, NULL, OperandInfo79 },  // Inst #284 = SLD
  { 285,	3,	1,	14,	0,	"SLW", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #285 = SLW
  { 286,	3,	0,	52,	0,	"SPILL_CR", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo43 },  // Inst #286 = SPILL_CR
  { 287,	3,	1,	25,	0,	"SRAD", 0, 0x8ULL, NULL, ImplicitList1, OperandInfo79 },  // Inst #287 = SRAD
  { 288,	3,	1,	25,	0,	"SRADI", 0, 0x8ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #288 = SRADI
  { 289,	3,	1,	26,	0,	"SRAW", 0, 0x8ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #289 = SRAW
  { 290,	3,	1,	26,	0,	"SRAWI", 0, 0x8ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #290 = SRAWI
  { 291,	3,	1,	25,	0,	"SRD", 0, 0x8ULL, NULL, NULL, OperandInfo79 },  // Inst #291 = SRD
  { 292,	3,	1,	14,	0,	"SRW", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #292 = SRW
  { 293,	3,	0,	33,	0,	"STB", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo43 },  // Inst #293 = STB
  { 294,	3,	0,	33,	0,	"STB8", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo44 },  // Inst #294 = STB8
  { 295,	4,	1,	33,	0,	"STBU", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo80 },  // Inst #295 = STBU
  { 296,	4,	1,	33,	0,	"STBU8", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo81 },  // Inst #296 = STBU8
  { 297,	3,	0,	33,	0,	"STBX", 0|(1<<MCID::MayStore), 0x14ULL, NULL, NULL, OperandInfo47 },  // Inst #297 = STBX
  { 298,	3,	0,	33,	0,	"STBX8", 0|(1<<MCID::MayStore), 0x14ULL, NULL, NULL, OperandInfo48 },  // Inst #298 = STBX8
  { 299,	3,	0,	46,	0,	"STD", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo44 },  // Inst #299 = STD
  { 300,	3,	0,	47,	0,	"STDCX", 0|(1<<MCID::MayStore), 0x0ULL, NULL, ImplicitList3, OperandInfo48 },  // Inst #300 = STDCX
  { 301,	4,	1,	46,	0,	"STDU", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo81 },  // Inst #301 = STDU
  { 302,	3,	0,	46,	0,	"STDUX", 0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo48 },  // Inst #302 = STDUX
  { 303,	3,	0,	46,	0,	"STDX", 0|(1<<MCID::MayStore), 0x14ULL, NULL, NULL, OperandInfo48 },  // Inst #303 = STDX
  { 304,	3,	0,	46,	0,	"STDX_32", 0|(1<<MCID::MayStore), 0x14ULL, NULL, NULL, OperandInfo47 },  // Inst #304 = STDX_32
  { 305,	3,	0,	46,	0,	"STD_32", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo43 },  // Inst #305 = STD_32
  { 306,	3,	0,	51,	0,	"STFD", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo51 },  // Inst #306 = STFD
  { 307,	4,	1,	33,	0,	"STFDU", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo82 },  // Inst #307 = STFDU
  { 308,	3,	0,	51,	0,	"STFDX", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo53 },  // Inst #308 = STFDX
  { 309,	3,	0,	51,	0,	"STFIWX", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo53 },  // Inst #309 = STFIWX
  { 310,	3,	0,	51,	0,	"STFS", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo54 },  // Inst #310 = STFS
  { 311,	4,	1,	33,	0,	"STFSU", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo83 },  // Inst #311 = STFSU
  { 312,	3,	0,	51,	0,	"STFSX", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo56 },  // Inst #312 = STFSX
  { 313,	3,	0,	33,	0,	"STH", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo43 },  // Inst #313 = STH
  { 314,	3,	0,	33,	0,	"STH8", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo44 },  // Inst #314 = STH8
  { 315,	3,	0,	33,	0,	"STHBRX", 0|(1<<MCID::MayStore), 0x14ULL, NULL, NULL, OperandInfo47 },  // Inst #315 = STHBRX
  { 316,	4,	1,	33,	0,	"STHU", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo80 },  // Inst #316 = STHU
  { 317,	4,	1,	33,	0,	"STHU8", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo81 },  // Inst #317 = STHU8
  { 318,	3,	0,	33,	0,	"STHX", 0|(1<<MCID::MayStore), 0x14ULL, NULL, NULL, OperandInfo47 },  // Inst #318 = STHX
  { 319,	3,	0,	33,	0,	"STHX8", 0|(1<<MCID::MayStore), 0x14ULL, NULL, NULL, OperandInfo48 },  // Inst #319 = STHX8
  { 320,	3,	0,	33,	0,	"STVEBX", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo59 },  // Inst #320 = STVEBX
  { 321,	3,	0,	33,	0,	"STVEHX", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo59 },  // Inst #321 = STVEHX
  { 322,	3,	0,	33,	0,	"STVEWX", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo59 },  // Inst #322 = STVEWX
  { 323,	3,	0,	33,	0,	"STVX", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo59 },  // Inst #323 = STVX
  { 324,	3,	0,	33,	0,	"STVXL", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo59 },  // Inst #324 = STVXL
  { 325,	3,	0,	33,	0,	"STW", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo43 },  // Inst #325 = STW
  { 326,	3,	0,	33,	0,	"STW8", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo44 },  // Inst #326 = STW8
  { 327,	3,	0,	33,	0,	"STWBRX", 0|(1<<MCID::MayStore), 0x14ULL, NULL, NULL, OperandInfo47 },  // Inst #327 = STWBRX
  { 328,	3,	0,	49,	0,	"STWCX", 0|(1<<MCID::MayStore), 0x0ULL, NULL, ImplicitList3, OperandInfo47 },  // Inst #328 = STWCX
  { 329,	4,	1,	33,	0,	"STWU", 0|(1<<MCID::MayStore), 0x10ULL, NULL, NULL, OperandInfo80 },  // Inst #329 = STWU
  { 330,	3,	0,	33,	0,	"STWUX", 0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10ULL, NULL, NULL, OperandInfo8 },  // Inst #330 = STWUX
  { 331,	3,	0,	33,	0,	"STWX", 0|(1<<MCID::MayStore), 0x14ULL, NULL, NULL, OperandInfo47 },  // Inst #331 = STWX
  { 332,	3,	0,	33,	0,	"STWX8", 0|(1<<MCID::MayStore), 0x14ULL, NULL, NULL, OperandInfo48 },  // Inst #332 = STWX8
  { 333,	3,	1,	14,	0,	"SUBF", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #333 = SUBF
  { 334,	3,	1,	14,	0,	"SUBF8", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #334 = SUBF8
  { 335,	3,	1,	14,	0,	"SUBFC", 0, 0xcULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #335 = SUBFC
  { 336,	3,	1,	14,	0,	"SUBFC8", 0, 0xcULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #336 = SUBFC8
  { 337,	3,	1,	14,	0,	"SUBFE", 0, 0x8ULL, ImplicitList1, ImplicitList1, OperandInfo8 },  // Inst #337 = SUBFE
  { 338,	3,	1,	14,	0,	"SUBFE8", 0, 0x8ULL, ImplicitList1, ImplicitList1, OperandInfo9 },  // Inst #338 = SUBFE8
  { 339,	3,	1,	14,	0,	"SUBFIC", 0, 0x8ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #339 = SUBFIC
  { 340,	3,	1,	14,	0,	"SUBFIC8", 0, 0x8ULL, NULL, ImplicitList1, OperandInfo11 },  // Inst #340 = SUBFIC8
  { 341,	2,	1,	14,	0,	"SUBFME", 0, 0x8ULL, ImplicitList1, ImplicitList1, OperandInfo12 },  // Inst #341 = SUBFME
  { 342,	2,	1,	14,	0,	"SUBFME8", 0, 0x8ULL, ImplicitList1, ImplicitList1, OperandInfo13 },  // Inst #342 = SUBFME8
  { 343,	2,	1,	14,	0,	"SUBFZE", 0, 0x8ULL, ImplicitList1, ImplicitList1, OperandInfo12 },  // Inst #343 = SUBFZE
  { 344,	2,	1,	14,	0,	"SUBFZE8", 0, 0x8ULL, ImplicitList1, ImplicitList1, OperandInfo13 },  // Inst #344 = SUBFZE8
  { 345,	0,	0,	50,	0,	"SYNC", 0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #345 = SYNC
  { 346,	1,	0,	0,	0,	"TAILB", 0|(1<<MCID::Return)|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList10, NULL, OperandInfo5 },  // Inst #346 = TAILB
  { 347,	1,	0,	0,	0,	"TAILB8", 0|(1<<MCID::Return)|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList10, NULL, OperandInfo5 },  // Inst #347 = TAILB8
  { 348,	1,	0,	0,	0,	"TAILBA", 0|(1<<MCID::Return)|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList10, NULL, OperandInfo5 },  // Inst #348 = TAILBA
  { 349,	1,	0,	0,	0,	"TAILBA8", 0|(1<<MCID::Return)|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList10, NULL, OperandInfo5 },  // Inst #349 = TAILBA8
  { 350,	0,	0,	0,	0,	"TAILBCTR", 0|(1<<MCID::Return)|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, NULL, 0 },  // Inst #350 = TAILBCTR
  { 351,	0,	0,	0,	0,	"TAILBCTR8", 0|(1<<MCID::Return)|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList5, NULL, 0 },  // Inst #351 = TAILBCTR8
  { 352,	2,	0,	52,	0,	"TCRETURNai", 0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::Variadic), 0x0ULL, ImplicitList10, NULL, OperandInfo84 },  // Inst #352 = TCRETURNai
  { 353,	2,	0,	52,	0,	"TCRETURNai8", 0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::Variadic), 0x0ULL, ImplicitList10, NULL, OperandInfo84 },  // Inst #353 = TCRETURNai8
  { 354,	2,	0,	52,	0,	"TCRETURNdi", 0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, NULL, OperandInfo84 },  // Inst #354 = TCRETURNdi
  { 355,	2,	0,	52,	0,	"TCRETURNdi8", 0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, NULL, OperandInfo84 },  // Inst #355 = TCRETURNdi8
  { 356,	2,	0,	52,	0,	"TCRETURNri", 0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, NULL, OperandInfo85 },  // Inst #356 = TCRETURNri
  { 357,	2,	0,	52,	0,	"TCRETURNri8", 0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, NULL, OperandInfo86 },  // Inst #357 = TCRETURNri8
  { 358,	0,	0,	33,	0,	"TRAP", 0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #358 = TRAP
  { 359,	2,	1,	52,	0,	"UPDATE_VRSAVE", 0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #359 = UPDATE_VRSAVE
  { 360,	3,	1,	67,	0,	"VADDCUW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #360 = VADDCUW
  { 361,	3,	1,	67,	0,	"VADDFP", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #361 = VADDFP
  { 362,	3,	1,	67,	0,	"VADDSBS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #362 = VADDSBS
  { 363,	3,	1,	67,	0,	"VADDSHS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #363 = VADDSHS
  { 364,	3,	1,	67,	0,	"VADDSWS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #364 = VADDSWS
  { 365,	3,	1,	70,	0,	"VADDUBM", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #365 = VADDUBM
  { 366,	3,	1,	67,	0,	"VADDUBS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #366 = VADDUBS
  { 367,	3,	1,	70,	0,	"VADDUHM", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #367 = VADDUHM
  { 368,	3,	1,	67,	0,	"VADDUHS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #368 = VADDUHS
  { 369,	3,	1,	70,	0,	"VADDUWM", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #369 = VADDUWM
  { 370,	3,	1,	67,	0,	"VADDUWS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #370 = VADDUWS
  { 371,	3,	1,	67,	0,	"VAND", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #371 = VAND
  { 372,	3,	1,	67,	0,	"VANDC", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #372 = VANDC
  { 373,	3,	1,	67,	0,	"VAVGSB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #373 = VAVGSB
  { 374,	3,	1,	67,	0,	"VAVGSH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #374 = VAVGSH
  { 375,	3,	1,	67,	0,	"VAVGSW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #375 = VAVGSW
  { 376,	3,	1,	67,	0,	"VAVGUB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #376 = VAVGUB
  { 377,	3,	1,	67,	0,	"VAVGUH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #377 = VAVGUH
  { 378,	3,	1,	67,	0,	"VAVGUW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #378 = VAVGUW
  { 379,	3,	1,	67,	0,	"VCFSX", 0, 0x28ULL, NULL, NULL, OperandInfo88 },  // Inst #379 = VCFSX
  { 380,	3,	1,	67,	0,	"VCFUX", 0, 0x28ULL, NULL, NULL, OperandInfo88 },  // Inst #380 = VCFUX
  { 381,	3,	1,	68,	0,	"VCMPBFP", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #381 = VCMPBFP
  { 382,	3,	1,	68,	0,	"VCMPBFPo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #382 = VCMPBFPo
  { 383,	3,	1,	68,	0,	"VCMPEQFP", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #383 = VCMPEQFP
  { 384,	3,	1,	68,	0,	"VCMPEQFPo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #384 = VCMPEQFPo
  { 385,	3,	1,	68,	0,	"VCMPEQUB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #385 = VCMPEQUB
  { 386,	3,	1,	68,	0,	"VCMPEQUBo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #386 = VCMPEQUBo
  { 387,	3,	1,	68,	0,	"VCMPEQUH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #387 = VCMPEQUH
  { 388,	3,	1,	68,	0,	"VCMPEQUHo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #388 = VCMPEQUHo
  { 389,	3,	1,	68,	0,	"VCMPEQUW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #389 = VCMPEQUW
  { 390,	3,	1,	68,	0,	"VCMPEQUWo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #390 = VCMPEQUWo
  { 391,	3,	1,	68,	0,	"VCMPGEFP", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #391 = VCMPGEFP
  { 392,	3,	1,	68,	0,	"VCMPGEFPo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #392 = VCMPGEFPo
  { 393,	3,	1,	68,	0,	"VCMPGTFP", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #393 = VCMPGTFP
  { 394,	3,	1,	68,	0,	"VCMPGTFPo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #394 = VCMPGTFPo
  { 395,	3,	1,	68,	0,	"VCMPGTSB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #395 = VCMPGTSB
  { 396,	3,	1,	68,	0,	"VCMPGTSBo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #396 = VCMPGTSBo
  { 397,	3,	1,	68,	0,	"VCMPGTSH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #397 = VCMPGTSH
  { 398,	3,	1,	68,	0,	"VCMPGTSHo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #398 = VCMPGTSHo
  { 399,	3,	1,	68,	0,	"VCMPGTSW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #399 = VCMPGTSW
  { 400,	3,	1,	68,	0,	"VCMPGTSWo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #400 = VCMPGTSWo
  { 401,	3,	1,	68,	0,	"VCMPGTUB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #401 = VCMPGTUB
  { 402,	3,	1,	68,	0,	"VCMPGTUBo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #402 = VCMPGTUBo
  { 403,	3,	1,	68,	0,	"VCMPGTUH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #403 = VCMPGTUH
  { 404,	3,	1,	68,	0,	"VCMPGTUHo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #404 = VCMPGTUHo
  { 405,	3,	1,	68,	0,	"VCMPGTUW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #405 = VCMPGTUW
  { 406,	3,	1,	68,	0,	"VCMPGTUWo", 0, 0x28ULL, NULL, ImplicitList16, OperandInfo87 },  // Inst #406 = VCMPGTUWo
  { 407,	3,	1,	67,	0,	"VCTSXS", 0, 0x28ULL, NULL, NULL, OperandInfo88 },  // Inst #407 = VCTSXS
  { 408,	3,	1,	67,	0,	"VCTUXS", 0, 0x28ULL, NULL, NULL, OperandInfo88 },  // Inst #408 = VCTUXS
  { 409,	2,	1,	67,	0,	"VEXPTEFP", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #409 = VEXPTEFP
  { 410,	2,	1,	67,	0,	"VLOGEFP", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #410 = VLOGEFP
  { 411,	4,	1,	67,	0,	"VMADDFP", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #411 = VMADDFP
  { 412,	3,	1,	67,	0,	"VMAXFP", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #412 = VMAXFP
  { 413,	3,	1,	67,	0,	"VMAXSB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #413 = VMAXSB
  { 414,	3,	1,	67,	0,	"VMAXSH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #414 = VMAXSH
  { 415,	3,	1,	67,	0,	"VMAXSW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #415 = VMAXSW
  { 416,	3,	1,	67,	0,	"VMAXUB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #416 = VMAXUB
  { 417,	3,	1,	67,	0,	"VMAXUH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #417 = VMAXUH
  { 418,	3,	1,	67,	0,	"VMAXUW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #418 = VMAXUW
  { 419,	4,	1,	67,	0,	"VMHADDSHS", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #419 = VMHADDSHS
  { 420,	4,	1,	67,	0,	"VMHRADDSHS", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #420 = VMHRADDSHS
  { 421,	3,	1,	67,	0,	"VMINFP", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #421 = VMINFP
  { 422,	3,	1,	67,	0,	"VMINSB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #422 = VMINSB
  { 423,	3,	1,	67,	0,	"VMINSH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #423 = VMINSH
  { 424,	3,	1,	67,	0,	"VMINSW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #424 = VMINSW
  { 425,	3,	1,	67,	0,	"VMINUB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #425 = VMINUB
  { 426,	3,	1,	67,	0,	"VMINUH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #426 = VMINUH
  { 427,	3,	1,	67,	0,	"VMINUW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #427 = VMINUW
  { 428,	4,	1,	67,	0,	"VMLADDUHM", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #428 = VMLADDUHM
  { 429,	3,	1,	67,	0,	"VMRGHB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #429 = VMRGHB
  { 430,	3,	1,	67,	0,	"VMRGHH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #430 = VMRGHH
  { 431,	3,	1,	67,	0,	"VMRGHW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #431 = VMRGHW
  { 432,	3,	1,	67,	0,	"VMRGLB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #432 = VMRGLB
  { 433,	3,	1,	67,	0,	"VMRGLH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #433 = VMRGLH
  { 434,	3,	1,	67,	0,	"VMRGLW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #434 = VMRGLW
  { 435,	4,	1,	67,	0,	"VMSUMMBM", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #435 = VMSUMMBM
  { 436,	4,	1,	67,	0,	"VMSUMSHM", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #436 = VMSUMSHM
  { 437,	4,	1,	67,	0,	"VMSUMSHS", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #437 = VMSUMSHS
  { 438,	4,	1,	67,	0,	"VMSUMUBM", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #438 = VMSUMUBM
  { 439,	4,	1,	67,	0,	"VMSUMUHM", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #439 = VMSUMUHM
  { 440,	4,	1,	67,	0,	"VMSUMUHS", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #440 = VMSUMUHS
  { 441,	3,	1,	67,	0,	"VMULESB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #441 = VMULESB
  { 442,	3,	1,	67,	0,	"VMULESH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #442 = VMULESH
  { 443,	3,	1,	67,	0,	"VMULEUB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #443 = VMULEUB
  { 444,	3,	1,	67,	0,	"VMULEUH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #444 = VMULEUH
  { 445,	3,	1,	67,	0,	"VMULOSB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #445 = VMULOSB
  { 446,	3,	1,	67,	0,	"VMULOSH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #446 = VMULOSH
  { 447,	3,	1,	67,	0,	"VMULOUB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #447 = VMULOUB
  { 448,	3,	1,	67,	0,	"VMULOUH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #448 = VMULOUH
  { 449,	4,	1,	67,	0,	"VNMSUBFP", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #449 = VNMSUBFP
  { 450,	3,	1,	67,	0,	"VNOR", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #450 = VNOR
  { 451,	3,	1,	67,	0,	"VOR", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #451 = VOR
  { 452,	4,	1,	67,	0,	"VPERM", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #452 = VPERM
  { 453,	3,	1,	67,	0,	"VPKPX", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #453 = VPKPX
  { 454,	3,	1,	67,	0,	"VPKSHSS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #454 = VPKSHSS
  { 455,	3,	1,	67,	0,	"VPKSHUS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #455 = VPKSHUS
  { 456,	3,	1,	67,	0,	"VPKSWSS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #456 = VPKSWSS
  { 457,	3,	1,	67,	0,	"VPKSWUS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #457 = VPKSWUS
  { 458,	3,	1,	67,	0,	"VPKUHUM", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #458 = VPKUHUM
  { 459,	3,	1,	67,	0,	"VPKUHUS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #459 = VPKUHUS
  { 460,	3,	1,	67,	0,	"VPKUWUM", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #460 = VPKUWUM
  { 461,	3,	1,	67,	0,	"VPKUWUS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #461 = VPKUWUS
  { 462,	2,	1,	67,	0,	"VREFP", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #462 = VREFP
  { 463,	2,	1,	67,	0,	"VRFIM", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #463 = VRFIM
  { 464,	2,	1,	67,	0,	"VRFIN", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #464 = VRFIN
  { 465,	2,	1,	67,	0,	"VRFIP", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #465 = VRFIP
  { 466,	2,	1,	67,	0,	"VRFIZ", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #466 = VRFIZ
  { 467,	3,	1,	67,	0,	"VRLB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #467 = VRLB
  { 468,	3,	1,	67,	0,	"VRLH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #468 = VRLH
  { 469,	3,	1,	67,	0,	"VRLW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #469 = VRLW
  { 470,	2,	1,	67,	0,	"VRSQRTEFP", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #470 = VRSQRTEFP
  { 471,	4,	1,	67,	0,	"VSEL", 0, 0x28ULL, NULL, NULL, OperandInfo90 },  // Inst #471 = VSEL
  { 472,	3,	1,	67,	0,	"VSL", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #472 = VSL
  { 473,	3,	1,	67,	0,	"VSLB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #473 = VSLB
  { 474,	4,	1,	67,	0,	"VSLDOI", 0, 0x28ULL, NULL, NULL, OperandInfo91 },  // Inst #474 = VSLDOI
  { 475,	3,	1,	67,	0,	"VSLH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #475 = VSLH
  { 476,	3,	1,	67,	0,	"VSLO", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #476 = VSLO
  { 477,	3,	1,	67,	0,	"VSLW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #477 = VSLW
  { 478,	3,	1,	71,	0,	"VSPLTB", 0, 0x28ULL, NULL, NULL, OperandInfo88 },  // Inst #478 = VSPLTB
  { 479,	3,	1,	71,	0,	"VSPLTH", 0, 0x28ULL, NULL, NULL, OperandInfo88 },  // Inst #479 = VSPLTH
  { 480,	2,	1,	71,	0,	"VSPLTISB", 0, 0x28ULL, NULL, NULL, OperandInfo92 },  // Inst #480 = VSPLTISB
  { 481,	2,	1,	71,	0,	"VSPLTISH", 0, 0x28ULL, NULL, NULL, OperandInfo92 },  // Inst #481 = VSPLTISH
  { 482,	2,	1,	71,	0,	"VSPLTISW", 0, 0x28ULL, NULL, NULL, OperandInfo92 },  // Inst #482 = VSPLTISW
  { 483,	3,	1,	71,	0,	"VSPLTW", 0, 0x28ULL, NULL, NULL, OperandInfo88 },  // Inst #483 = VSPLTW
  { 484,	3,	1,	67,	0,	"VSR", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #484 = VSR
  { 485,	3,	1,	67,	0,	"VSRAB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #485 = VSRAB
  { 486,	3,	1,	67,	0,	"VSRAH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #486 = VSRAH
  { 487,	3,	1,	67,	0,	"VSRAW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #487 = VSRAW
  { 488,	3,	1,	67,	0,	"VSRB", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #488 = VSRB
  { 489,	3,	1,	67,	0,	"VSRH", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #489 = VSRH
  { 490,	3,	1,	67,	0,	"VSRO", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #490 = VSRO
  { 491,	3,	1,	67,	0,	"VSRW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #491 = VSRW
  { 492,	3,	1,	67,	0,	"VSUBCUW", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #492 = VSUBCUW
  { 493,	3,	1,	70,	0,	"VSUBFP", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #493 = VSUBFP
  { 494,	3,	1,	67,	0,	"VSUBSBS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #494 = VSUBSBS
  { 495,	3,	1,	67,	0,	"VSUBSHS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #495 = VSUBSHS
  { 496,	3,	1,	67,	0,	"VSUBSWS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #496 = VSUBSWS
  { 497,	3,	1,	70,	0,	"VSUBUBM", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #497 = VSUBUBM
  { 498,	3,	1,	67,	0,	"VSUBUBS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #498 = VSUBUBS
  { 499,	3,	1,	70,	0,	"VSUBUHM", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #499 = VSUBUHM
  { 500,	3,	1,	67,	0,	"VSUBUHS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #500 = VSUBUHS
  { 501,	3,	1,	70,	0,	"VSUBUWM", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #501 = VSUBUWM
  { 502,	3,	1,	67,	0,	"VSUBUWS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #502 = VSUBUWS
  { 503,	3,	1,	67,	0,	"VSUM2SWS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #503 = VSUM2SWS
  { 504,	3,	1,	67,	0,	"VSUM4SBS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #504 = VSUM4SBS
  { 505,	3,	1,	67,	0,	"VSUM4SHS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #505 = VSUM4SHS
  { 506,	3,	1,	67,	0,	"VSUM4UBS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #506 = VSUM4UBS
  { 507,	3,	1,	67,	0,	"VSUMSWS", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #507 = VSUMSWS
  { 508,	2,	1,	67,	0,	"VUPKHPX", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #508 = VUPKHPX
  { 509,	2,	1,	67,	0,	"VUPKHSB", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #509 = VUPKHSB
  { 510,	2,	1,	67,	0,	"VUPKHSH", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #510 = VUPKHSH
  { 511,	2,	1,	67,	0,	"VUPKLPX", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #511 = VUPKLPX
  { 512,	2,	1,	67,	0,	"VUPKLSB", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #512 = VUPKLSB
  { 513,	2,	1,	67,	0,	"VUPKLSH", 0, 0x28ULL, NULL, NULL, OperandInfo89 },  // Inst #513 = VUPKLSH
  { 514,	3,	1,	67,	0,	"VXOR", 0, 0x28ULL, NULL, NULL, OperandInfo87 },  // Inst #514 = VXOR
  { 515,	1,	1,	67,	0,	"V_SET0", 0, 0x28ULL, NULL, NULL, OperandInfo63 },  // Inst #515 = V_SET0
  { 516,	3,	1,	14,	0,	"XOR", 0, 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #516 = XOR
  { 517,	3,	1,	14,	0,	"XOR8", 0, 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #517 = XOR8
  { 518,	3,	1,	14,	0,	"XORI", 0, 0x8ULL, NULL, NULL, OperandInfo10 },  // Inst #518 = XORI
  { 519,	3,	1,	14,	0,	"XORI8", 0, 0x8ULL, NULL, NULL, OperandInfo11 },  // Inst #519 = XORI8
  { 520,	3,	1,	14,	0,	"XORIS", 0, 0x8ULL, NULL, NULL, OperandInfo10 },  // Inst #520 = XORIS
  { 521,	3,	1,	14,	0,	"XORIS8", 0, 0x8ULL, NULL, NULL, OperandInfo11 },  // Inst #521 = XORIS8
};

static inline void InitPPCMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(PPCInsts, 522);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct PPCGenInstrInfo : public TargetInstrInfoImpl {
  explicit PPCGenInstrInfo(int SO = -1, int DO = -1);
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR
#undef GET_INSTRINFO_CTOR
namespace llvm {
extern MCInstrDesc PPCInsts[];
PPCGenInstrInfo::PPCGenInstrInfo(int SO, int DO)
  : TargetInstrInfoImpl(SO, DO) {
  InitMCInstrInfo(PPCInsts, 522);
}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR

