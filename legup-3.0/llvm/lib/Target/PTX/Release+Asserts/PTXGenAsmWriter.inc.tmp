//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Assembly Writer Source Fragment
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void PTXAsmPrinter::printInstruction(const MachineInstr *MI, raw_ostream &O) {
  static const unsigned OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    1U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    1073741835U,	// ADDri16
    1073741844U,	// ADDri32
    1073741853U,	// ADDri64
    1073741835U,	// ADDrr16
    1073741844U,	// ADDrr32
    1073741853U,	// ADDrr64
    1073741862U,	// ANDri16
    1073741871U,	// ANDri32
    1073741880U,	// ANDri64
    1073741889U,	// ANDripreds
    1073741862U,	// ANDrr16
    1073741871U,	// ANDrr32
    1073741880U,	// ANDrr64
    1073741889U,	// ANDrrpreds
    1090519115U,	// BRAd
    1090519115U,	// BRAdp
    80U,	// CALL
    1074790485U,	// CVT_f32_f64
    1107296357U,	// CVT_f32_pred
    1074790511U,	// CVT_f32_u16
    1074790527U,	// CVT_f32_u32
    1074790543U,	// CVT_f32_u64
    1074790559U,	// CVT_f64_f32
    1124073644U,	// CVT_f64_pred
    1074790582U,	// CVT_f64_u16
    1074790598U,	// CVT_f64_u32
    1074790614U,	// CVT_f64_u64
    1075839206U,	// CVT_pred_f32
    1075839219U,	// CVT_pred_f64
    1075839232U,	// CVT_pred_u16
    1075839245U,	// CVT_pred_u32
    1075839258U,	// CVT_pred_u64
    1074790695U,	// CVT_u16_f32
    1074790712U,	// CVT_u16_f64
    1140851017U,	// CVT_u16_pred
    1140851017U,	// CVT_u16_preda
    1140851017U,	// CVT_u16_preds
    1074790739U,	// CVT_u16_u32
    1074790752U,	// CVT_u16_u64
    1074790765U,	// CVT_u32_b16
    1074790778U,	// CVT_u32_f32
    1074790795U,	// CVT_u32_f64
    1140851100U,	// CVT_u32_pred
    1140851100U,	// CVT_u32_preds
    1074790822U,	// CVT_u32_s16
    1074790765U,	// CVT_u32_u16
    1074790835U,	// CVT_u32_u64
    1074790848U,	// CVT_u64_f32
    1074790865U,	// CVT_u64_f64
    1140851170U,	// CVT_u64_pred
    1140851170U,	// CVT_u64_preds
    1074790892U,	// CVT_u64_s16
    1074790905U,	// CVT_u64_s32
    1074790918U,	// CVT_u64_u16
    1074790931U,	// CVT_u64_u32
    1073742368U,	// DIVri16
    1073742377U,	// DIVri32
    1073742386U,	// DIVri64
    1073742368U,	// DIVrr16
    1073742377U,	// DIVrr32
    1073742386U,	// DIVrr64
    571U,	// EXIT
    1073742400U,	// FADDri32
    1073742412U,	// FADDri64
    1073742400U,	// FADDrr32
    1073742412U,	// FADDrr64
    1074791000U,	// FCOS32
    1074791016U,	// FCOS64
    1073742456U,	// FDIVri32SM10
    1073742465U,	// FDIVri32SM13
    1073742477U,	// FDIVri64SM10
    1073742486U,	// FDIVri64SM13
    1073742456U,	// FDIVrr32SM10
    1073742465U,	// FDIVrr32SM13
    1073742477U,	// FDIVrr64SM10
    1073742486U,	// FDIVrr64SM13
    1074004642U,	// FMADSM13rri32
    1074004654U,	// FMADSM13rri64
    1074004642U,	// FMADSM13rrr32
    1074004654U,	// FMADSM13rrr64
    1074004666U,	// FMADrri32
    1074004675U,	// FMADrri64
    1074004666U,	// FMADrrr32
    1074004675U,	// FMADrrr64
    1073742540U,	// FMULri32
    1073742552U,	// FMULri64
    1073742540U,	// FMULrr32
    1073742552U,	// FMULrr64
    1074791140U,	// FNEGri32
    1074791149U,	// FNEGri64
    1074791140U,	// FNEGrr32
    1074791149U,	// FNEGrr64
    1074791158U,	// FSIN32
    1074791174U,	// FSIN64
    1074791190U,	// FSQRT32
    1074791203U,	// FSQRT64
    1073742640U,	// FSUBri32
    1073742652U,	// FSUBri64
    1073742640U,	// FSUBrr32
    1073742652U,	// FSUBrr64
    1161823048U,	// LDcf32ii32
    1161823048U,	// LDcf32ii64
    1161823048U,	// LDcf32ri32
    1161823048U,	// LDcf32ri64
    1161823048U,	// LDcf32rr32
    1161823048U,	// LDcf32rr64
    1161823062U,	// LDcf64ii32
    1161823062U,	// LDcf64ii64
    1161823062U,	// LDcf64ri32
    1161823062U,	// LDcf64ri64
    1161823062U,	// LDcf64rr32
    1161823062U,	// LDcf64rr64
    1161823076U,	// LDcu16ii32
    1161823076U,	// LDcu16ii64
    1161823076U,	// LDcu16ri32
    1161823076U,	// LDcu16ri64
    1161823076U,	// LDcu16rr32
    1161823076U,	// LDcu16rr64
    1161823090U,	// LDcu32ii32
    1161823090U,	// LDcu32ii64
    1161823090U,	// LDcu32ri32
    1161823090U,	// LDcu32ri64
    1161823090U,	// LDcu32rr32
    1161823090U,	// LDcu32rr64
    1161823104U,	// LDcu64ii32
    1161823104U,	// LDcu64ii64
    1161823104U,	// LDcu64ri32
    1161823104U,	// LDcu64ri64
    1161823104U,	// LDcu64rr32
    1161823104U,	// LDcu64rr64
    1161823118U,	// LDgf32ii32
    1161823118U,	// LDgf32ii64
    1161823118U,	// LDgf32ri32
    1161823118U,	// LDgf32ri64
    1161823118U,	// LDgf32rr32
    1161823118U,	// LDgf32rr64
    1161823133U,	// LDgf64ii32
    1161823133U,	// LDgf64ii64
    1161823133U,	// LDgf64ri32
    1161823133U,	// LDgf64ri64
    1161823133U,	// LDgf64rr32
    1161823133U,	// LDgf64rr64
    1161823148U,	// LDgu16ii32
    1161823148U,	// LDgu16ii64
    1161823148U,	// LDgu16ri32
    1161823148U,	// LDgu16ri64
    1161823148U,	// LDgu16rr32
    1161823148U,	// LDgu16rr64
    1161823163U,	// LDgu32ii32
    1161823163U,	// LDgu32ii64
    1161823163U,	// LDgu32ri32
    1161823163U,	// LDgu32ri64
    1161823163U,	// LDgu32rr32
    1161823163U,	// LDgu32rr64
    1161823178U,	// LDgu64ii32
    1161823178U,	// LDgu64ii64
    1161823178U,	// LDgu64ri32
    1161823178U,	// LDgu64ri64
    1161823178U,	// LDgu64rr32
    1161823178U,	// LDgu64rr64
    1161823193U,	// LDlf32ii32
    1161823193U,	// LDlf32ii64
    1161823193U,	// LDlf32ri32
    1161823193U,	// LDlf32ri64
    1161823193U,	// LDlf32rr32
    1161823193U,	// LDlf32rr64
    1161823207U,	// LDlf64ii32
    1161823207U,	// LDlf64ii64
    1161823207U,	// LDlf64ri32
    1161823207U,	// LDlf64ri64
    1161823207U,	// LDlf64rr32
    1161823207U,	// LDlf64rr64
    1161823221U,	// LDlu16ii32
    1161823221U,	// LDlu16ii64
    1161823221U,	// LDlu16ri32
    1161823221U,	// LDlu16ri64
    1161823221U,	// LDlu16rr32
    1161823221U,	// LDlu16rr64
    1161823235U,	// LDlu32ii32
    1161823235U,	// LDlu32ii64
    1161823235U,	// LDlu32ri32
    1161823235U,	// LDlu32ri64
    1161823235U,	// LDlu32rr32
    1161823235U,	// LDlu32rr64
    1161823249U,	// LDlu64ii32
    1161823249U,	// LDlu64ii64
    1161823249U,	// LDlu64ri32
    1161823249U,	// LDlu64ri64
    1161823249U,	// LDlu64rr32
    1161823249U,	// LDlu64rr64
    1166017567U,	// LDpiF32
    1166017581U,	// LDpiF64
    1166017595U,	// LDpiPred
    1166017610U,	// LDpiU16
    1166017624U,	// LDpiU32
    1166017638U,	// LDpiU64
    1161823348U,	// LDsf32ii32
    1161823348U,	// LDsf32ii64
    1161823348U,	// LDsf32ri32
    1161823348U,	// LDsf32ri64
    1161823348U,	// LDsf32rr32
    1161823348U,	// LDsf32rr64
    1161823363U,	// LDsf64ii32
    1161823363U,	// LDsf64ii64
    1161823363U,	// LDsf64ri32
    1161823363U,	// LDsf64ri64
    1161823363U,	// LDsf64rr32
    1161823363U,	// LDsf64rr64
    1161823378U,	// LDsu16ii32
    1161823378U,	// LDsu16ii64
    1161823378U,	// LDsu16ri32
    1161823378U,	// LDsu16ri64
    1161823378U,	// LDsu16rr32
    1161823378U,	// LDsu16rr64
    1161823393U,	// LDsu32ii32
    1161823393U,	// LDsu32ii64
    1161823393U,	// LDsu32ri32
    1161823393U,	// LDsu32ri64
    1161823393U,	// LDsu32rr32
    1161823393U,	// LDsu32rr64
    1161823408U,	// LDsu64ii32
    1161823408U,	// LDsu64ii64
    1161823408U,	// LDsu64ri32
    1161823408U,	// LDsu64ri64
    1161823408U,	// LDsu64rr32
    1161823408U,	// LDsu64rr64
    1074791615U,	// MOVF32ri
    1074791615U,	// MOVF32rr
    1074791624U,	// MOVF64ri
    1074791624U,	// MOVF64rr
    1074791633U,	// MOVPREDri
    1074791633U,	// MOVPREDrr
    1074791643U,	// MOVU16ri
    1074791643U,	// MOVU16rr
    1074791652U,	// MOVU32ri
    1074791652U,	// MOVU32rr
    1074791661U,	// MOVU64ri
    1074791661U,	// MOVU64rr
    1074791652U,	// MOVaddr32
    1074791661U,	// MOVaddr64
    1073743094U,	// MULri16
    1073743106U,	// MULri32
    1073743118U,	// MULri64
    1073743094U,	// MULrr16
    1073743106U,	// MULrr32
    1073743118U,	// MULrr64
    1073743130U,	// ORri16
    1073743138U,	// ORri32
    1073743146U,	// ORri64
    1073743154U,	// ORripreds
    1073743130U,	// ORrr16
    1073743138U,	// ORrr32
    1073743146U,	// ORrr64
    1073743154U,	// ORrrpreds
    1090520379U,	// PTX_BAR_SYNC
    1174406372U,	// PTX_READ_CLOCK
    1191183597U,	// PTX_READ_CLOCK64
    1207960804U,	// PTX_READ_CTAID_W
    1224738020U,	// PTX_READ_CTAID_X
    1241515236U,	// PTX_READ_CTAID_Y
    1258292452U,	// PTX_READ_CTAID_Z
    1275069668U,	// PTX_READ_GRIDID
    1291846884U,	// PTX_READ_LANEID
    1308624100U,	// PTX_READ_LANEMASK_EQ
    1325401316U,	// PTX_READ_LANEMASK_GE
    1342178532U,	// PTX_READ_LANEMASK_GT
    1358955748U,	// PTX_READ_LANEMASK_LE
    1375732964U,	// PTX_READ_LANEMASK_LT
    1392510180U,	// PTX_READ_NCTAID_W
    1409287396U,	// PTX_READ_NCTAID_X
    1426064612U,	// PTX_READ_NCTAID_Y
    1442841828U,	// PTX_READ_NCTAID_Z
    1459619044U,	// PTX_READ_NSMID
    1476396260U,	// PTX_READ_NTID_W
    1493173476U,	// PTX_READ_NTID_X
    1509950692U,	// PTX_READ_NTID_Y
    1526727908U,	// PTX_READ_NTID_Z
    1543505124U,	// PTX_READ_NWARPID
    1560282340U,	// PTX_READ_PM0
    1577059556U,	// PTX_READ_PM1
    1593836772U,	// PTX_READ_PM2
    1610613988U,	// PTX_READ_PM3
    1627391204U,	// PTX_READ_SMID
    1644168420U,	// PTX_READ_TID_W
    1660945636U,	// PTX_READ_TID_X
    1677722852U,	// PTX_READ_TID_Y
    1694500068U,	// PTX_READ_TID_Z
    1711277284U,	// PTX_READ_WARPID
    1086324837U,	// PTX_SELPf32rr
    1086324908U,	// PTX_SELPf64rr
    1086325065U,	// PTX_SELPu16rr
    1086325148U,	// PTX_SELPu32rr
    1086325218U,	// PTX_SELPu64rr
    1073743173U,	// REMri16
    1073743182U,	// REMri32
    1073743191U,	// REMri64
    1073743173U,	// REMrr16
    1073743182U,	// REMrr32
    1073743191U,	// REMrr64
    1376U,	// RET
    1074267492U,	// SETPEQf32rr_and_not_r_o
    1074267509U,	// SETPEQf32rr_and_not_r_u
    1074005348U,	// SETPEQf32rr_and_r_o
    1074005365U,	// SETPEQf32rr_and_r_u
    1073743239U,	// SETPEQf32rr_o
    1074267540U,	// SETPEQf32rr_or_not_r_o
    1074267556U,	// SETPEQf32rr_or_not_r_u
    1074005396U,	// SETPEQf32rr_or_r_o
    1074005412U,	// SETPEQf32rr_or_r_u
    1073743285U,	// SETPEQf32rr_u
    1074267587U,	// SETPEQf32rr_xor_not_r_o
    1074267604U,	// SETPEQf32rr_xor_not_r_u
    1074005443U,	// SETPEQf32rr_xor_r_o
    1074005460U,	// SETPEQf32rr_xor_r_u
    1074267622U,	// SETPEQf64rr_and_not_r_o
    1074267639U,	// SETPEQf64rr_and_not_r_u
    1074005478U,	// SETPEQf64rr_and_r_o
    1074005495U,	// SETPEQf64rr_and_r_u
    1073743369U,	// SETPEQf64rr_o
    1074267670U,	// SETPEQf64rr_or_not_r_o
    1074267686U,	// SETPEQf64rr_or_not_r_u
    1074005526U,	// SETPEQf64rr_or_r_o
    1074005542U,	// SETPEQf64rr_or_r_u
    1073743415U,	// SETPEQf64rr_u
    1074267717U,	// SETPEQf64rr_xor_not_r_o
    1074267734U,	// SETPEQf64rr_xor_not_r_u
    1074005573U,	// SETPEQf64rr_xor_r_o
    1074005590U,	// SETPEQf64rr_xor_r_u
    1073743464U,	// SETPEQu16ri
    1074267765U,	// SETPEQu16ri_and_not_r
    1074005621U,	// SETPEQu16ri_and_r
    1074267782U,	// SETPEQu16ri_or_not_r
    1074005638U,	// SETPEQu16ri_or_r
    1074267798U,	// SETPEQu16ri_xor_not_r
    1074005654U,	// SETPEQu16ri_xor_r
    1073743464U,	// SETPEQu16rr
    1074267765U,	// SETPEQu16rr_and_not_r
    1074005621U,	// SETPEQu16rr_and_r
    1074267782U,	// SETPEQu16rr_or_not_r
    1074005638U,	// SETPEQu16rr_or_r
    1074267798U,	// SETPEQu16rr_xor_not_r
    1074005654U,	// SETPEQu16rr_xor_r
    1073743527U,	// SETPEQu32ri
    1074267828U,	// SETPEQu32ri_and_not_r
    1074005684U,	// SETPEQu32ri_and_r
    1074267845U,	// SETPEQu32ri_or_not_r
    1074005701U,	// SETPEQu32ri_or_r
    1074267861U,	// SETPEQu32ri_xor_not_r
    1074005717U,	// SETPEQu32ri_xor_r
    1073743527U,	// SETPEQu32rr
    1074267828U,	// SETPEQu32rr_and_not_r
    1074005684U,	// SETPEQu32rr_and_r
    1074267845U,	// SETPEQu32rr_or_not_r
    1074005701U,	// SETPEQu32rr_or_r
    1074267861U,	// SETPEQu32rr_xor_not_r
    1074005717U,	// SETPEQu32rr_xor_r
    1073743590U,	// SETPEQu64ri
    1074267891U,	// SETPEQu64ri_and_not_r
    1074005747U,	// SETPEQu64ri_and_r
    1074267908U,	// SETPEQu64ri_or_not_r
    1074005764U,	// SETPEQu64ri_or_r
    1074267924U,	// SETPEQu64ri_xor_not_r
    1074005780U,	// SETPEQu64ri_xor_r
    1073743590U,	// SETPEQu64rr
    1074267891U,	// SETPEQu64rr_and_not_r
    1074005747U,	// SETPEQu64rr_and_r
    1074267908U,	// SETPEQu64rr_or_not_r
    1074005764U,	// SETPEQu64rr_or_r
    1074267924U,	// SETPEQu64rr_xor_not_r
    1074005780U,	// SETPEQu64rr_xor_r
    1074267941U,	// SETPGEf32rr_and_not_r_o
    1074267958U,	// SETPGEf32rr_and_not_r_u
    1074005797U,	// SETPGEf32rr_and_r_o
    1074005814U,	// SETPGEf32rr_and_r_u
    1073743688U,	// SETPGEf32rr_o
    1074267989U,	// SETPGEf32rr_or_not_r_o
    1074268005U,	// SETPGEf32rr_or_not_r_u
    1074005845U,	// SETPGEf32rr_or_r_o
    1074005861U,	// SETPGEf32rr_or_r_u
    1073743734U,	// SETPGEf32rr_u
    1074268036U,	// SETPGEf32rr_xor_not_r_o
    1074268053U,	// SETPGEf32rr_xor_not_r_u
    1074005892U,	// SETPGEf32rr_xor_r_o
    1074005909U,	// SETPGEf32rr_xor_r_u
    1074268071U,	// SETPGEf64rr_and_not_r_o
    1074268088U,	// SETPGEf64rr_and_not_r_u
    1074005927U,	// SETPGEf64rr_and_r_o
    1074005944U,	// SETPGEf64rr_and_r_u
    1073743818U,	// SETPGEf64rr_o
    1074268119U,	// SETPGEf64rr_or_not_r_o
    1074268135U,	// SETPGEf64rr_or_not_r_u
    1074005975U,	// SETPGEf64rr_or_r_o
    1074005991U,	// SETPGEf64rr_or_r_u
    1073743864U,	// SETPGEf64rr_u
    1074268166U,	// SETPGEf64rr_xor_not_r_o
    1074268183U,	// SETPGEf64rr_xor_not_r_u
    1074006022U,	// SETPGEf64rr_xor_r_o
    1074006039U,	// SETPGEf64rr_xor_r_u
    1073743913U,	// SETPGEs16ri
    1074268214U,	// SETPGEs16ri_and_not_r
    1074006070U,	// SETPGEs16ri_and_r
    1074268231U,	// SETPGEs16ri_or_not_r
    1074006087U,	// SETPGEs16ri_or_r
    1074268247U,	// SETPGEs16ri_xor_not_r
    1074006103U,	// SETPGEs16ri_xor_r
    1073743913U,	// SETPGEs16rr
    1074268214U,	// SETPGEs16rr_and_not_r
    1074006070U,	// SETPGEs16rr_and_r
    1074268231U,	// SETPGEs16rr_or_not_r
    1074006087U,	// SETPGEs16rr_or_r
    1074268247U,	// SETPGEs16rr_xor_not_r
    1074006103U,	// SETPGEs16rr_xor_r
    1073743976U,	// SETPGEs32ri
    1074268277U,	// SETPGEs32ri_and_not_r
    1074006133U,	// SETPGEs32ri_and_r
    1074268294U,	// SETPGEs32ri_or_not_r
    1074006150U,	// SETPGEs32ri_or_r
    1074268310U,	// SETPGEs32ri_xor_not_r
    1074006166U,	// SETPGEs32ri_xor_r
    1073743976U,	// SETPGEs32rr
    1074268277U,	// SETPGEs32rr_and_not_r
    1074006133U,	// SETPGEs32rr_and_r
    1074268294U,	// SETPGEs32rr_or_not_r
    1074006150U,	// SETPGEs32rr_or_r
    1074268310U,	// SETPGEs32rr_xor_not_r
    1074006166U,	// SETPGEs32rr_xor_r
    1073744039U,	// SETPGEs64ri
    1074268340U,	// SETPGEs64ri_and_not_r
    1074006196U,	// SETPGEs64ri_and_r
    1074268357U,	// SETPGEs64ri_or_not_r
    1074006213U,	// SETPGEs64ri_or_r
    1074268373U,	// SETPGEs64ri_xor_not_r
    1074006229U,	// SETPGEs64ri_xor_r
    1073744039U,	// SETPGEs64rr
    1074268340U,	// SETPGEs64rr_and_not_r
    1074006196U,	// SETPGEs64rr_and_r
    1074268357U,	// SETPGEs64rr_or_not_r
    1074006213U,	// SETPGEs64rr_or_r
    1074268373U,	// SETPGEs64rr_xor_not_r
    1074006229U,	// SETPGEs64rr_xor_r
    1073744102U,	// SETPGEu16ri
    1074268403U,	// SETPGEu16ri_and_not_r
    1074006259U,	// SETPGEu16ri_and_r
    1074268420U,	// SETPGEu16ri_or_not_r
    1074006276U,	// SETPGEu16ri_or_r
    1074268436U,	// SETPGEu16ri_xor_not_r
    1074006292U,	// SETPGEu16ri_xor_r
    1073744102U,	// SETPGEu16rr
    1074268403U,	// SETPGEu16rr_and_not_r
    1074006259U,	// SETPGEu16rr_and_r
    1074268420U,	// SETPGEu16rr_or_not_r
    1074006276U,	// SETPGEu16rr_or_r
    1074268436U,	// SETPGEu16rr_xor_not_r
    1074006292U,	// SETPGEu16rr_xor_r
    1073744165U,	// SETPGEu32ri
    1074268466U,	// SETPGEu32ri_and_not_r
    1074006322U,	// SETPGEu32ri_and_r
    1074268483U,	// SETPGEu32ri_or_not_r
    1074006339U,	// SETPGEu32ri_or_r
    1074268499U,	// SETPGEu32ri_xor_not_r
    1074006355U,	// SETPGEu32ri_xor_r
    1073744165U,	// SETPGEu32rr
    1074268466U,	// SETPGEu32rr_and_not_r
    1074006322U,	// SETPGEu32rr_and_r
    1074268483U,	// SETPGEu32rr_or_not_r
    1074006339U,	// SETPGEu32rr_or_r
    1074268499U,	// SETPGEu32rr_xor_not_r
    1074006355U,	// SETPGEu32rr_xor_r
    1073744228U,	// SETPGEu64ri
    1074268529U,	// SETPGEu64ri_and_not_r
    1074006385U,	// SETPGEu64ri_and_r
    1074268546U,	// SETPGEu64ri_or_not_r
    1074006402U,	// SETPGEu64ri_or_r
    1074268562U,	// SETPGEu64ri_xor_not_r
    1074006418U,	// SETPGEu64ri_xor_r
    1073744228U,	// SETPGEu64rr
    1074268529U,	// SETPGEu64rr_and_not_r
    1074006385U,	// SETPGEu64rr_and_r
    1074268546U,	// SETPGEu64rr_or_not_r
    1074006402U,	// SETPGEu64rr_or_r
    1074268562U,	// SETPGEu64rr_xor_not_r
    1074006418U,	// SETPGEu64rr_xor_r
    1074268579U,	// SETPGTf32rr_and_not_r_o
    1074268596U,	// SETPGTf32rr_and_not_r_u
    1074006435U,	// SETPGTf32rr_and_r_o
    1074006452U,	// SETPGTf32rr_and_r_u
    1073742054U,	// SETPGTf32rr_o
    1074268614U,	// SETPGTf32rr_or_not_r_o
    1074268630U,	// SETPGTf32rr_or_not_r_u
    1074006470U,	// SETPGTf32rr_or_r_o
    1074006486U,	// SETPGTf32rr_or_r_u
    1073744359U,	// SETPGTf32rr_u
    1074268661U,	// SETPGTf32rr_xor_not_r_o
    1074268678U,	// SETPGTf32rr_xor_not_r_u
    1074006517U,	// SETPGTf32rr_xor_r_o
    1074006534U,	// SETPGTf32rr_xor_r_u
    1074268696U,	// SETPGTf64rr_and_not_r_o
    1074268713U,	// SETPGTf64rr_and_not_r_u
    1074006552U,	// SETPGTf64rr_and_r_o
    1074006569U,	// SETPGTf64rr_and_r_u
    1073742067U,	// SETPGTf64rr_o
    1074268731U,	// SETPGTf64rr_or_not_r_o
    1074268747U,	// SETPGTf64rr_or_not_r_u
    1074006587U,	// SETPGTf64rr_or_r_o
    1074006603U,	// SETPGTf64rr_or_r_u
    1073744476U,	// SETPGTf64rr_u
    1074268778U,	// SETPGTf64rr_xor_not_r_o
    1074268795U,	// SETPGTf64rr_xor_not_r_u
    1074006634U,	// SETPGTf64rr_xor_r_o
    1074006651U,	// SETPGTf64rr_xor_r_u
    1073744525U,	// SETPGTs16ri
    1074268826U,	// SETPGTs16ri_and_not_r
    1074006682U,	// SETPGTs16ri_and_r
    1074268843U,	// SETPGTs16ri_or_not_r
    1074006699U,	// SETPGTs16ri_or_r
    1074268859U,	// SETPGTs16ri_xor_not_r
    1074006715U,	// SETPGTs16ri_xor_r
    1073744525U,	// SETPGTs16rr
    1074268826U,	// SETPGTs16rr_and_not_r
    1074006682U,	// SETPGTs16rr_and_r
    1074268843U,	// SETPGTs16rr_or_not_r
    1074006699U,	// SETPGTs16rr_or_r
    1074268859U,	// SETPGTs16rr_xor_not_r
    1074006715U,	// SETPGTs16rr_xor_r
    1073744588U,	// SETPGTs32ri
    1074268889U,	// SETPGTs32ri_and_not_r
    1074006745U,	// SETPGTs32ri_and_r
    1074268906U,	// SETPGTs32ri_or_not_r
    1074006762U,	// SETPGTs32ri_or_r
    1074268922U,	// SETPGTs32ri_xor_not_r
    1074006778U,	// SETPGTs32ri_xor_r
    1073744588U,	// SETPGTs32rr
    1074268889U,	// SETPGTs32rr_and_not_r
    1074006745U,	// SETPGTs32rr_and_r
    1074268906U,	// SETPGTs32rr_or_not_r
    1074006762U,	// SETPGTs32rr_or_r
    1074268922U,	// SETPGTs32rr_xor_not_r
    1074006778U,	// SETPGTs32rr_xor_r
    1073744651U,	// SETPGTs64ri
    1074268952U,	// SETPGTs64ri_and_not_r
    1074006808U,	// SETPGTs64ri_and_r
    1074268969U,	// SETPGTs64ri_or_not_r
    1074006825U,	// SETPGTs64ri_or_r
    1074268985U,	// SETPGTs64ri_xor_not_r
    1074006841U,	// SETPGTs64ri_xor_r
    1073744651U,	// SETPGTs64rr
    1074268952U,	// SETPGTs64rr_and_not_r
    1074006808U,	// SETPGTs64rr_and_r
    1074268969U,	// SETPGTs64rr_or_not_r
    1074006825U,	// SETPGTs64rr_or_r
    1074268985U,	// SETPGTs64rr_xor_not_r
    1074006841U,	// SETPGTs64rr_xor_r
    1073742080U,	// SETPGTu16ri
    1074269002U,	// SETPGTu16ri_and_not_r
    1074006858U,	// SETPGTu16ri_and_r
    1074269019U,	// SETPGTu16ri_or_not_r
    1074006875U,	// SETPGTu16ri_or_r
    1074269035U,	// SETPGTu16ri_xor_not_r
    1074006891U,	// SETPGTu16ri_xor_r
    1073742080U,	// SETPGTu16rr
    1074269002U,	// SETPGTu16rr_and_not_r
    1074006858U,	// SETPGTu16rr_and_r
    1074269019U,	// SETPGTu16rr_or_not_r
    1074006875U,	// SETPGTu16rr_or_r
    1074269035U,	// SETPGTu16rr_xor_not_r
    1074006891U,	// SETPGTu16rr_xor_r
    1073742093U,	// SETPGTu32ri
    1074269052U,	// SETPGTu32ri_and_not_r
    1074006908U,	// SETPGTu32ri_and_r
    1074269069U,	// SETPGTu32ri_or_not_r
    1074006925U,	// SETPGTu32ri_or_r
    1074269085U,	// SETPGTu32ri_xor_not_r
    1074006941U,	// SETPGTu32ri_xor_r
    1073742093U,	// SETPGTu32rr
    1074269052U,	// SETPGTu32rr_and_not_r
    1074006908U,	// SETPGTu32rr_and_r
    1074269069U,	// SETPGTu32rr_or_not_r
    1074006925U,	// SETPGTu32rr_or_r
    1074269085U,	// SETPGTu32rr_xor_not_r
    1074006941U,	// SETPGTu32rr_xor_r
    1073742106U,	// SETPGTu64ri
    1074269102U,	// SETPGTu64ri_and_not_r
    1074006958U,	// SETPGTu64ri_and_r
    1074269119U,	// SETPGTu64ri_or_not_r
    1074006975U,	// SETPGTu64ri_or_r
    1074269135U,	// SETPGTu64ri_xor_not_r
    1074006991U,	// SETPGTu64ri_xor_r
    1073742106U,	// SETPGTu64rr
    1074269102U,	// SETPGTu64rr_and_not_r
    1074006958U,	// SETPGTu64rr_and_r
    1074269119U,	// SETPGTu64rr_or_not_r
    1074006975U,	// SETPGTu64rr_or_r
    1074269135U,	// SETPGTu64rr_xor_not_r
    1074006991U,	// SETPGTu64rr_xor_r
    1074269152U,	// SETPLEf32rr_and_not_r_o
    1074269169U,	// SETPLEf32rr_and_not_r_u
    1074007008U,	// SETPLEf32rr_and_r_o
    1074007025U,	// SETPLEf32rr_and_r_u
    1073744899U,	// SETPLEf32rr_o
    1074269200U,	// SETPLEf32rr_or_not_r_o
    1074269216U,	// SETPLEf32rr_or_not_r_u
    1074007056U,	// SETPLEf32rr_or_r_o
    1074007072U,	// SETPLEf32rr_or_r_u
    1073744945U,	// SETPLEf32rr_u
    1074269247U,	// SETPLEf32rr_xor_not_r_o
    1074269264U,	// SETPLEf32rr_xor_not_r_u
    1074007103U,	// SETPLEf32rr_xor_r_o
    1074007120U,	// SETPLEf32rr_xor_r_u
    1074269282U,	// SETPLEf64rr_and_not_r_o
    1074269299U,	// SETPLEf64rr_and_not_r_u
    1074007138U,	// SETPLEf64rr_and_r_o
    1074007155U,	// SETPLEf64rr_and_r_u
    1073745029U,	// SETPLEf64rr_o
    1074269330U,	// SETPLEf64rr_or_not_r_o
    1074269346U,	// SETPLEf64rr_or_not_r_u
    1074007186U,	// SETPLEf64rr_or_r_o
    1074007202U,	// SETPLEf64rr_or_r_u
    1073745075U,	// SETPLEf64rr_u
    1074269377U,	// SETPLEf64rr_xor_not_r_o
    1074269394U,	// SETPLEf64rr_xor_not_r_u
    1074007233U,	// SETPLEf64rr_xor_r_o
    1074007250U,	// SETPLEf64rr_xor_r_u
    1073745124U,	// SETPLEs16ri
    1074269425U,	// SETPLEs16ri_and_not_r
    1074007281U,	// SETPLEs16ri_and_r
    1074269442U,	// SETPLEs16ri_or_not_r
    1074007298U,	// SETPLEs16ri_or_r
    1074269458U,	// SETPLEs16ri_xor_not_r
    1074007314U,	// SETPLEs16ri_xor_r
    1073745124U,	// SETPLEs16rr
    1074269425U,	// SETPLEs16rr_and_not_r
    1074007281U,	// SETPLEs16rr_and_r
    1074269442U,	// SETPLEs16rr_or_not_r
    1074007298U,	// SETPLEs16rr_or_r
    1074269458U,	// SETPLEs16rr_xor_not_r
    1074007314U,	// SETPLEs16rr_xor_r
    1073745187U,	// SETPLEs32ri
    1074269488U,	// SETPLEs32ri_and_not_r
    1074007344U,	// SETPLEs32ri_and_r
    1074269505U,	// SETPLEs32ri_or_not_r
    1074007361U,	// SETPLEs32ri_or_r
    1074269521U,	// SETPLEs32ri_xor_not_r
    1074007377U,	// SETPLEs32ri_xor_r
    1073745187U,	// SETPLEs32rr
    1074269488U,	// SETPLEs32rr_and_not_r
    1074007344U,	// SETPLEs32rr_and_r
    1074269505U,	// SETPLEs32rr_or_not_r
    1074007361U,	// SETPLEs32rr_or_r
    1074269521U,	// SETPLEs32rr_xor_not_r
    1074007377U,	// SETPLEs32rr_xor_r
    1073745250U,	// SETPLEs64ri
    1074269551U,	// SETPLEs64ri_and_not_r
    1074007407U,	// SETPLEs64ri_and_r
    1074269568U,	// SETPLEs64ri_or_not_r
    1074007424U,	// SETPLEs64ri_or_r
    1074269584U,	// SETPLEs64ri_xor_not_r
    1074007440U,	// SETPLEs64ri_xor_r
    1073745250U,	// SETPLEs64rr
    1074269551U,	// SETPLEs64rr_and_not_r
    1074007407U,	// SETPLEs64rr_and_r
    1074269568U,	// SETPLEs64rr_or_not_r
    1074007424U,	// SETPLEs64rr_or_r
    1074269584U,	// SETPLEs64rr_xor_not_r
    1074007440U,	// SETPLEs64rr_xor_r
    1073745313U,	// SETPLEu16ri
    1074269614U,	// SETPLEu16ri_and_not_r
    1074007470U,	// SETPLEu16ri_and_r
    1074269631U,	// SETPLEu16ri_or_not_r
    1074007487U,	// SETPLEu16ri_or_r
    1074269647U,	// SETPLEu16ri_xor_not_r
    1074007503U,	// SETPLEu16ri_xor_r
    1073745313U,	// SETPLEu16rr
    1074269614U,	// SETPLEu16rr_and_not_r
    1074007470U,	// SETPLEu16rr_and_r
    1074269631U,	// SETPLEu16rr_or_not_r
    1074007487U,	// SETPLEu16rr_or_r
    1074269647U,	// SETPLEu16rr_xor_not_r
    1074007503U,	// SETPLEu16rr_xor_r
    1073745376U,	// SETPLEu32ri
    1074269677U,	// SETPLEu32ri_and_not_r
    1074007533U,	// SETPLEu32ri_and_r
    1074269694U,	// SETPLEu32ri_or_not_r
    1074007550U,	// SETPLEu32ri_or_r
    1074269710U,	// SETPLEu32ri_xor_not_r
    1074007566U,	// SETPLEu32ri_xor_r
    1073745376U,	// SETPLEu32rr
    1074269677U,	// SETPLEu32rr_and_not_r
    1074007533U,	// SETPLEu32rr_and_r
    1074269694U,	// SETPLEu32rr_or_not_r
    1074007550U,	// SETPLEu32rr_or_r
    1074269710U,	// SETPLEu32rr_xor_not_r
    1074007566U,	// SETPLEu32rr_xor_r
    1073745439U,	// SETPLEu64ri
    1074269740U,	// SETPLEu64ri_and_not_r
    1074007596U,	// SETPLEu64ri_and_r
    1074269757U,	// SETPLEu64ri_or_not_r
    1074007613U,	// SETPLEu64ri_or_r
    1074269773U,	// SETPLEu64ri_xor_not_r
    1074007629U,	// SETPLEu64ri_xor_r
    1073745439U,	// SETPLEu64rr
    1074269740U,	// SETPLEu64rr_and_not_r
    1074007596U,	// SETPLEu64rr_and_r
    1074269757U,	// SETPLEu64rr_or_not_r
    1074007613U,	// SETPLEu64rr_or_r
    1074269773U,	// SETPLEu64rr_xor_not_r
    1074007629U,	// SETPLEu64rr_xor_r
    1074269790U,	// SETPLTf32rr_and_not_r_o
    1074269807U,	// SETPLTf32rr_and_not_r_u
    1074007646U,	// SETPLTf32rr_and_r_o
    1074007663U,	// SETPLTf32rr_and_r_u
    1073745537U,	// SETPLTf32rr_o
    1074269838U,	// SETPLTf32rr_or_not_r_o
    1074269854U,	// SETPLTf32rr_or_not_r_u
    1074007694U,	// SETPLTf32rr_or_r_o
    1074007710U,	// SETPLTf32rr_or_r_u
    1073745583U,	// SETPLTf32rr_u
    1074269885U,	// SETPLTf32rr_xor_not_r_o
    1074269902U,	// SETPLTf32rr_xor_not_r_u
    1074007741U,	// SETPLTf32rr_xor_r_o
    1074007758U,	// SETPLTf32rr_xor_r_u
    1074269920U,	// SETPLTf64rr_and_not_r_o
    1074269937U,	// SETPLTf64rr_and_not_r_u
    1074007776U,	// SETPLTf64rr_and_r_o
    1074007793U,	// SETPLTf64rr_and_r_u
    1073745667U,	// SETPLTf64rr_o
    1074269968U,	// SETPLTf64rr_or_not_r_o
    1074269984U,	// SETPLTf64rr_or_not_r_u
    1074007824U,	// SETPLTf64rr_or_r_o
    1074007840U,	// SETPLTf64rr_or_r_u
    1073745713U,	// SETPLTf64rr_u
    1074270015U,	// SETPLTf64rr_xor_not_r_o
    1074270032U,	// SETPLTf64rr_xor_not_r_u
    1074007871U,	// SETPLTf64rr_xor_r_o
    1074007888U,	// SETPLTf64rr_xor_r_u
    1073745762U,	// SETPLTs16ri
    1074270063U,	// SETPLTs16ri_and_not_r
    1074007919U,	// SETPLTs16ri_and_r
    1074270080U,	// SETPLTs16ri_or_not_r
    1074007936U,	// SETPLTs16ri_or_r
    1074270096U,	// SETPLTs16ri_xor_not_r
    1074007952U,	// SETPLTs16ri_xor_r
    1073745762U,	// SETPLTs16rr
    1074270063U,	// SETPLTs16rr_and_not_r
    1074007919U,	// SETPLTs16rr_and_r
    1074270080U,	// SETPLTs16rr_or_not_r
    1074007936U,	// SETPLTs16rr_or_r
    1074270096U,	// SETPLTs16rr_xor_not_r
    1074007952U,	// SETPLTs16rr_xor_r
    1073745825U,	// SETPLTs32ri
    1074270126U,	// SETPLTs32ri_and_not_r
    1074007982U,	// SETPLTs32ri_and_r
    1074270143U,	// SETPLTs32ri_or_not_r
    1074007999U,	// SETPLTs32ri_or_r
    1074270159U,	// SETPLTs32ri_xor_not_r
    1074008015U,	// SETPLTs32ri_xor_r
    1073745825U,	// SETPLTs32rr
    1074270126U,	// SETPLTs32rr_and_not_r
    1074007982U,	// SETPLTs32rr_and_r
    1074270143U,	// SETPLTs32rr_or_not_r
    1074007999U,	// SETPLTs32rr_or_r
    1074270159U,	// SETPLTs32rr_xor_not_r
    1074008015U,	// SETPLTs32rr_xor_r
    1073745888U,	// SETPLTs64ri
    1074270189U,	// SETPLTs64ri_and_not_r
    1074008045U,	// SETPLTs64ri_and_r
    1074270206U,	// SETPLTs64ri_or_not_r
    1074008062U,	// SETPLTs64ri_or_r
    1074270222U,	// SETPLTs64ri_xor_not_r
    1074008078U,	// SETPLTs64ri_xor_r
    1073745888U,	// SETPLTs64rr
    1074270189U,	// SETPLTs64rr_and_not_r
    1074008045U,	// SETPLTs64rr_and_r
    1074270206U,	// SETPLTs64rr_or_not_r
    1074008062U,	// SETPLTs64rr_or_r
    1074270222U,	// SETPLTs64rr_xor_not_r
    1074008078U,	// SETPLTs64rr_xor_r
    1073745951U,	// SETPLTu16ri
    1074270252U,	// SETPLTu16ri_and_not_r
    1074008108U,	// SETPLTu16ri_and_r
    1074270269U,	// SETPLTu16ri_or_not_r
    1074008125U,	// SETPLTu16ri_or_r
    1074270285U,	// SETPLTu16ri_xor_not_r
    1074008141U,	// SETPLTu16ri_xor_r
    1073745951U,	// SETPLTu16rr
    1074270252U,	// SETPLTu16rr_and_not_r
    1074008108U,	// SETPLTu16rr_and_r
    1074270269U,	// SETPLTu16rr_or_not_r
    1074008125U,	// SETPLTu16rr_or_r
    1074270285U,	// SETPLTu16rr_xor_not_r
    1074008141U,	// SETPLTu16rr_xor_r
    1073746014U,	// SETPLTu32ri
    1074270315U,	// SETPLTu32ri_and_not_r
    1074008171U,	// SETPLTu32ri_and_r
    1074270332U,	// SETPLTu32ri_or_not_r
    1074008188U,	// SETPLTu32ri_or_r
    1074270348U,	// SETPLTu32ri_xor_not_r
    1074008204U,	// SETPLTu32ri_xor_r
    1073746014U,	// SETPLTu32rr
    1074270315U,	// SETPLTu32rr_and_not_r
    1074008171U,	// SETPLTu32rr_and_r
    1074270332U,	// SETPLTu32rr_or_not_r
    1074008188U,	// SETPLTu32rr_or_r
    1074270348U,	// SETPLTu32rr_xor_not_r
    1074008204U,	// SETPLTu32rr_xor_r
    1073746077U,	// SETPLTu64ri
    1074270378U,	// SETPLTu64ri_and_not_r
    1074008234U,	// SETPLTu64ri_and_r
    1074270395U,	// SETPLTu64ri_or_not_r
    1074008251U,	// SETPLTu64ri_or_r
    1074270411U,	// SETPLTu64ri_xor_not_r
    1074008267U,	// SETPLTu64ri_xor_r
    1073746077U,	// SETPLTu64rr
    1074270378U,	// SETPLTu64rr_and_not_r
    1074008234U,	// SETPLTu64rr_and_r
    1074270395U,	// SETPLTu64rr_or_not_r
    1074008251U,	// SETPLTu64rr_or_r
    1074270411U,	// SETPLTu64rr_xor_not_r
    1074008267U,	// SETPLTu64rr_xor_r
    1074270428U,	// SETPNEf32rr_and_not_r_o
    1074270445U,	// SETPNEf32rr_and_not_r_u
    1074008284U,	// SETPNEf32rr_and_r_o
    1074008301U,	// SETPNEf32rr_and_r_u
    1073746175U,	// SETPNEf32rr_o
    1074270476U,	// SETPNEf32rr_or_not_r_o
    1074270492U,	// SETPNEf32rr_or_not_r_u
    1074008332U,	// SETPNEf32rr_or_r_o
    1074008348U,	// SETPNEf32rr_or_r_u
    1073746221U,	// SETPNEf32rr_u
    1074270523U,	// SETPNEf32rr_xor_not_r_o
    1074270540U,	// SETPNEf32rr_xor_not_r_u
    1074008379U,	// SETPNEf32rr_xor_r_o
    1074008396U,	// SETPNEf32rr_xor_r_u
    1074270558U,	// SETPNEf64rr_and_not_r_o
    1074270575U,	// SETPNEf64rr_and_not_r_u
    1074008414U,	// SETPNEf64rr_and_r_o
    1074008431U,	// SETPNEf64rr_and_r_u
    1073746305U,	// SETPNEf64rr_o
    1074270606U,	// SETPNEf64rr_or_not_r_o
    1074270622U,	// SETPNEf64rr_or_not_r_u
    1074008462U,	// SETPNEf64rr_or_r_o
    1074008478U,	// SETPNEf64rr_or_r_u
    1073746351U,	// SETPNEf64rr_u
    1074270653U,	// SETPNEf64rr_xor_not_r_o
    1074270670U,	// SETPNEf64rr_xor_not_r_u
    1074008509U,	// SETPNEf64rr_xor_r_o
    1074008526U,	// SETPNEf64rr_xor_r_u
    1073746400U,	// SETPNEu16ri
    1074270701U,	// SETPNEu16ri_and_not_r
    1074008557U,	// SETPNEu16ri_and_r
    1074270718U,	// SETPNEu16ri_or_not_r
    1074008574U,	// SETPNEu16ri_or_r
    1074270734U,	// SETPNEu16ri_xor_not_r
    1074008590U,	// SETPNEu16ri_xor_r
    1073746400U,	// SETPNEu16rr
    1074270701U,	// SETPNEu16rr_and_not_r
    1074008557U,	// SETPNEu16rr_and_r
    1074270718U,	// SETPNEu16rr_or_not_r
    1074008574U,	// SETPNEu16rr_or_r
    1074270734U,	// SETPNEu16rr_xor_not_r
    1074008590U,	// SETPNEu16rr_xor_r
    1073746463U,	// SETPNEu32ri
    1074270764U,	// SETPNEu32ri_and_not_r
    1074008620U,	// SETPNEu32ri_and_r
    1074270781U,	// SETPNEu32ri_or_not_r
    1074008637U,	// SETPNEu32ri_or_r
    1074270797U,	// SETPNEu32ri_xor_not_r
    1074008653U,	// SETPNEu32ri_xor_r
    1073746463U,	// SETPNEu32rr
    1074270764U,	// SETPNEu32rr_and_not_r
    1074008620U,	// SETPNEu32rr_and_r
    1074270781U,	// SETPNEu32rr_or_not_r
    1074008637U,	// SETPNEu32rr_or_r
    1074270797U,	// SETPNEu32rr_xor_not_r
    1074008653U,	// SETPNEu32rr_xor_r
    1073746526U,	// SETPNEu64ri
    1074270827U,	// SETPNEu64ri_and_not_r
    1074008683U,	// SETPNEu64ri_and_r
    1074270844U,	// SETPNEu64ri_or_not_r
    1074008700U,	// SETPNEu64ri_or_r
    1074270860U,	// SETPNEu64ri_xor_not_r
    1074008716U,	// SETPNEu64ri_xor_r
    1073746526U,	// SETPNEu64rr
    1074270827U,	// SETPNEu64rr_and_not_r
    1074008683U,	// SETPNEu64rr_and_r
    1074270844U,	// SETPNEu64rr_or_not_r
    1074008700U,	// SETPNEu64rr_or_r
    1074270860U,	// SETPNEu64rr_xor_not_r
    1074008716U,	// SETPNEu64rr_xor_r
    1073746589U,	// SHLir16
    1073746598U,	// SHLir32
    1073746607U,	// SHLir64
    1073746589U,	// SHLri16
    1073746598U,	// SHLri32
    1073746607U,	// SHLri64
    1073746589U,	// SHLrr16
    1073746598U,	// SHLrr32
    1073746607U,	// SHLrr64
    1073746616U,	// SRAir16
    1073746625U,	// SRAir32
    1073746634U,	// SRAir64
    1073746616U,	// SRAri16
    1073746625U,	// SRAri32
    1073746634U,	// SRAri64
    1073746616U,	// SRArr16
    1073746625U,	// SRArr32
    1073746634U,	// SRArr64
    1073746643U,	// SRLir16
    1073746652U,	// SRLir32
    1073746661U,	// SRLir64
    1073746643U,	// SRLri16
    1073746652U,	// SRLri32
    1073746661U,	// SRLri64
    1073746643U,	// SRLrr16
    1073746652U,	// SRLrr32
    1073746661U,	// SRLrr64
    1728054463U,	// STACKLOADF32
    1728054472U,	// STACKLOADF64
    1728054491U,	// STACKLOADI16
    1728054500U,	// STACKLOADI32
    1728054509U,	// STACKLOADI64
    1074795246U,	// STACKSTOREF32
    1074795256U,	// STACKSTOREF64
    1074795266U,	// STACKSTOREI16
    1074795276U,	// STACKSTOREI32
    1074795286U,	// STACKSTOREI64
    2147488544U,	// STgf32ii32
    2147488544U,	// STgf32ii64
    2147488544U,	// STgf32ri32
    2147488544U,	// STgf32ri64
    2147488544U,	// STgf32rr32
    2147488544U,	// STgf32rr64
    2147488560U,	// STgf64ii32
    2147488560U,	// STgf64ii64
    2147488560U,	// STgf64ri32
    2147488560U,	// STgf64ri64
    2147488560U,	// STgf64rr32
    2147488560U,	// STgf64rr64
    2147488576U,	// STgu16ii32
    2147488576U,	// STgu16ii64
    2147488576U,	// STgu16ri32
    2147488576U,	// STgu16ri64
    2147488576U,	// STgu16rr32
    2147488576U,	// STgu16rr64
    2147488592U,	// STgu32ii32
    2147488592U,	// STgu32ii64
    2147488592U,	// STgu32ri32
    2147488592U,	// STgu32ri64
    2147488592U,	// STgu32rr32
    2147488592U,	// STgu32rr64
    2147488608U,	// STgu64ii32
    2147488608U,	// STgu64ii64
    2147488608U,	// STgu64ri32
    2147488608U,	// STgu64ri64
    2147488608U,	// STgu64rr32
    2147488608U,	// STgu64rr64
    2147488624U,	// STlf32ii32
    2147488624U,	// STlf32ii64
    2147488624U,	// STlf32ri32
    2147488624U,	// STlf32ri64
    2147488624U,	// STlf32rr32
    2147488624U,	// STlf32rr64
    2147488639U,	// STlf64ii32
    2147488639U,	// STlf64ii64
    2147488639U,	// STlf64ri32
    2147488639U,	// STlf64ri64
    2147488639U,	// STlf64rr32
    2147488639U,	// STlf64rr64
    2147488654U,	// STlu16ii32
    2147488654U,	// STlu16ii64
    2147488654U,	// STlu16ri32
    2147488654U,	// STlu16ri64
    2147488654U,	// STlu16rr32
    2147488654U,	// STlu16rr64
    2147488669U,	// STlu32ii32
    2147488669U,	// STlu32ii64
    2147488669U,	// STlu32ri32
    2147488669U,	// STlu32ri64
    2147488669U,	// STlu32rr32
    2147488669U,	// STlu32rr64
    2147488684U,	// STlu64ii32
    2147488684U,	// STlu64ii64
    2147488684U,	// STlu64ri32
    2147488684U,	// STlu64ri64
    2147488684U,	// STlu64rr32
    2147488684U,	// STlu64rr64
    3221230523U,	// STpiF32
    3221230538U,	// STpiF64
    3221230553U,	// STpiPred
    3221230569U,	// STpiU16
    3221230584U,	// STpiU32
    3221230599U,	// STpiU64
    2147488790U,	// STsf32ii32
    2147488790U,	// STsf32ii64
    2147488790U,	// STsf32ri32
    2147488790U,	// STsf32ri64
    2147488790U,	// STsf32rr32
    2147488790U,	// STsf32rr64
    2147488806U,	// STsf64ii32
    2147488806U,	// STsf64ii64
    2147488806U,	// STsf64ri32
    2147488806U,	// STsf64ri64
    2147488806U,	// STsf64rr32
    2147488806U,	// STsf64rr64
    2147488822U,	// STsu16ii32
    2147488822U,	// STsu16ii64
    2147488822U,	// STsu16ri32
    2147488822U,	// STsu16ri64
    2147488822U,	// STsu16rr32
    2147488822U,	// STsu16rr64
    2147488838U,	// STsu32ii32
    2147488838U,	// STsu32ii64
    2147488838U,	// STsu32ri32
    2147488838U,	// STsu32ri64
    2147488838U,	// STsu32rr32
    2147488838U,	// STsu32rr64
    2147488854U,	// STsu64ii32
    2147488854U,	// STsu64ii64
    2147488854U,	// STsu64ri32
    2147488854U,	// STsu64ri64
    2147488854U,	// STsu64rr32
    2147488854U,	// STsu64rr64
    1073747046U,	// SUBri16
    1073747055U,	// SUBri32
    1073747064U,	// SUBri64
    1073747046U,	// SUBrr16
    1073747055U,	// SUBrr32
    1073747064U,	// SUBrr64
    1073747073U,	// XORri16
    1073747082U,	// XORri32
    1073747091U,	// XORri64
    1073747100U,	// XORripreds
    1073747073U,	// XORrr16
    1073747082U,	// XORrr32
    1073747091U,	// XORrr64
    1073747100U,	// XORrrpreds
    0U
  };

  const char *AsmStrs = 
    "DBG_VALUE\000add.u16\t\000add.u32\t\000add.u64\t\000and.b16\t\000and.b3"
    "2\t\000and.b64\t\000and.pred\t\000bra\t\000call\000cvt.rn.f32.f64\t\000"
    "selp.f32\t\000cvt.rn.f32.u16\t\000cvt.rn.f32.u32\t\000cvt.rn.f32.u64\t\000"
    "cvt.f64.f32\t\000selp.f64\t\000cvt.rn.f64.u16\t\000cvt.rn.f64.u32\t\000"
    "cvt.rn.f64.u64\t\000setp.gt.f32\t\000setp.gt.f64\t\000setp.gt.u16\t\000"
    "setp.gt.u32\t\000setp.gt.u64\t\000cvt.rzi.u16.f32\t\000cvt.rzi.u16.f64\t"
    "\000selp.u16\t\000cvt.u16.u32\t\000cvt.u16.u64\t\000cvt.u32.u16\t\000cv"
    "t.rzi.u32.f32\t\000cvt.rzi.u32.f64\t\000selp.u32\t\000cvt.u32.s16\t\000"
    "cvt.u32.u64\t\000cvt.rzi.u64.f32\t\000cvt.rzi.u64.f64\t\000selp.u64\t\000"
    "cvt.u64.s16\t\000cvt.u64.s32\t\000cvt.u64.u16\t\000cvt.u64.u32\t\000div"
    ".u16\t\000div.u32\t\000div.u64\t\000exit\000add.rn.f32\t\000add.rn.f64\t"
    "\000cos.approx.f32\t\000cos.approx.f64\t\000div.f32\t\000div.rn.f32\t\000"
    "div.f64\t\000div.rn.f64\t\000mad.rn.f32\t\000mad.rn.f64\t\000mad.f32\t\000"
    "mad.f64\t\000mul.rn.f32\t\000mul.rn.f64\t\000neg.f32\t\000neg.f64\t\000"
    "sin.approx.f32\t\000sin.approx.f64\t\000sqrt.rn.f32\t\000sqrt.rn.f64\t\000"
    "sub.rn.f32\t\000sub.rn.f64\t\000ld.const.f32\t\000ld.const.f64\t\000ld."
    "const.u16\t\000ld.const.u32\t\000ld.const.u64\t\000ld.global.f32\t\000l"
    "d.global.f64\t\000ld.global.u16\t\000ld.global.u32\t\000ld.global.u64\t"
    "\000ld.local.f32\t\000ld.local.f64\t\000ld.local.u16\t\000ld.local.u32\t"
    "\000ld.local.u64\t\000ld.param.f32\t\000ld.param.f64\t\000ld.param.pred"
    "\t\000ld.param.u16\t\000ld.param.u32\t\000ld.param.u64\t\000ld.shared.f"
    "32\t\000ld.shared.f64\t\000ld.shared.u16\t\000ld.shared.u32\t\000ld.sha"
    "red.u64\t\000mov.f32\t\000mov.f64\t\000mov.pred\t\000mov.u16\t\000mov.u"
    "32\t\000mov.u64\t\000mul.lo.u16\t\000mul.lo.u32\t\000mul.lo.u64\t\000or"
    ".b16\t\000or.b32\t\000or.b64\t\000or.pred\t\000bar.sync\t\000rem.u16\t\000"
    "rem.u32\t\000rem.u64\t\000ret\000setp.eq.and.f32\t\000setp.equ.and.f32\t"
    "\000setp.eq.f32\t\000setp.eq.or.f32\t\000setp.equ.or.f32\t\000setp.equ."
    "f32\t\000setp.eq.xor.f32\t\000setp.equ.xor.f32\t\000setp.eq.and.f64\t\000"
    "setp.equ.and.f64\t\000setp.eq.f64\t\000setp.eq.or.f64\t\000setp.equ.or."
    "f64\t\000setp.equ.f64\t\000setp.eq.xor.f64\t\000setp.equ.xor.f64\t\000s"
    "etp.eq.u16\t\000setp.eq.and.u16\t\000setp.eq.or.u16\t\000setp.eq.xor.u1"
    "6\t\000setp.eq.u32\t\000setp.eq.and.u32\t\000setp.eq.or.u32\t\000setp.e"
    "q.xor.u32\t\000setp.eq.u64\t\000setp.eq.and.u64\t\000setp.eq.or.u64\t\000"
    "setp.eq.xor.u64\t\000setp.ge.and.f32\t\000setp.geu.and.f32\t\000setp.ge"
    ".f32\t\000setp.ge.or.f32\t\000setp.geu.or.f32\t\000setp.geu.f32\t\000se"
    "tp.ge.xor.f32\t\000setp.geu.xor.f32\t\000setp.ge.and.f64\t\000setp.geu."
    "and.f64\t\000setp.ge.f64\t\000setp.ge.or.f64\t\000setp.geu.or.f64\t\000"
    "setp.geu.f64\t\000setp.ge.xor.f64\t\000setp.geu.xor.f64\t\000setp.ge.s1"
    "6\t\000setp.ge.and.s16\t\000setp.ge.or.s16\t\000setp.ge.xor.s16\t\000se"
    "tp.ge.s32\t\000setp.ge.and.s32\t\000setp.ge.or.s32\t\000setp.ge.xor.s32"
    "\t\000setp.ge.s64\t\000setp.ge.and.s64\t\000setp.ge.or.s64\t\000setp.ge"
    ".xor.s64\t\000setp.ge.u16\t\000setp.ge.and.u16\t\000setp.ge.or.u16\t\000"
    "setp.ge.xor.u16\t\000setp.ge.u32\t\000setp.ge.and.u32\t\000setp.ge.or.u"
    "32\t\000setp.ge.xor.u32\t\000setp.ge.u64\t\000setp.ge.and.u64\t\000setp"
    ".ge.or.u64\t\000setp.ge.xor.u64\t\000setp.gt.and.f32\t\000setp.gtu.and."
    "f32\t\000setp.gt.or.f32\t\000setp.gtu.or.f32\t\000setp.gtu.f32\t\000set"
    "p.gt.xor.f32\t\000setp.gtu.xor.f32\t\000setp.gt.and.f64\t\000setp.gtu.a"
    "nd.f64\t\000setp.gt.or.f64\t\000setp.gtu.or.f64\t\000setp.gtu.f64\t\000"
    "setp.gt.xor.f64\t\000setp.gtu.xor.f64\t\000setp.gt.s16\t\000setp.gt.and"
    ".s16\t\000setp.gt.or.s16\t\000setp.gt.xor.s16\t\000setp.gt.s32\t\000set"
    "p.gt.and.s32\t\000setp.gt.or.s32\t\000setp.gt.xor.s32\t\000setp.gt.s64\t"
    "\000setp.gt.and.s64\t\000setp.gt.or.s64\t\000setp.gt.xor.s64\t\000setp."
    "gt.and.u16\t\000setp.gt.or.u16\t\000setp.gt.xor.u16\t\000setp.gt.and.u3"
    "2\t\000setp.gt.or.u32\t\000setp.gt.xor.u32\t\000setp.gt.and.u64\t\000se"
    "tp.gt.or.u64\t\000setp.gt.xor.u64\t\000setp.le.and.f32\t\000setp.leu.an"
    "d.f32\t\000setp.le.f32\t\000setp.le.or.f32\t\000setp.leu.or.f32\t\000se"
    "tp.leu.f32\t\000setp.le.xor.f32\t\000setp.leu.xor.f32\t\000setp.le.and."
    "f64\t\000setp.leu.and.f64\t\000setp.le.f64\t\000setp.le.or.f64\t\000set"
    "p.leu.or.f64\t\000setp.leu.f64\t\000setp.le.xor.f64\t\000setp.leu.xor.f"
    "64\t\000setp.le.s16\t\000setp.le.and.s16\t\000setp.le.or.s16\t\000setp."
    "le.xor.s16\t\000setp.le.s32\t\000setp.le.and.s32\t\000setp.le.or.s32\t\000"
    "setp.le.xor.s32\t\000setp.le.s64\t\000setp.le.and.s64\t\000setp.le.or.s"
    "64\t\000setp.le.xor.s64\t\000setp.le.u16\t\000setp.le.and.u16\t\000setp"
    ".le.or.u16\t\000setp.le.xor.u16\t\000setp.le.u32\t\000setp.le.and.u32\t"
    "\000setp.le.or.u32\t\000setp.le.xor.u32\t\000setp.le.u64\t\000setp.le.a"
    "nd.u64\t\000setp.le.or.u64\t\000setp.le.xor.u64\t\000setp.lt.and.f32\t\000"
    "setp.ltu.and.f32\t\000setp.lt.f32\t\000setp.lt.or.f32\t\000setp.ltu.or."
    "f32\t\000setp.ltu.f32\t\000setp.lt.xor.f32\t\000setp.ltu.xor.f32\t\000s"
    "etp.lt.and.f64\t\000setp.ltu.and.f64\t\000setp.lt.f64\t\000setp.lt.or.f"
    "64\t\000setp.ltu.or.f64\t\000setp.ltu.f64\t\000setp.lt.xor.f64\t\000set"
    "p.ltu.xor.f64\t\000setp.lt.s16\t\000setp.lt.and.s16\t\000setp.lt.or.s16"
    "\t\000setp.lt.xor.s16\t\000setp.lt.s32\t\000setp.lt.and.s32\t\000setp.l"
    "t.or.s32\t\000setp.lt.xor.s32\t\000setp.lt.s64\t\000setp.lt.and.s64\t\000"
    "setp.lt.or.s64\t\000setp.lt.xor.s64\t\000setp.lt.u16\t\000setp.lt.and.u"
    "16\t\000setp.lt.or.u16\t\000setp.lt.xor.u16\t\000setp.lt.u32\t\000setp."
    "lt.and.u32\t\000setp.lt.or.u32\t\000setp.lt.xor.u32\t\000setp.lt.u64\t\000"
    "setp.lt.and.u64\t\000setp.lt.or.u64\t\000setp.lt.xor.u64\t\000setp.ne.a"
    "nd.f32\t\000setp.neu.and.f32\t\000setp.ne.f32\t\000setp.ne.or.f32\t\000"
    "setp.neu.or.f32\t\000setp.neu.f32\t\000setp.ne.xor.f32\t\000setp.neu.xo"
    "r.f32\t\000setp.ne.and.f64\t\000setp.neu.and.f64\t\000setp.ne.f64\t\000"
    "setp.ne.or.f64\t\000setp.neu.or.f64\t\000setp.neu.f64\t\000setp.ne.xor."
    "f64\t\000setp.neu.xor.f64\t\000setp.ne.u16\t\000setp.ne.and.u16\t\000se"
    "tp.ne.or.u16\t\000setp.ne.xor.u16\t\000setp.ne.u32\t\000setp.ne.and.u32"
    "\t\000setp.ne.or.u32\t\000setp.ne.xor.u32\t\000setp.ne.u64\t\000setp.ne"
    ".and.u64\t\000setp.ne.or.u64\t\000setp.ne.xor.u64\t\000shl.b16\t\000shl"
    ".b32\t\000shl.b64\t\000shr.s16\t\000shr.s32\t\000shr.s64\t\000shr.u16\t"
    "\000shr.u32\t\000shr.u64\t\000mov.f32\ts\000mov.f64\ts\000mov.u16\ts\000"
    "mov.u32\ts\000mov.u64\ts\000st.global.f32\t[\000st.global.f64\t[\000st."
    "global.u16\t[\000st.global.u32\t[\000st.global.u64\t[\000st.local.f32\t"
    "[\000st.local.f64\t[\000st.local.u16\t[\000st.local.u32\t[\000st.local."
    "u64\t[\000st.param.f32\t[\000st.param.f64\t[\000st.param.pred\t[\000st."
    "param.u16\t[\000st.param.u32\t[\000st.param.u64\t[\000st.shared.f32\t[\000"
    "st.shared.f64\t[\000st.shared.u16\t[\000st.shared.u32\t[\000st.shared.u"
    "64\t[\000sub.u16\t\000sub.u32\t\000sub.u64\t\000xor.b16\t\000xor.b32\t\000"
    "xor.b64\t\000xor.pred\t\000";

  O << "\t";

  // Emit the opcode for the instruction.
  unsigned Bits = OpInfo[MI->getOpcode()];
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 8191)-1;


  // Fragment 0 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 30) & 3) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, CALL, EXIT, RET
    return;
    break;
  case 1:
    // ADDri16, ADDri32, ADDri64, ADDrr16, ADDrr32, ADDrr64, ANDri16, ANDri32...
    printOperand(MI, 0, O); 
    break;
  case 2:
    // STgf32ii32, STgf32ii64, STgf32ri32, STgf32ri64, STgf32rr32, STgf32rr64...
    printMemOperand(MI, 1, O); 
    O << "], "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 3:
    // STpiF32, STpiF64, STpiPred, STpiU16, STpiU32, STpiU64
    printReturnOperand(MI, 0, O); 
    O << "], "; 
    printOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 1 encoded into 6 bits for 40 unique commands.
  switch ((Bits >> 24) & 63) {
  default:   // unreachable.
  case 0:
    // ADDri16, ADDri32, ADDri64, ADDrr16, ADDrr32, ADDrr64, ANDri16, ANDri32...
    O << ", "; 
    break;
  case 1:
    // BRAd, BRAdp, PTX_BAR_SYNC
    return;
    break;
  case 2:
    // CVT_f32_pred
    O << ", 0F3F800000, 0F00000000, "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 3:
    // CVT_f64_pred
    O << ", 0D3F80000000000000, 0D0000000000000000, "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 4:
    // CVT_u16_pred, CVT_u16_preda, CVT_u16_preds, CVT_u32_pred, CVT_u32_pred...
    O << ", 1, 0, "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 5:
    // LDcf32ii32, LDcf32ii64, LDcf32ri32, LDcf32ri64, LDcf32rr32, LDcf32rr64...
    O << ", ["; 
    break;
  case 6:
    // PTX_READ_CLOCK
    O << ", %clock"; 
    return;
    break;
  case 7:
    // PTX_READ_CLOCK64
    O << ", %clock64"; 
    return;
    break;
  case 8:
    // PTX_READ_CTAID_W
    O << ", %ctaid.w"; 
    return;
    break;
  case 9:
    // PTX_READ_CTAID_X
    O << ", %ctaid.x"; 
    return;
    break;
  case 10:
    // PTX_READ_CTAID_Y
    O << ", %ctaid.y"; 
    return;
    break;
  case 11:
    // PTX_READ_CTAID_Z
    O << ", %ctaid.z"; 
    return;
    break;
  case 12:
    // PTX_READ_GRIDID
    O << ", %gridid"; 
    return;
    break;
  case 13:
    // PTX_READ_LANEID
    O << ", %laneid"; 
    return;
    break;
  case 14:
    // PTX_READ_LANEMASK_EQ
    O << ", %lanemask_eq"; 
    return;
    break;
  case 15:
    // PTX_READ_LANEMASK_GE
    O << ", %lanemask_ge"; 
    return;
    break;
  case 16:
    // PTX_READ_LANEMASK_GT
    O << ", %lanemask_gt"; 
    return;
    break;
  case 17:
    // PTX_READ_LANEMASK_LE
    O << ", %lanemask_le"; 
    return;
    break;
  case 18:
    // PTX_READ_LANEMASK_LT
    O << ", %lanemask_lt"; 
    return;
    break;
  case 19:
    // PTX_READ_NCTAID_W
    O << ", %nctaid.w"; 
    return;
    break;
  case 20:
    // PTX_READ_NCTAID_X
    O << ", %nctaid.x"; 
    return;
    break;
  case 21:
    // PTX_READ_NCTAID_Y
    O << ", %nctaid.y"; 
    return;
    break;
  case 22:
    // PTX_READ_NCTAID_Z
    O << ", %nctaid.z"; 
    return;
    break;
  case 23:
    // PTX_READ_NSMID
    O << ", %nsmid"; 
    return;
    break;
  case 24:
    // PTX_READ_NTID_W
    O << ", %ntid.w"; 
    return;
    break;
  case 25:
    // PTX_READ_NTID_X
    O << ", %ntid.x"; 
    return;
    break;
  case 26:
    // PTX_READ_NTID_Y
    O << ", %ntid.y"; 
    return;
    break;
  case 27:
    // PTX_READ_NTID_Z
    O << ", %ntid.z"; 
    return;
    break;
  case 28:
    // PTX_READ_NWARPID
    O << ", %nwarpid"; 
    return;
    break;
  case 29:
    // PTX_READ_PM0
    O << ", %pm0"; 
    return;
    break;
  case 30:
    // PTX_READ_PM1
    O << ", %pm1"; 
    return;
    break;
  case 31:
    // PTX_READ_PM2
    O << ", %pm2"; 
    return;
    break;
  case 32:
    // PTX_READ_PM3
    O << ", %pm3"; 
    return;
    break;
  case 33:
    // PTX_READ_SMID
    O << ", %smid"; 
    return;
    break;
  case 34:
    // PTX_READ_TID_W
    O << ", %tid.w"; 
    return;
    break;
  case 35:
    // PTX_READ_TID_X
    O << ", %tid.x"; 
    return;
    break;
  case 36:
    // PTX_READ_TID_Y
    O << ", %tid.y"; 
    return;
    break;
  case 37:
    // PTX_READ_TID_Z
    O << ", %tid.z"; 
    return;
    break;
  case 38:
    // PTX_READ_WARPID
    O << ", %warpid"; 
    return;
    break;
  case 39:
    // STACKLOADF32, STACKLOADF64, STACKLOADI16, STACKLOADI32, STACKLOADI64
    O << ", s"; 
    printOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 2 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 22) & 3) {
  default:   // unreachable.
  case 0:
    // ADDri16, ADDri32, ADDri64, ADDrr16, ADDrr32, ADDrr64, ANDri16, ANDri32...
    printOperand(MI, 1, O); 
    break;
  case 1:
    // LDcf32ii32, LDcf32ii64, LDcf32ri32, LDcf32ri64, LDcf32rr32, LDcf32rr64...
    printMemOperand(MI, 1, O); 
    O << ']'; 
    return;
    break;
  case 2:
    // LDpiF32, LDpiF64, LDpiPred, LDpiU16, LDpiU32, LDpiU64
    printParamOperand(MI, 1, O); 
    O << ']'; 
    return;
    break;
  case 3:
    // PTX_SELPf32rr, PTX_SELPf64rr, PTX_SELPu16rr, PTX_SELPu32rr, PTX_SELPu6...
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 3 encoded into 2 bits for 3 unique commands.
  switch ((Bits >> 20) & 3) {
  default:   // unreachable.
  case 0:
    // ADDri16, ADDri32, ADDri64, ADDrr16, ADDrr32, ADDrr64, ANDri16, ANDri32...
    O << ", "; 
    printOperand(MI, 2, O); 
    break;
  case 1:
    // CVT_f32_f64, CVT_f32_u16, CVT_f32_u32, CVT_f32_u64, CVT_f64_f32, CVT_f...
    return;
    break;
  case 2:
    // CVT_pred_f32, CVT_pred_f64, CVT_pred_u16, CVT_pred_u32, CVT_pred_u64
    O << ", 0"; 
    return;
    break;
  }


  // Fragment 4 encoded into 2 bits for 3 unique commands.
  switch ((Bits >> 18) & 3) {
  default:   // unreachable.
  case 0:
    // ADDri16, ADDri32, ADDri64, ADDrr16, ADDrr32, ADDrr64, ANDri16, ANDri32...
    return;
    break;
  case 1:
    // FMADSM13rri32, FMADSM13rri64, FMADSM13rrr32, FMADSM13rrr64, FMADrri32,...
    O << ", "; 
    printOperand(MI, 3, O); 
    return;
    break;
  case 2:
    // SETPEQf32rr_and_not_r_o, SETPEQf32rr_and_not_r_u, SETPEQf32rr_or_not_r...
    O << ", !"; 
    printOperand(MI, 3, O); 
    return;
    break;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *PTXAsmPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 513 && "Invalid register number!");

  static const unsigned RegAsmOffset[] = {
    0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 34, 38, 42,
    46, 50, 54, 58, 62, 66, 70, 74, 78, 82, 86, 90, 94, 98,
    102, 106, 110, 114, 118, 122, 126, 130, 134, 138, 142, 146, 150, 154,
    158, 162, 166, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210,
    214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 254, 258, 262, 266,
    270, 274, 278, 282, 286, 290, 294, 298, 302, 306, 310, 314, 318, 322,
    326, 330, 334, 338, 342, 346, 350, 354, 358, 362, 366, 370, 374, 378,
    382, 386, 390, 395, 400, 405, 410, 415, 420, 425, 430, 435, 440, 445,
    450, 455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505, 510, 515,
    520, 525, 530, 533, 536, 539, 542, 545, 548, 551, 554, 557, 560, 564,
    568, 572, 576, 580, 584, 588, 592, 596, 600, 604, 608, 612, 616, 620,
    624, 628, 632, 636, 640, 644, 648, 652, 656, 660, 664, 668, 672, 676,
    680, 684, 688, 692, 696, 700, 704, 708, 712, 716, 720, 724, 728, 732,
    736, 740, 744, 748, 752, 756, 760, 764, 768, 772, 776, 780, 784, 788,
    792, 796, 800, 804, 808, 812, 816, 820, 824, 828, 832, 836, 840, 844,
    848, 852, 856, 860, 864, 868, 872, 876, 880, 884, 888, 892, 896, 900,
    904, 908, 912, 916, 920, 925, 930, 935, 940, 945, 950, 955, 960, 965,
    970, 975, 980, 985, 990, 995, 1000, 1005, 1010, 1015, 1020, 1025, 1030, 1035,
    1040, 1045, 1050, 1055, 1060, 1064, 1068, 1072, 1076, 1080, 1084, 1088, 1092, 1096,
    1100, 1105, 1110, 1115, 1120, 1125, 1130, 1135, 1140, 1145, 1150, 1155, 1160, 1165,
    1170, 1175, 1180, 1185, 1190, 1195, 1200, 1205, 1210, 1215, 1220, 1225, 1230, 1235,
    1240, 1245, 1250, 1255, 1260, 1265, 1270, 1275, 1280, 1285, 1290, 1295, 1300, 1305,
    1310, 1315, 1320, 1325, 1330, 1335, 1340, 1345, 1350, 1355, 1360, 1365, 1370, 1375,
    1380, 1385, 1390, 1395, 1400, 1405, 1410, 1415, 1420, 1425, 1430, 1435, 1440, 1445,
    1450, 1455, 1460, 1465, 1470, 1475, 1480, 1485, 1490, 1495, 1500, 1505, 1510, 1515,
    1520, 1525, 1530, 1535, 1540, 1545, 1550, 1556, 1562, 1568, 1574, 1580, 1586, 1592,
    1598, 1604, 1610, 1616, 1622, 1628, 1634, 1640, 1646, 1652, 1658, 1664, 1670, 1676,
    1682, 1688, 1694, 1700, 1706, 1712, 1718, 1722, 1726, 1730, 1734, 1738, 1742, 1746,
    1750, 1754, 1758, 1763, 1768, 1773, 1778, 1783, 1788, 1793, 1798, 1803, 1808, 1813,
    1818, 1823, 1828, 1833, 1838, 1843, 1848, 1853, 1858, 1863, 1868, 1873, 1878, 1883,
    1888, 1893, 1898, 1903, 1908, 1913, 1918, 1923, 1928, 1933, 1938, 1943, 1948, 1953,
    1958, 1963, 1968, 1973, 1978, 1983, 1988, 1993, 1998, 2003, 2008, 2013, 2018, 2023,
    2028, 2033, 2038, 2043, 2048, 2053, 2058, 2063, 2068, 2073, 2078, 2083, 2088, 2093,
    2098, 2103, 2108, 2113, 2118, 2123, 2128, 2133, 2138, 2143, 2148, 2153, 2158, 2163,
    2168, 2173, 2178, 2183, 2188, 2193, 2198, 2203, 2208, 2214, 2220, 2226, 2232, 2238,
    2244, 2250, 2256, 2262, 2268, 2274, 2280, 2286, 2292, 2298, 2304, 2310, 2316, 2322,
    2328, 2334, 2340, 2346, 2352, 2358, 2364, 2370, 0
  };

  const char *AsmStrs =
    "p0\000p1\000p2\000p3\000p4\000p5\000p6\000p7\000p8\000p9\000p10\000p11\000"
    "p12\000p13\000p14\000p15\000p16\000p17\000p18\000p19\000p20\000p21\000p"
    "22\000p23\000p24\000p25\000p26\000p27\000p28\000p29\000p30\000p31\000p3"
    "2\000p33\000p34\000p35\000p36\000p37\000p38\000p39\000p40\000p41\000p42"
    "\000p43\000p44\000p45\000p46\000p47\000p48\000p49\000p50\000p51\000p52\000"
    "p53\000p54\000p55\000p56\000p57\000p58\000p59\000p60\000p61\000p62\000p"
    "63\000p64\000p65\000p66\000p67\000p68\000p69\000p70\000p71\000p72\000p7"
    "3\000p74\000p75\000p76\000p77\000p78\000p79\000p80\000p81\000p82\000p83"
    "\000p84\000p85\000p86\000p87\000p88\000p89\000p90\000p91\000p92\000p93\000"
    "p94\000p95\000p96\000p97\000p98\000p99\000p100\000p101\000p102\000p103\000"
    "p104\000p105\000p106\000p107\000p108\000p109\000p110\000p111\000p112\000"
    "p113\000p114\000p115\000p116\000p117\000p118\000p119\000p120\000p121\000"
    "p122\000p123\000p124\000p125\000p126\000p127\000r0\000r1\000r2\000r3\000"
    "r4\000r5\000r6\000r7\000r8\000r9\000r10\000r11\000r12\000r13\000r14\000"
    "r15\000r16\000r17\000r18\000r19\000r20\000r21\000r22\000r23\000r24\000r"
    "25\000r26\000r27\000r28\000r29\000r30\000r31\000r32\000r33\000r34\000r3"
    "5\000r36\000r37\000r38\000r39\000r40\000r41\000r42\000r43\000r44\000r45"
    "\000r46\000r47\000r48\000r49\000r50\000r51\000r52\000r53\000r54\000r55\000"
    "r56\000r57\000r58\000r59\000r60\000r61\000r62\000r63\000r64\000r65\000r"
    "66\000r67\000r68\000r69\000r70\000r71\000r72\000r73\000r74\000r75\000r7"
    "6\000r77\000r78\000r79\000r80\000r81\000r82\000r83\000r84\000r85\000r86"
    "\000r87\000r88\000r89\000r90\000r91\000r92\000r93\000r94\000r95\000r96\000"
    "r97\000r98\000r99\000r100\000r101\000r102\000r103\000r104\000r105\000r1"
    "06\000r107\000r108\000r109\000r110\000r111\000r112\000r113\000r114\000r"
    "115\000r116\000r117\000r118\000r119\000r120\000r121\000r122\000r123\000"
    "r124\000r125\000r126\000r127\000rd0\000rd1\000rd2\000rd3\000rd4\000rd5\000"
    "rd6\000rd7\000rd8\000rd9\000rd10\000rd11\000rd12\000rd13\000rd14\000rd1"
    "5\000rd16\000rd17\000rd18\000rd19\000rd20\000rd21\000rd22\000rd23\000rd"
    "24\000rd25\000rd26\000rd27\000rd28\000rd29\000rd30\000rd31\000rd32\000r"
    "d33\000rd34\000rd35\000rd36\000rd37\000rd38\000rd39\000rd40\000rd41\000"
    "rd42\000rd43\000rd44\000rd45\000rd46\000rd47\000rd48\000rd49\000rd50\000"
    "rd51\000rd52\000rd53\000rd54\000rd55\000rd56\000rd57\000rd58\000rd59\000"
    "rd60\000rd61\000rd62\000rd63\000rd64\000rd65\000rd66\000rd67\000rd68\000"
    "rd69\000rd70\000rd71\000rd72\000rd73\000rd74\000rd75\000rd76\000rd77\000"
    "rd78\000rd79\000rd80\000rd81\000rd82\000rd83\000rd84\000rd85\000rd86\000"
    "rd87\000rd88\000rd89\000rd90\000rd91\000rd92\000rd93\000rd94\000rd95\000"
    "rd96\000rd97\000rd98\000rd99\000rd100\000rd101\000rd102\000rd103\000rd1"
    "04\000rd105\000rd106\000rd107\000rd108\000rd109\000rd110\000rd111\000rd"
    "112\000rd113\000rd114\000rd115\000rd116\000rd117\000rd118\000rd119\000r"
    "d120\000rd121\000rd122\000rd123\000rd124\000rd125\000rd126\000rd127\000"
    "rh0\000rh1\000rh2\000rh3\000rh4\000rh5\000rh6\000rh7\000rh8\000rh9\000r"
    "h10\000rh11\000rh12\000rh13\000rh14\000rh15\000rh16\000rh17\000rh18\000"
    "rh19\000rh20\000rh21\000rh22\000rh23\000rh24\000rh25\000rh26\000rh27\000"
    "rh28\000rh29\000rh30\000rh31\000rh32\000rh33\000rh34\000rh35\000rh36\000"
    "rh37\000rh38\000rh39\000rh40\000rh41\000rh42\000rh43\000rh44\000rh45\000"
    "rh46\000rh47\000rh48\000rh49\000rh50\000rh51\000rh52\000rh53\000rh54\000"
    "rh55\000rh56\000rh57\000rh58\000rh59\000rh60\000rh61\000rh62\000rh63\000"
    "rh64\000rh65\000rh66\000rh67\000rh68\000rh69\000rh70\000rh71\000rh72\000"
    "rh73\000rh74\000rh75\000rh76\000rh77\000rh78\000rh79\000rh80\000rh81\000"
    "rh82\000rh83\000rh84\000rh85\000rh86\000rh87\000rh88\000rh89\000rh90\000"
    "rh91\000rh92\000rh93\000rh94\000rh95\000rh96\000rh97\000rh98\000rh99\000"
    "rh100\000rh101\000rh102\000rh103\000rh104\000rh105\000rh106\000rh107\000"
    "rh108\000rh109\000rh110\000rh111\000rh112\000rh113\000rh114\000rh115\000"
    "rh116\000rh117\000rh118\000rh119\000rh120\000rh121\000rh122\000rh123\000"
    "rh124\000rh125\000rh126\000rh127\000";
  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}


#ifdef GET_INSTRUCTION_NAME
#undef GET_INSTRUCTION_NAME

/// getInstructionName: This method is automatically generated by tblgen
/// from the instruction set description.  This returns the enum name of the
/// specified instruction.
const char *PTXAsmPrinter::getInstructionName(unsigned Opcode) {
  assert(Opcode < 1049 && "Invalid instruction number!");

  static const unsigned InstAsmOffset[] = {
    0, 4, 14, 27, 36, 45, 50, 65, 79, 92, 106, 123, 133, 146, 
    151, 159, 167, 175, 183, 191, 199, 207, 215, 223, 234, 242, 250, 258, 
    269, 274, 280, 285, 297, 310, 322, 334, 346, 358, 371, 383, 395, 407, 
    420, 433, 446, 459, 472, 484, 496, 509, 523, 537, 549, 561, 573, 585, 
    597, 610, 624, 636, 648, 660, 672, 684, 697, 711, 723, 735, 747, 759, 
    767, 775, 783, 791, 799, 807, 812, 821, 830, 839, 848, 855, 862, 875, 
    888, 901, 914, 927, 940, 953, 966, 980, 994, 1008, 1022, 1032, 1042, 1052, 
    1062, 1071, 1080, 1089, 1098, 1107, 1116, 1125, 1134, 1141, 1148, 1156, 1164, 1173, 
    1182, 1191, 1200, 1211, 1222, 1233, 1244, 1255, 1266, 1277, 1288, 1299, 1310, 1321, 
    1332, 1343, 1354, 1365, 1376, 1387, 1398, 1409, 1420, 1431, 1442, 1453, 1464, 1475, 
    1486, 1497, 1508, 1519, 1530, 1541, 1552, 1563, 1574, 1585, 1596, 1607, 1618, 1629, 
    1640, 1651, 1662, 1673, 1684, 1695, 1706, 1717, 1728, 1739, 1750, 1761, 1772, 1783, 
    1794, 1805, 1816, 1827, 1838, 1849, 1860, 1871, 1882, 1893, 1904, 1915, 1926, 1937, 
    1948, 1959, 1970, 1981, 1992, 2003, 2014, 2025, 2036, 2047, 2058, 2069, 2080, 2091, 
    2102, 2113, 2124, 2135, 2146, 2157, 2168, 2179, 2190, 2198, 2206, 2215, 2223, 2231, 
    2239, 2250, 2261, 2272, 2283, 2294, 2305, 2316, 2327, 2338, 2349, 2360, 2371, 2382, 
    2393, 2404, 2415, 2426, 2437, 2448, 2459, 2470, 2481, 2492, 2503, 2514, 2525, 2536, 
    2547, 2558, 2569, 2578, 2587, 2596, 2605, 2615, 2625, 2634, 2643, 2652, 2661, 2670, 
    2679, 2689, 2699, 2707, 2715, 2723, 2731, 2739, 2747, 2754, 2761, 2768, 2778, 2785, 
    2792, 2799, 2809, 2822, 2837, 2854, 2871, 2888, 2905, 2922, 2938, 2954, 2975, 2996, 
    3017, 3038, 3059, 3077, 3095, 3113, 3131, 3146, 3162, 3178, 3194, 3210, 3227, 3240, 
    3253, 3266, 3279, 3293, 3308, 3323, 3338, 3353, 3369, 3383, 3397, 3411, 3425, 3439, 
    3447, 3455, 3463, 3471, 3479, 3487, 3491, 3515, 3539, 3559, 3579, 3593, 3616, 3639, 
    3658, 3677, 3691, 3715, 3739, 3759, 3779, 3803, 3827, 3847, 3867, 3881, 3904, 3927, 
    3946, 3965, 3979, 4003, 4027, 4047, 4067, 4079, 4101, 4119, 4140, 4157, 4179, 4197, 
    4209, 4231, 4249, 4270, 4287, 4309, 4327, 4339, 4361, 4379, 4400, 4417, 4439, 4457, 
    4469, 4491, 4509, 4530, 4547, 4569, 4587, 4599, 4621, 4639, 4660, 4677, 4699, 4717, 
    4729, 4751, 4769, 4790, 4807, 4829, 4847, 4871, 4895, 4915, 4935, 4949, 4972, 4995, 
    5014, 5033, 5047, 5071, 5095, 5115, 5135, 5159, 5183, 5203, 5223, 5237, 5260, 5283, 
    5302, 5321, 5335, 5359, 5383, 5403, 5423, 5435, 5457, 5475, 5496, 5513, 5535, 5553, 
    5565, 5587, 5605, 5626, 5643, 5665, 5683, 5695, 5717, 5735, 5756, 5773, 5795, 5813, 
    5825, 5847, 5865, 5886, 5903, 5925, 5943, 5955, 5977, 5995, 6016, 6033, 6055, 6073, 
    6085, 6107, 6125, 6146, 6163, 6185, 6203, 6215, 6237, 6255, 6276, 6293, 6315, 6333, 
    6345, 6367, 6385, 6406, 6423, 6445, 6463, 6475, 6497, 6515, 6536, 6553, 6575, 6593, 
    6605, 6627, 6645, 6666, 6683, 6705, 6723, 6735, 6757, 6775, 6796, 6813, 6835, 6853, 
    6865, 6887, 6905, 6926, 6943, 6965, 6983, 7007, 7031, 7051, 7071, 7085, 7108, 7131, 
    7150, 7169, 7183, 7207, 7231, 7251, 7271, 7295, 7319, 7339, 7359, 7373, 7396, 7419, 
    7438, 7457, 7471, 7495, 7519, 7539, 7559, 7571, 7593, 7611, 7632, 7649, 7671, 7689, 
    7701, 7723, 7741, 7762, 7779, 7801, 7819, 7831, 7853, 7871, 7892, 7909, 7931, 7949, 
    7961, 7983, 8001, 8022, 8039, 8061, 8079, 8091, 8113, 8131, 8152, 8169, 8191, 8209, 
    8221, 8243, 8261, 8282, 8299, 8321, 8339, 8351, 8373, 8391, 8412, 8429, 8451, 8469, 
    8481, 8503, 8521, 8542, 8559, 8581, 8599, 8611, 8633, 8651, 8672, 8689, 8711, 8729, 
    8741, 8763, 8781, 8802, 8819, 8841, 8859, 8871, 8893, 8911, 8932, 8949, 8971, 8989, 
    9001, 9023, 9041, 9062, 9079, 9101, 9119, 9143, 9167, 9187, 9207, 9221, 9244, 9267, 
    9286, 9305, 9319, 9343, 9367, 9387, 9407, 9431, 9455, 9475, 9495, 9509, 9532, 9555, 
    9574, 9593, 9607, 9631, 9655, 9675, 9695, 9707, 9729, 9747, 9768, 9785, 9807, 9825, 
    9837, 9859, 9877, 9898, 9915, 9937, 9955, 9967, 9989, 10007, 10028, 10045, 10067, 10085, 
    10097, 10119, 10137, 10158, 10175, 10197, 10215, 10227, 10249, 10267, 10288, 10305, 10327, 10345, 
    10357, 10379, 10397, 10418, 10435, 10457, 10475, 10487, 10509, 10527, 10548, 10565, 10587, 10605, 
    10617, 10639, 10657, 10678, 10695, 10717, 10735, 10747, 10769, 10787, 10808, 10825, 10847, 10865, 
    10877, 10899, 10917, 10938, 10955, 10977, 10995, 11007, 11029, 11047, 11068, 11085, 11107, 11125, 
    11137, 11159, 11177, 11198, 11215, 11237, 11255, 11279, 11303, 11323, 11343, 11357, 11380, 11403, 
    11422, 11441, 11455, 11479, 11503, 11523, 11543, 11567, 11591, 11611, 11631, 11645, 11668, 11691, 
    11710, 11729, 11743, 11767, 11791, 11811, 11831, 11843, 11865, 11883, 11904, 11921, 11943, 11961, 
    11973, 11995, 12013, 12034, 12051, 12073, 12091, 12103, 12125, 12143, 12164, 12181, 12203, 12221, 
    12233, 12255, 12273, 12294, 12311, 12333, 12351, 12363, 12385, 12403, 12424, 12441, 12463, 12481, 
    12493, 12515, 12533, 12554, 12571, 12593, 12611, 12623, 12645, 12663, 12684, 12701, 12723, 12741, 
    12753, 12775, 12793, 12814, 12831, 12853, 12871, 12883, 12905, 12923, 12944, 12961, 12983, 13001, 
    13013, 13035, 13053, 13074, 13091, 13113, 13131, 13143, 13165, 13183, 13204, 13221, 13243, 13261, 
    13273, 13295, 13313, 13334, 13351, 13373, 13391, 13415, 13439, 13459, 13479, 13493, 13516, 13539, 
    13558, 13577, 13591, 13615, 13639, 13659, 13679, 13703, 13727, 13747, 13767, 13781, 13804, 13827, 
    13846, 13865, 13879, 13903, 13927, 13947, 13967, 13979, 14001, 14019, 14040, 14057, 14079, 14097, 
    14109, 14131, 14149, 14170, 14187, 14209, 14227, 14239, 14261, 14279, 14300, 14317, 14339, 14357, 
    14369, 14391, 14409, 14430, 14447, 14469, 14487, 14499, 14521, 14539, 14560, 14577, 14599, 14617, 
    14629, 14651, 14669, 14690, 14707, 14729, 14747, 14755, 14763, 14771, 14779, 14787, 14795, 14803, 
    14811, 14819, 14827, 14835, 14843, 14851, 14859, 14867, 14875, 14883, 14891, 14899, 14907, 14915, 
    14923, 14931, 14939, 14947, 14955, 14963, 14976, 14989, 15002, 15015, 15028, 15042, 15056, 15070, 
    15084, 15098, 15109, 15120, 15131, 15142, 15153, 15164, 15175, 15186, 15197, 15208, 15219, 15230, 
    15241, 15252, 15263, 15274, 15285, 15296, 15307, 15318, 15329, 15340, 15351, 15362, 15373, 15384, 
    15395, 15406, 15417, 15428, 15439, 15450, 15461, 15472, 15483, 15494, 15505, 15516, 15527, 15538, 
    15549, 15560, 15571, 15582, 15593, 15604, 15615, 15626, 15637, 15648, 15659, 15670, 15681, 15692, 
    15703, 15714, 15725, 15736, 15747, 15758, 15766, 15774, 15783, 15791, 15799, 15807, 15818, 15829, 
    15840, 15851, 15862, 15873, 15884, 15895, 15906, 15917, 15928, 15939, 15950, 15961, 15972, 15983, 
    15994, 16005, 16016, 16027, 16038, 16049, 16060, 16071, 16082, 16093, 16104, 16115, 16126, 16137, 
    16145, 16153, 16161, 16169, 16177, 16185, 16193, 16201, 16209, 16220, 16228, 16236, 16244, 0
  };

  const char *Strs =
    "PHI\000INLINEASM\000PROLOG_LABEL\000EH_LABEL\000GC_LABEL\000KILL\000EXT"
    "RACT_SUBREG\000INSERT_SUBREG\000IMPLICIT_DEF\000SUBREG_TO_REG\000COPY_T"
    "O_REGCLASS\000DBG_VALUE\000REG_SEQUENCE\000COPY\000ADDri16\000ADDri32\000"
    "ADDri64\000ADDrr16\000ADDrr32\000ADDrr64\000ANDri16\000ANDri32\000ANDri"
    "64\000ANDripreds\000ANDrr16\000ANDrr32\000ANDrr64\000ANDrrpreds\000BRAd"
    "\000BRAdp\000CALL\000CVT_f32_f64\000CVT_f32_pred\000CVT_f32_u16\000CVT_"
    "f32_u32\000CVT_f32_u64\000CVT_f64_f32\000CVT_f64_pred\000CVT_f64_u16\000"
    "CVT_f64_u32\000CVT_f64_u64\000CVT_pred_f32\000CVT_pred_f64\000CVT_pred_"
    "u16\000CVT_pred_u32\000CVT_pred_u64\000CVT_u16_f32\000CVT_u16_f64\000CV"
    "T_u16_pred\000CVT_u16_preda\000CVT_u16_preds\000CVT_u16_u32\000CVT_u16_"
    "u64\000CVT_u32_b16\000CVT_u32_f32\000CVT_u32_f64\000CVT_u32_pred\000CVT"
    "_u32_preds\000CVT_u32_s16\000CVT_u32_u16\000CVT_u32_u64\000CVT_u64_f32\000"
    "CVT_u64_f64\000CVT_u64_pred\000CVT_u64_preds\000CVT_u64_s16\000CVT_u64_"
    "s32\000CVT_u64_u16\000CVT_u64_u32\000DIVri16\000DIVri32\000DIVri64\000D"
    "IVrr16\000DIVrr32\000DIVrr64\000EXIT\000FADDri32\000FADDri64\000FADDrr3"
    "2\000FADDrr64\000FCOS32\000FCOS64\000FDIVri32SM10\000FDIVri32SM13\000FD"
    "IVri64SM10\000FDIVri64SM13\000FDIVrr32SM10\000FDIVrr32SM13\000FDIVrr64S"
    "M10\000FDIVrr64SM13\000FMADSM13rri32\000FMADSM13rri64\000FMADSM13rrr32\000"
    "FMADSM13rrr64\000FMADrri32\000FMADrri64\000FMADrrr32\000FMADrrr64\000FM"
    "ULri32\000FMULri64\000FMULrr32\000FMULrr64\000FNEGri32\000FNEGri64\000F"
    "NEGrr32\000FNEGrr64\000FSIN32\000FSIN64\000FSQRT32\000FSQRT64\000FSUBri"
    "32\000FSUBri64\000FSUBrr32\000FSUBrr64\000LDcf32ii32\000LDcf32ii64\000L"
    "Dcf32ri32\000LDcf32ri64\000LDcf32rr32\000LDcf32rr64\000LDcf64ii32\000LD"
    "cf64ii64\000LDcf64ri32\000LDcf64ri64\000LDcf64rr32\000LDcf64rr64\000LDc"
    "u16ii32\000LDcu16ii64\000LDcu16ri32\000LDcu16ri64\000LDcu16rr32\000LDcu"
    "16rr64\000LDcu32ii32\000LDcu32ii64\000LDcu32ri32\000LDcu32ri64\000LDcu3"
    "2rr32\000LDcu32rr64\000LDcu64ii32\000LDcu64ii64\000LDcu64ri32\000LDcu64"
    "ri64\000LDcu64rr32\000LDcu64rr64\000LDgf32ii32\000LDgf32ii64\000LDgf32r"
    "i32\000LDgf32ri64\000LDgf32rr32\000LDgf32rr64\000LDgf64ii32\000LDgf64ii"
    "64\000LDgf64ri32\000LDgf64ri64\000LDgf64rr32\000LDgf64rr64\000LDgu16ii3"
    "2\000LDgu16ii64\000LDgu16ri32\000LDgu16ri64\000LDgu16rr32\000LDgu16rr64"
    "\000LDgu32ii32\000LDgu32ii64\000LDgu32ri32\000LDgu32ri64\000LDgu32rr32\000"
    "LDgu32rr64\000LDgu64ii32\000LDgu64ii64\000LDgu64ri32\000LDgu64ri64\000L"
    "Dgu64rr32\000LDgu64rr64\000LDlf32ii32\000LDlf32ii64\000LDlf32ri32\000LD"
    "lf32ri64\000LDlf32rr32\000LDlf32rr64\000LDlf64ii32\000LDlf64ii64\000LDl"
    "f64ri32\000LDlf64ri64\000LDlf64rr32\000LDlf64rr64\000LDlu16ii32\000LDlu"
    "16ii64\000LDlu16ri32\000LDlu16ri64\000LDlu16rr32\000LDlu16rr64\000LDlu3"
    "2ii32\000LDlu32ii64\000LDlu32ri32\000LDlu32ri64\000LDlu32rr32\000LDlu32"
    "rr64\000LDlu64ii32\000LDlu64ii64\000LDlu64ri32\000LDlu64ri64\000LDlu64r"
    "r32\000LDlu64rr64\000LDpiF32\000LDpiF64\000LDpiPred\000LDpiU16\000LDpiU"
    "32\000LDpiU64\000LDsf32ii32\000LDsf32ii64\000LDsf32ri32\000LDsf32ri64\000"
    "LDsf32rr32\000LDsf32rr64\000LDsf64ii32\000LDsf64ii64\000LDsf64ri32\000L"
    "Dsf64ri64\000LDsf64rr32\000LDsf64rr64\000LDsu16ii32\000LDsu16ii64\000LD"
    "su16ri32\000LDsu16ri64\000LDsu16rr32\000LDsu16rr64\000LDsu32ii32\000LDs"
    "u32ii64\000LDsu32ri32\000LDsu32ri64\000LDsu32rr32\000LDsu32rr64\000LDsu"
    "64ii32\000LDsu64ii64\000LDsu64ri32\000LDsu64ri64\000LDsu64rr32\000LDsu6"
    "4rr64\000MOVF32ri\000MOVF32rr\000MOVF64ri\000MOVF64rr\000MOVPREDri\000M"
    "OVPREDrr\000MOVU16ri\000MOVU16rr\000MOVU32ri\000MOVU32rr\000MOVU64ri\000"
    "MOVU64rr\000MOVaddr32\000MOVaddr64\000MULri16\000MULri32\000MULri64\000"
    "MULrr16\000MULrr32\000MULrr64\000ORri16\000ORri32\000ORri64\000ORripred"
    "s\000ORrr16\000ORrr32\000ORrr64\000ORrrpreds\000PTX_BAR_SYNC\000PTX_REA"
    "D_CLOCK\000PTX_READ_CLOCK64\000PTX_READ_CTAID_W\000PTX_READ_CTAID_X\000"
    "PTX_READ_CTAID_Y\000PTX_READ_CTAID_Z\000PTX_READ_GRIDID\000PTX_READ_LAN"
    "EID\000PTX_READ_LANEMASK_EQ\000PTX_READ_LANEMASK_GE\000PTX_READ_LANEMAS"
    "K_GT\000PTX_READ_LANEMASK_LE\000PTX_READ_LANEMASK_LT\000PTX_READ_NCTAID"
    "_W\000PTX_READ_NCTAID_X\000PTX_READ_NCTAID_Y\000PTX_READ_NCTAID_Z\000PT"
    "X_READ_NSMID\000PTX_READ_NTID_W\000PTX_READ_NTID_X\000PTX_READ_NTID_Y\000"
    "PTX_READ_NTID_Z\000PTX_READ_NWARPID\000PTX_READ_PM0\000PTX_READ_PM1\000"
    "PTX_READ_PM2\000PTX_READ_PM3\000PTX_READ_SMID\000PTX_READ_TID_W\000PTX_"
    "READ_TID_X\000PTX_READ_TID_Y\000PTX_READ_TID_Z\000PTX_READ_WARPID\000PT"
    "X_SELPf32rr\000PTX_SELPf64rr\000PTX_SELPu16rr\000PTX_SELPu32rr\000PTX_S"
    "ELPu64rr\000REMri16\000REMri32\000REMri64\000REMrr16\000REMrr32\000REMr"
    "r64\000RET\000SETPEQf32rr_and_not_r_o\000SETPEQf32rr_and_not_r_u\000SET"
    "PEQf32rr_and_r_o\000SETPEQf32rr_and_r_u\000SETPEQf32rr_o\000SETPEQf32rr"
    "_or_not_r_o\000SETPEQf32rr_or_not_r_u\000SETPEQf32rr_or_r_o\000SETPEQf3"
    "2rr_or_r_u\000SETPEQf32rr_u\000SETPEQf32rr_xor_not_r_o\000SETPEQf32rr_x"
    "or_not_r_u\000SETPEQf32rr_xor_r_o\000SETPEQf32rr_xor_r_u\000SETPEQf64rr"
    "_and_not_r_o\000SETPEQf64rr_and_not_r_u\000SETPEQf64rr_and_r_o\000SETPE"
    "Qf64rr_and_r_u\000SETPEQf64rr_o\000SETPEQf64rr_or_not_r_o\000SETPEQf64r"
    "r_or_not_r_u\000SETPEQf64rr_or_r_o\000SETPEQf64rr_or_r_u\000SETPEQf64rr"
    "_u\000SETPEQf64rr_xor_not_r_o\000SETPEQf64rr_xor_not_r_u\000SETPEQf64rr"
    "_xor_r_o\000SETPEQf64rr_xor_r_u\000SETPEQu16ri\000SETPEQu16ri_and_not_r"
    "\000SETPEQu16ri_and_r\000SETPEQu16ri_or_not_r\000SETPEQu16ri_or_r\000SE"
    "TPEQu16ri_xor_not_r\000SETPEQu16ri_xor_r\000SETPEQu16rr\000SETPEQu16rr_"
    "and_not_r\000SETPEQu16rr_and_r\000SETPEQu16rr_or_not_r\000SETPEQu16rr_o"
    "r_r\000SETPEQu16rr_xor_not_r\000SETPEQu16rr_xor_r\000SETPEQu32ri\000SET"
    "PEQu32ri_and_not_r\000SETPEQu32ri_and_r\000SETPEQu32ri_or_not_r\000SETP"
    "EQu32ri_or_r\000SETPEQu32ri_xor_not_r\000SETPEQu32ri_xor_r\000SETPEQu32"
    "rr\000SETPEQu32rr_and_not_r\000SETPEQu32rr_and_r\000SETPEQu32rr_or_not_"
    "r\000SETPEQu32rr_or_r\000SETPEQu32rr_xor_not_r\000SETPEQu32rr_xor_r\000"
    "SETPEQu64ri\000SETPEQu64ri_and_not_r\000SETPEQu64ri_and_r\000SETPEQu64r"
    "i_or_not_r\000SETPEQu64ri_or_r\000SETPEQu64ri_xor_not_r\000SETPEQu64ri_"
    "xor_r\000SETPEQu64rr\000SETPEQu64rr_and_not_r\000SETPEQu64rr_and_r\000S"
    "ETPEQu64rr_or_not_r\000SETPEQu64rr_or_r\000SETPEQu64rr_xor_not_r\000SET"
    "PEQu64rr_xor_r\000SETPGEf32rr_and_not_r_o\000SETPGEf32rr_and_not_r_u\000"
    "SETPGEf32rr_and_r_o\000SETPGEf32rr_and_r_u\000SETPGEf32rr_o\000SETPGEf3"
    "2rr_or_not_r_o\000SETPGEf32rr_or_not_r_u\000SETPGEf32rr_or_r_o\000SETPG"
    "Ef32rr_or_r_u\000SETPGEf32rr_u\000SETPGEf32rr_xor_not_r_o\000SETPGEf32r"
    "r_xor_not_r_u\000SETPGEf32rr_xor_r_o\000SETPGEf32rr_xor_r_u\000SETPGEf6"
    "4rr_and_not_r_o\000SETPGEf64rr_and_not_r_u\000SETPGEf64rr_and_r_o\000SE"
    "TPGEf64rr_and_r_u\000SETPGEf64rr_o\000SETPGEf64rr_or_not_r_o\000SETPGEf"
    "64rr_or_not_r_u\000SETPGEf64rr_or_r_o\000SETPGEf64rr_or_r_u\000SETPGEf6"
    "4rr_u\000SETPGEf64rr_xor_not_r_o\000SETPGEf64rr_xor_not_r_u\000SETPGEf6"
    "4rr_xor_r_o\000SETPGEf64rr_xor_r_u\000SETPGEs16ri\000SETPGEs16ri_and_no"
    "t_r\000SETPGEs16ri_and_r\000SETPGEs16ri_or_not_r\000SETPGEs16ri_or_r\000"
    "SETPGEs16ri_xor_not_r\000SETPGEs16ri_xor_r\000SETPGEs16rr\000SETPGEs16r"
    "r_and_not_r\000SETPGEs16rr_and_r\000SETPGEs16rr_or_not_r\000SETPGEs16rr"
    "_or_r\000SETPGEs16rr_xor_not_r\000SETPGEs16rr_xor_r\000SETPGEs32ri\000S"
    "ETPGEs32ri_and_not_r\000SETPGEs32ri_and_r\000SETPGEs32ri_or_not_r\000SE"
    "TPGEs32ri_or_r\000SETPGEs32ri_xor_not_r\000SETPGEs32ri_xor_r\000SETPGEs"
    "32rr\000SETPGEs32rr_and_not_r\000SETPGEs32rr_and_r\000SETPGEs32rr_or_no"
    "t_r\000SETPGEs32rr_or_r\000SETPGEs32rr_xor_not_r\000SETPGEs32rr_xor_r\000"
    "SETPGEs64ri\000SETPGEs64ri_and_not_r\000SETPGEs64ri_and_r\000SETPGEs64r"
    "i_or_not_r\000SETPGEs64ri_or_r\000SETPGEs64ri_xor_not_r\000SETPGEs64ri_"
    "xor_r\000SETPGEs64rr\000SETPGEs64rr_and_not_r\000SETPGEs64rr_and_r\000S"
    "ETPGEs64rr_or_not_r\000SETPGEs64rr_or_r\000SETPGEs64rr_xor_not_r\000SET"
    "PGEs64rr_xor_r\000SETPGEu16ri\000SETPGEu16ri_and_not_r\000SETPGEu16ri_a"
    "nd_r\000SETPGEu16ri_or_not_r\000SETPGEu16ri_or_r\000SETPGEu16ri_xor_not"
    "_r\000SETPGEu16ri_xor_r\000SETPGEu16rr\000SETPGEu16rr_and_not_r\000SETP"
    "GEu16rr_and_r\000SETPGEu16rr_or_not_r\000SETPGEu16rr_or_r\000SETPGEu16r"
    "r_xor_not_r\000SETPGEu16rr_xor_r\000SETPGEu32ri\000SETPGEu32ri_and_not_"
    "r\000SETPGEu32ri_and_r\000SETPGEu32ri_or_not_r\000SETPGEu32ri_or_r\000S"
    "ETPGEu32ri_xor_not_r\000SETPGEu32ri_xor_r\000SETPGEu32rr\000SETPGEu32rr"
    "_and_not_r\000SETPGEu32rr_and_r\000SETPGEu32rr_or_not_r\000SETPGEu32rr_"
    "or_r\000SETPGEu32rr_xor_not_r\000SETPGEu32rr_xor_r\000SETPGEu64ri\000SE"
    "TPGEu64ri_and_not_r\000SETPGEu64ri_and_r\000SETPGEu64ri_or_not_r\000SET"
    "PGEu64ri_or_r\000SETPGEu64ri_xor_not_r\000SETPGEu64ri_xor_r\000SETPGEu6"
    "4rr\000SETPGEu64rr_and_not_r\000SETPGEu64rr_and_r\000SETPGEu64rr_or_not"
    "_r\000SETPGEu64rr_or_r\000SETPGEu64rr_xor_not_r\000SETPGEu64rr_xor_r\000"
    "SETPGTf32rr_and_not_r_o\000SETPGTf32rr_and_not_r_u\000SETPGTf32rr_and_r"
    "_o\000SETPGTf32rr_and_r_u\000SETPGTf32rr_o\000SETPGTf32rr_or_not_r_o\000"
    "SETPGTf32rr_or_not_r_u\000SETPGTf32rr_or_r_o\000SETPGTf32rr_or_r_u\000S"
    "ETPGTf32rr_u\000SETPGTf32rr_xor_not_r_o\000SETPGTf32rr_xor_not_r_u\000S"
    "ETPGTf32rr_xor_r_o\000SETPGTf32rr_xor_r_u\000SETPGTf64rr_and_not_r_o\000"
    "SETPGTf64rr_and_not_r_u\000SETPGTf64rr_and_r_o\000SETPGTf64rr_and_r_u\000"
    "SETPGTf64rr_o\000SETPGTf64rr_or_not_r_o\000SETPGTf64rr_or_not_r_u\000SE"
    "TPGTf64rr_or_r_o\000SETPGTf64rr_or_r_u\000SETPGTf64rr_u\000SETPGTf64rr_"
    "xor_not_r_o\000SETPGTf64rr_xor_not_r_u\000SETPGTf64rr_xor_r_o\000SETPGT"
    "f64rr_xor_r_u\000SETPGTs16ri\000SETPGTs16ri_and_not_r\000SETPGTs16ri_an"
    "d_r\000SETPGTs16ri_or_not_r\000SETPGTs16ri_or_r\000SETPGTs16ri_xor_not_"
    "r\000SETPGTs16ri_xor_r\000SETPGTs16rr\000SETPGTs16rr_and_not_r\000SETPG"
    "Ts16rr_and_r\000SETPGTs16rr_or_not_r\000SETPGTs16rr_or_r\000SETPGTs16rr"
    "_xor_not_r\000SETPGTs16rr_xor_r\000SETPGTs32ri\000SETPGTs32ri_and_not_r"
    "\000SETPGTs32ri_and_r\000SETPGTs32ri_or_not_r\000SETPGTs32ri_or_r\000SE"
    "TPGTs32ri_xor_not_r\000SETPGTs32ri_xor_r\000SETPGTs32rr\000SETPGTs32rr_"
    "and_not_r\000SETPGTs32rr_and_r\000SETPGTs32rr_or_not_r\000SETPGTs32rr_o"
    "r_r\000SETPGTs32rr_xor_not_r\000SETPGTs32rr_xor_r\000SETPGTs64ri\000SET"
    "PGTs64ri_and_not_r\000SETPGTs64ri_and_r\000SETPGTs64ri_or_not_r\000SETP"
    "GTs64ri_or_r\000SETPGTs64ri_xor_not_r\000SETPGTs64ri_xor_r\000SETPGTs64"
    "rr\000SETPGTs64rr_and_not_r\000SETPGTs64rr_and_r\000SETPGTs64rr_or_not_"
    "r\000SETPGTs64rr_or_r\000SETPGTs64rr_xor_not_r\000SETPGTs64rr_xor_r\000"
    "SETPGTu16ri\000SETPGTu16ri_and_not_r\000SETPGTu16ri_and_r\000SETPGTu16r"
    "i_or_not_r\000SETPGTu16ri_or_r\000SETPGTu16ri_xor_not_r\000SETPGTu16ri_"
    "xor_r\000SETPGTu16rr\000SETPGTu16rr_and_not_r\000SETPGTu16rr_and_r\000S"
    "ETPGTu16rr_or_not_r\000SETPGTu16rr_or_r\000SETPGTu16rr_xor_not_r\000SET"
    "PGTu16rr_xor_r\000SETPGTu32ri\000SETPGTu32ri_and_not_r\000SETPGTu32ri_a"
    "nd_r\000SETPGTu32ri_or_not_r\000SETPGTu32ri_or_r\000SETPGTu32ri_xor_not"
    "_r\000SETPGTu32ri_xor_r\000SETPGTu32rr\000SETPGTu32rr_and_not_r\000SETP"
    "GTu32rr_and_r\000SETPGTu32rr_or_not_r\000SETPGTu32rr_or_r\000SETPGTu32r"
    "r_xor_not_r\000SETPGTu32rr_xor_r\000SETPGTu64ri\000SETPGTu64ri_and_not_"
    "r\000SETPGTu64ri_and_r\000SETPGTu64ri_or_not_r\000SETPGTu64ri_or_r\000S"
    "ETPGTu64ri_xor_not_r\000SETPGTu64ri_xor_r\000SETPGTu64rr\000SETPGTu64rr"
    "_and_not_r\000SETPGTu64rr_and_r\000SETPGTu64rr_or_not_r\000SETPGTu64rr_"
    "or_r\000SETPGTu64rr_xor_not_r\000SETPGTu64rr_xor_r\000SETPLEf32rr_and_n"
    "ot_r_o\000SETPLEf32rr_and_not_r_u\000SETPLEf32rr_and_r_o\000SETPLEf32rr"
    "_and_r_u\000SETPLEf32rr_o\000SETPLEf32rr_or_not_r_o\000SETPLEf32rr_or_n"
    "ot_r_u\000SETPLEf32rr_or_r_o\000SETPLEf32rr_or_r_u\000SETPLEf32rr_u\000"
    "SETPLEf32rr_xor_not_r_o\000SETPLEf32rr_xor_not_r_u\000SETPLEf32rr_xor_r"
    "_o\000SETPLEf32rr_xor_r_u\000SETPLEf64rr_and_not_r_o\000SETPLEf64rr_and"
    "_not_r_u\000SETPLEf64rr_and_r_o\000SETPLEf64rr_and_r_u\000SETPLEf64rr_o"
    "\000SETPLEf64rr_or_not_r_o\000SETPLEf64rr_or_not_r_u\000SETPLEf64rr_or_"
    "r_o\000SETPLEf64rr_or_r_u\000SETPLEf64rr_u\000SETPLEf64rr_xor_not_r_o\000"
    "SETPLEf64rr_xor_not_r_u\000SETPLEf64rr_xor_r_o\000SETPLEf64rr_xor_r_u\000"
    "SETPLEs16ri\000SETPLEs16ri_and_not_r\000SETPLEs16ri_and_r\000SETPLEs16r"
    "i_or_not_r\000SETPLEs16ri_or_r\000SETPLEs16ri_xor_not_r\000SETPLEs16ri_"
    "xor_r\000SETPLEs16rr\000SETPLEs16rr_and_not_r\000SETPLEs16rr_and_r\000S"
    "ETPLEs16rr_or_not_r\000SETPLEs16rr_or_r\000SETPLEs16rr_xor_not_r\000SET"
    "PLEs16rr_xor_r\000SETPLEs32ri\000SETPLEs32ri_and_not_r\000SETPLEs32ri_a"
    "nd_r\000SETPLEs32ri_or_not_r\000SETPLEs32ri_or_r\000SETPLEs32ri_xor_not"
    "_r\000SETPLEs32ri_xor_r\000SETPLEs32rr\000SETPLEs32rr_and_not_r\000SETP"
    "LEs32rr_and_r\000SETPLEs32rr_or_not_r\000SETPLEs32rr_or_r\000SETPLEs32r"
    "r_xor_not_r\000SETPLEs32rr_xor_r\000SETPLEs64ri\000SETPLEs64ri_and_not_"
    "r\000SETPLEs64ri_and_r\000SETPLEs64ri_or_not_r\000SETPLEs64ri_or_r\000S"
    "ETPLEs64ri_xor_not_r\000SETPLEs64ri_xor_r\000SETPLEs64rr\000SETPLEs64rr"
    "_and_not_r\000SETPLEs64rr_and_r\000SETPLEs64rr_or_not_r\000SETPLEs64rr_"
    "or_r\000SETPLEs64rr_xor_not_r\000SETPLEs64rr_xor_r\000SETPLEu16ri\000SE"
    "TPLEu16ri_and_not_r\000SETPLEu16ri_and_r\000SETPLEu16ri_or_not_r\000SET"
    "PLEu16ri_or_r\000SETPLEu16ri_xor_not_r\000SETPLEu16ri_xor_r\000SETPLEu1"
    "6rr\000SETPLEu16rr_and_not_r\000SETPLEu16rr_and_r\000SETPLEu16rr_or_not"
    "_r\000SETPLEu16rr_or_r\000SETPLEu16rr_xor_not_r\000SETPLEu16rr_xor_r\000"
    "SETPLEu32ri\000SETPLEu32ri_and_not_r\000SETPLEu32ri_and_r\000SETPLEu32r"
    "i_or_not_r\000SETPLEu32ri_or_r\000SETPLEu32ri_xor_not_r\000SETPLEu32ri_"
    "xor_r\000SETPLEu32rr\000SETPLEu32rr_and_not_r\000SETPLEu32rr_and_r\000S"
    "ETPLEu32rr_or_not_r\000SETPLEu32rr_or_r\000SETPLEu32rr_xor_not_r\000SET"
    "PLEu32rr_xor_r\000SETPLEu64ri\000SETPLEu64ri_and_not_r\000SETPLEu64ri_a"
    "nd_r\000SETPLEu64ri_or_not_r\000SETPLEu64ri_or_r\000SETPLEu64ri_xor_not"
    "_r\000SETPLEu64ri_xor_r\000SETPLEu64rr\000SETPLEu64rr_and_not_r\000SETP"
    "LEu64rr_and_r\000SETPLEu64rr_or_not_r\000SETPLEu64rr_or_r\000SETPLEu64r"
    "r_xor_not_r\000SETPLEu64rr_xor_r\000SETPLTf32rr_and_not_r_o\000SETPLTf3"
    "2rr_and_not_r_u\000SETPLTf32rr_and_r_o\000SETPLTf32rr_and_r_u\000SETPLT"
    "f32rr_o\000SETPLTf32rr_or_not_r_o\000SETPLTf32rr_or_not_r_u\000SETPLTf3"
    "2rr_or_r_o\000SETPLTf32rr_or_r_u\000SETPLTf32rr_u\000SETPLTf32rr_xor_no"
    "t_r_o\000SETPLTf32rr_xor_not_r_u\000SETPLTf32rr_xor_r_o\000SETPLTf32rr_"
    "xor_r_u\000SETPLTf64rr_and_not_r_o\000SETPLTf64rr_and_not_r_u\000SETPLT"
    "f64rr_and_r_o\000SETPLTf64rr_and_r_u\000SETPLTf64rr_o\000SETPLTf64rr_or"
    "_not_r_o\000SETPLTf64rr_or_not_r_u\000SETPLTf64rr_or_r_o\000SETPLTf64rr"
    "_or_r_u\000SETPLTf64rr_u\000SETPLTf64rr_xor_not_r_o\000SETPLTf64rr_xor_"
    "not_r_u\000SETPLTf64rr_xor_r_o\000SETPLTf64rr_xor_r_u\000SETPLTs16ri\000"
    "SETPLTs16ri_and_not_r\000SETPLTs16ri_and_r\000SETPLTs16ri_or_not_r\000S"
    "ETPLTs16ri_or_r\000SETPLTs16ri_xor_not_r\000SETPLTs16ri_xor_r\000SETPLT"
    "s16rr\000SETPLTs16rr_and_not_r\000SETPLTs16rr_and_r\000SETPLTs16rr_or_n"
    "ot_r\000SETPLTs16rr_or_r\000SETPLTs16rr_xor_not_r\000SETPLTs16rr_xor_r\000"
    "SETPLTs32ri\000SETPLTs32ri_and_not_r\000SETPLTs32ri_and_r\000SETPLTs32r"
    "i_or_not_r\000SETPLTs32ri_or_r\000SETPLTs32ri_xor_not_r\000SETPLTs32ri_"
    "xor_r\000SETPLTs32rr\000SETPLTs32rr_and_not_r\000SETPLTs32rr_and_r\000S"
    "ETPLTs32rr_or_not_r\000SETPLTs32rr_or_r\000SETPLTs32rr_xor_not_r\000SET"
    "PLTs32rr_xor_r\000SETPLTs64ri\000SETPLTs64ri_and_not_r\000SETPLTs64ri_a"
    "nd_r\000SETPLTs64ri_or_not_r\000SETPLTs64ri_or_r\000SETPLTs64ri_xor_not"
    "_r\000SETPLTs64ri_xor_r\000SETPLTs64rr\000SETPLTs64rr_and_not_r\000SETP"
    "LTs64rr_and_r\000SETPLTs64rr_or_not_r\000SETPLTs64rr_or_r\000SETPLTs64r"
    "r_xor_not_r\000SETPLTs64rr_xor_r\000SETPLTu16ri\000SETPLTu16ri_and_not_"
    "r\000SETPLTu16ri_and_r\000SETPLTu16ri_or_not_r\000SETPLTu16ri_or_r\000S"
    "ETPLTu16ri_xor_not_r\000SETPLTu16ri_xor_r\000SETPLTu16rr\000SETPLTu16rr"
    "_and_not_r\000SETPLTu16rr_and_r\000SETPLTu16rr_or_not_r\000SETPLTu16rr_"
    "or_r\000SETPLTu16rr_xor_not_r\000SETPLTu16rr_xor_r\000SETPLTu32ri\000SE"
    "TPLTu32ri_and_not_r\000SETPLTu32ri_and_r\000SETPLTu32ri_or_not_r\000SET"
    "PLTu32ri_or_r\000SETPLTu32ri_xor_not_r\000SETPLTu32ri_xor_r\000SETPLTu3"
    "2rr\000SETPLTu32rr_and_not_r\000SETPLTu32rr_and_r\000SETPLTu32rr_or_not"
    "_r\000SETPLTu32rr_or_r\000SETPLTu32rr_xor_not_r\000SETPLTu32rr_xor_r\000"
    "SETPLTu64ri\000SETPLTu64ri_and_not_r\000SETPLTu64ri_and_r\000SETPLTu64r"
    "i_or_not_r\000SETPLTu64ri_or_r\000SETPLTu64ri_xor_not_r\000SETPLTu64ri_"
    "xor_r\000SETPLTu64rr\000SETPLTu64rr_and_not_r\000SETPLTu64rr_and_r\000S"
    "ETPLTu64rr_or_not_r\000SETPLTu64rr_or_r\000SETPLTu64rr_xor_not_r\000SET"
    "PLTu64rr_xor_r\000SETPNEf32rr_and_not_r_o\000SETPNEf32rr_and_not_r_u\000"
    "SETPNEf32rr_and_r_o\000SETPNEf32rr_and_r_u\000SETPNEf32rr_o\000SETPNEf3"
    "2rr_or_not_r_o\000SETPNEf32rr_or_not_r_u\000SETPNEf32rr_or_r_o\000SETPN"
    "Ef32rr_or_r_u\000SETPNEf32rr_u\000SETPNEf32rr_xor_not_r_o\000SETPNEf32r"
    "r_xor_not_r_u\000SETPNEf32rr_xor_r_o\000SETPNEf32rr_xor_r_u\000SETPNEf6"
    "4rr_and_not_r_o\000SETPNEf64rr_and_not_r_u\000SETPNEf64rr_and_r_o\000SE"
    "TPNEf64rr_and_r_u\000SETPNEf64rr_o\000SETPNEf64rr_or_not_r_o\000SETPNEf"
    "64rr_or_not_r_u\000SETPNEf64rr_or_r_o\000SETPNEf64rr_or_r_u\000SETPNEf6"
    "4rr_u\000SETPNEf64rr_xor_not_r_o\000SETPNEf64rr_xor_not_r_u\000SETPNEf6"
    "4rr_xor_r_o\000SETPNEf64rr_xor_r_u\000SETPNEu16ri\000SETPNEu16ri_and_no"
    "t_r\000SETPNEu16ri_and_r\000SETPNEu16ri_or_not_r\000SETPNEu16ri_or_r\000"
    "SETPNEu16ri_xor_not_r\000SETPNEu16ri_xor_r\000SETPNEu16rr\000SETPNEu16r"
    "r_and_not_r\000SETPNEu16rr_and_r\000SETPNEu16rr_or_not_r\000SETPNEu16rr"
    "_or_r\000SETPNEu16rr_xor_not_r\000SETPNEu16rr_xor_r\000SETPNEu32ri\000S"
    "ETPNEu32ri_and_not_r\000SETPNEu32ri_and_r\000SETPNEu32ri_or_not_r\000SE"
    "TPNEu32ri_or_r\000SETPNEu32ri_xor_not_r\000SETPNEu32ri_xor_r\000SETPNEu"
    "32rr\000SETPNEu32rr_and_not_r\000SETPNEu32rr_and_r\000SETPNEu32rr_or_no"
    "t_r\000SETPNEu32rr_or_r\000SETPNEu32rr_xor_not_r\000SETPNEu32rr_xor_r\000"
    "SETPNEu64ri\000SETPNEu64ri_and_not_r\000SETPNEu64ri_and_r\000SETPNEu64r"
    "i_or_not_r\000SETPNEu64ri_or_r\000SETPNEu64ri_xor_not_r\000SETPNEu64ri_"
    "xor_r\000SETPNEu64rr\000SETPNEu64rr_and_not_r\000SETPNEu64rr_and_r\000S"
    "ETPNEu64rr_or_not_r\000SETPNEu64rr_or_r\000SETPNEu64rr_xor_not_r\000SET"
    "PNEu64rr_xor_r\000SHLir16\000SHLir32\000SHLir64\000SHLri16\000SHLri32\000"
    "SHLri64\000SHLrr16\000SHLrr32\000SHLrr64\000SRAir16\000SRAir32\000SRAir"
    "64\000SRAri16\000SRAri32\000SRAri64\000SRArr16\000SRArr32\000SRArr64\000"
    "SRLir16\000SRLir32\000SRLir64\000SRLri16\000SRLri32\000SRLri64\000SRLrr"
    "16\000SRLrr32\000SRLrr64\000STACKLOADF32\000STACKLOADF64\000STACKLOADI1"
    "6\000STACKLOADI32\000STACKLOADI64\000STACKSTOREF32\000STACKSTOREF64\000"
    "STACKSTOREI16\000STACKSTOREI32\000STACKSTOREI64\000STgf32ii32\000STgf32"
    "ii64\000STgf32ri32\000STgf32ri64\000STgf32rr32\000STgf32rr64\000STgf64i"
    "i32\000STgf64ii64\000STgf64ri32\000STgf64ri64\000STgf64rr32\000STgf64rr"
    "64\000STgu16ii32\000STgu16ii64\000STgu16ri32\000STgu16ri64\000STgu16rr3"
    "2\000STgu16rr64\000STgu32ii32\000STgu32ii64\000STgu32ri32\000STgu32ri64"
    "\000STgu32rr32\000STgu32rr64\000STgu64ii32\000STgu64ii64\000STgu64ri32\000"
    "STgu64ri64\000STgu64rr32\000STgu64rr64\000STlf32ii32\000STlf32ii64\000S"
    "Tlf32ri32\000STlf32ri64\000STlf32rr32\000STlf32rr64\000STlf64ii32\000ST"
    "lf64ii64\000STlf64ri32\000STlf64ri64\000STlf64rr32\000STlf64rr64\000STl"
    "u16ii32\000STlu16ii64\000STlu16ri32\000STlu16ri64\000STlu16rr32\000STlu"
    "16rr64\000STlu32ii32\000STlu32ii64\000STlu32ri32\000STlu32ri64\000STlu3"
    "2rr32\000STlu32rr64\000STlu64ii32\000STlu64ii64\000STlu64ri32\000STlu64"
    "ri64\000STlu64rr32\000STlu64rr64\000STpiF32\000STpiF64\000STpiPred\000S"
    "TpiU16\000STpiU32\000STpiU64\000STsf32ii32\000STsf32ii64\000STsf32ri32\000"
    "STsf32ri64\000STsf32rr32\000STsf32rr64\000STsf64ii32\000STsf64ii64\000S"
    "Tsf64ri32\000STsf64ri64\000STsf64rr32\000STsf64rr64\000STsu16ii32\000ST"
    "su16ii64\000STsu16ri32\000STsu16ri64\000STsu16rr32\000STsu16rr64\000STs"
    "u32ii32\000STsu32ii64\000STsu32ri32\000STsu32ri64\000STsu32rr32\000STsu"
    "32rr64\000STsu64ii32\000STsu64ii64\000STsu64ri32\000STsu64ri64\000STsu6"
    "4rr32\000STsu64rr64\000SUBri16\000SUBri32\000SUBri64\000SUBrr16\000SUBr"
    "r32\000SUBrr64\000XORri16\000XORri32\000XORri64\000XORripreds\000XORrr1"
    "6\000XORrr32\000XORrr64\000XORrrpreds\000";
  return Strs+InstAsmOffset[Opcode];
}

#endif
